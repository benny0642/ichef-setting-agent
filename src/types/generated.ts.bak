import { GraphQLClient, RequestOptions } from 'graphql-request';
import gql from 'graphql-tag';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
type GraphQLClientRequestHeaders = RequestOptions['requestHeaders'];
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  AbsoluteValueDecimalStr: { input: string; output: string; }
  AddPositiveSignDecimalStr: { input: string; output: string; }
  AllowUnicodeAndDefaultValueUUID: { input: string; output: string; }
  DBIntToAPIBoolean: { input: boolean; output: boolean; }
  Date: { input: string; output: string; }
  DateTime: { input: string; output: string; }
  Decimal: { input: string; output: string; }
  Dictionary: { input: Record<string, any>; output: Record<string, any>; }
  EmptyAsNoneString: { input: string; output: string; }
  GenericScalar: { input: any; output: any; }
  JSONString: { input: string; output: string; }
  ReverseNumberSignDecimalStr: { input: string; output: string; }
  StripString: { input: string; output: string; }
  Time: { input: string; output: string; }
  UTCDateTime: { input: string; output: string; }
  UUID: { input: string; output: string; }
  UUIDForText: { input: string; output: string; }
  Upload: { input: File | Blob; output: File; }
};

export type AcceptHqInvitationUnionType = HqIsOfflineError | InvitationHasBeenCanceledError | OkOutput | UnhandledError;

export type AcceptedOrdersValidatedDataOutput = {
  __typename?: 'AcceptedOrdersValidatedDataOutput';
  /** 餐點價格 */
  oriTotalAmount?: Maybe<Scalars['String']['output']>;
  /** 服務費 */
  serviceCharge?: Maybe<Scalars['String']['output']>;
  /** 服務費 % 數 */
  serviceChargePercentage?: Maybe<Scalars['String']['output']>;
  /** 總計金額 */
  totalAmount?: Maybe<Scalars['String']['output']>;
  /** 稅額 */
  totalTax?: Maybe<Scalars['String']['output']>;
};

export type AccountRecoveryMutation = {
  __typename?: 'AccountRecoveryMutation';
  resetPassword?: Maybe<ResetPasswordOutput>;
  sendResetPasswordEmail?: Maybe<SendResetPasswordEmailMutation>;
};


export type AccountRecoveryMutationResetPasswordArgs = {
  payload: ResetPasswordPayload;
};


export type AccountRecoveryMutationSendResetPasswordEmailArgs = {
  loginId: Scalars['String']['input'];
  storeId: Scalars['String']['input'];
};

export type AccountRecoveryQuery = {
  __typename?: 'AccountRecoveryQuery';
  oneTimeCodeCheck?: Maybe<ResetPasswordOutput>;
  oneTimeCodeInformation?: Maybe<OneTimeCodeInformationOutput>;
};


export type AccountRecoveryQueryOneTimeCodeCheckArgs = {
  oneTimeCode?: InputMaybe<Scalars['String']['input']>;
};


export type AccountRecoveryQueryOneTimeCodeInformationArgs = {
  oneTimeCode?: InputMaybe<Scalars['String']['input']>;
};

export type AccountReportQuery = {
  __typename?: 'AccountReportQuery';
  closeAccount?: Maybe<CloseAccountReportPagingObjectType>;
  dailyAccount?: Maybe<DailyAccountReportPagingObjectType>;
};


export type AccountReportQueryCloseAccountArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  queryFilter?: InputMaybe<ReportBaseQueryFilters>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


export type AccountReportQueryDailyAccountArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  queryFilter?: InputMaybe<ReportBaseQueryFilters>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export enum AccountTypeEnum {
  Active = 'ACTIVE',
  Demo = 'DEMO'
}

export type AcknowledgeFirebaseNotificationOutput = {
  __typename?: 'AcknowledgeFirebaseNotificationOutput';
  referencePath?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['String']['output']>;
  value?: Maybe<Scalars['String']['output']>;
};

export enum ActivationStatusEnum {
  BothDisabled = 'BOTH_DISABLED',
  BothEnabled = 'BOTH_ENABLED',
  WebEnabledIpadDisabled = 'WEB_ENABLED_IPAD_DISABLED'
}

export type AddOnModuleOutput = {
  __typename?: 'AddOnModuleOutput';
  /** Only for Foodpanda */
  canRenewModule?: Maybe<Scalars['Boolean']['output']>;
  /** The date is not included. (Timezone is restaurant region) */
  endDate?: Maybe<Scalars['Date']['output']>;
  moduleStatus?: Maybe<IPfModuleStatus>;
  moduleType?: Maybe<IPfModuleType>;
  params?: Maybe<AddOnModuleParamsOutput>;
  /** The date is included. (Timezone is restaurant region) */
  startDate?: Maybe<Scalars['Date']['output']>;
  storeId?: Maybe<Scalars['String']['output']>;
};

export type AddOnModuleParamsOutput = {
  __typename?: 'AddOnModuleParamsOutput';
  /** Only for Foodpanda */
  isIntegrated?: Maybe<Scalars['Boolean']['output']>;
  modulePlan?: Maybe<IPfModulePlan>;
  /** Translate by module_plan and only for display now */
  modulePlanName?: Maybe<Scalars['String']['output']>;
  quotaAmount?: Maybe<Scalars['Int']['output']>;
  usedQuotaAmount?: Maybe<Scalars['Int']['output']>;
};

export enum AllHqBranchModules {
  BranchPurchasing = 'BRANCH_PURCHASING',
  Core = 'CORE',
  Member = 'MEMBER'
}

export type AllSelectedMemberUndeletableError = {
  __typename?: 'AllSelectedMemberUndeletableError';
  undeletableMemberCount?: Maybe<Scalars['Int']['output']>;
};

export type AmountSummaryOutput = {
  __typename?: 'AmountSummaryOutput';
  depositAmount?: Maybe<Scalars['Decimal']['output']>;
  needServiceChargeItemAmount?: Maybe<Scalars['Decimal']['output']>;
  oriTotalAmount?: Maybe<Scalars['Decimal']['output']>;
  serviceCharge?: Maybe<Scalars['Decimal']['output']>;
  serviceChargePercentage?: Maybe<Scalars['Decimal']['output']>;
  totalAmount?: Maybe<Scalars['Decimal']['output']>;
  totalTax?: Maybe<Scalars['Decimal']['output']>;
};

export type AmountThresholdInput = {
  amount: Scalars['Decimal']['input'];
  headcountThreshold: Scalars['Int']['input'];
};

export type ApplePayOutput = {
  __typename?: 'ApplePayOutput';
  errorCode?: Maybe<Scalars['String']['output']>;
};

export type ApplyFoodpandaIntegrationInput = {
  contactEmail: Scalars['String']['input'];
  foodpandaLink: Scalars['String']['input'];
  isAgreeNotice: Scalars['Boolean']['input'];
};

export type ApplyFoodpandaIntegrationMutation = {
  __typename?: 'ApplyFoodpandaIntegrationMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ApplyUbereatsIntegrationInput = {
  ubereatsStoreId: Scalars['String']['input'];
  ubereatsStoreName: Scalars['String']['input'];
};

export type ApplyUbereatsIntegrationMutation = {
  __typename?: 'ApplyUbereatsIntegrationMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

/**
 *
 *         Expected flow: Form not filled -> filled -> done.
 *
 */
export enum ApplyingStatus {
  Done = 'DONE',
  FormFilled = 'FORM_FILLED',
  FormNotFilled = 'FORM_NOT_FILLED'
}

export type AudienceMutation = {
  __typename?: 'AudienceMutation';
  countAndGenerateAudience?: Maybe<AudienceObjectType>;
  createAudience?: Maybe<AudienceObjectType>;
  createAudienceSearchSet?: Maybe<AudienceSearchSetObjectType>;
  deleteAudience?: Maybe<AudienceObjectType>;
  deleteAudienceSearchSet?: Maybe<AudienceSearchSetObjectType>;
  syncAudienceToPlatform?: Maybe<AudienceObjectType>;
  updateAudience?: Maybe<AudienceObjectType>;
  updateAudienceSearchSet?: Maybe<AudienceSearchSetObjectType>;
};


export type AudienceMutationCountAndGenerateAudienceArgs = {
  uuid: Scalars['UUID']['input'];
};


export type AudienceMutationCreateAudienceArgs = {
  payload?: InputMaybe<AudienceMutationPayload>;
};


export type AudienceMutationCreateAudienceSearchSetArgs = {
  payload?: InputMaybe<AudienceSearchSetMutationPayload>;
};


export type AudienceMutationDeleteAudienceArgs = {
  uuid: Scalars['UUID']['input'];
};


export type AudienceMutationDeleteAudienceSearchSetArgs = {
  uuid: Scalars['UUID']['input'];
};


export type AudienceMutationSyncAudienceToPlatformArgs = {
  uuid: Scalars['UUID']['input'];
};


export type AudienceMutationUpdateAudienceArgs = {
  payload?: InputMaybe<AudienceUpdatePayload>;
  uuid: Scalars['UUID']['input'];
};


export type AudienceMutationUpdateAudienceSearchSetArgs = {
  payload?: InputMaybe<UpdateAudienceSearchSetMutationPayload>;
  uuid: Scalars['UUID']['input'];
};

export type AudienceMutationPayload = {
  audienceSearchSetUuid: Scalars['UUID']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  platform: AudiencePlatform;
  visible?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AudienceObjectType = {
  __typename?: 'AudienceObjectType';
  audienceSearchSet?: Maybe<AudienceSearchSetObjectType>;
  description?: Maybe<Scalars['String']['output']>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  flydoveAudience?: Maybe<FlydoveAudienceObjectType>;
  lineAudience?: Maybe<LineAudienceObjectType>;
  message?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  platform?: Maybe<AudiencePlatform>;
  syncStatus?: Maybe<AudienceSyncStatus>;
  targetCount?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
  visible?: Maybe<Scalars['Boolean']['output']>;
};

export enum AudiencePlatform {
  Download = 'DOWNLOAD',
  Flydove = 'FLYDOVE',
  Line = 'LINE'
}

export type AudienceQuery = {
  __typename?: 'AudienceQuery';
  audience?: Maybe<AudienceObjectType>;
  audienceSearchSet?: Maybe<AudienceSearchSetObjectType>;
  audienceSearchSets?: Maybe<Array<Maybe<AudienceSearchSetObjectType>>>;
  audiences?: Maybe<Array<Maybe<AudienceObjectType>>>;
};


export type AudienceQueryAudienceArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type AudienceQueryAudienceSearchSetArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type AudienceQueryFilter = {
  address?: InputMaybe<TextFilterQueryType>;
  age?: InputMaybe<NumberRangeFilterQueryType>;
  averageCycle?: InputMaybe<NumberRangeFilterQueryType>;
  averageSpending?: InputMaybe<NumberRangeFilterQueryType>;
  birth?: InputMaybe<BirthFilterQueryType>;
  coupon?: InputMaybe<CouponFilterQueryType>;
  email?: InputMaybe<TextFilterQueryType>;
  facebookConnected?: InputMaybe<BooleanFilterQueryType>;
  gender?: InputMaybe<SelectStringFilterQueryType>;
  lastVisit?: InputMaybe<DatetimeRangeFilterType>;
  lineConnected?: InputMaybe<BooleanFilterQueryType>;
  memberPoints?: InputMaybe<NumberRangeFilterQueryType>;
  memberType?: InputMaybe<SelectFloatFilterQueryType>;
  mobile?: InputMaybe<TextFilterQueryType>;
  name?: InputMaybe<TextFilterQueryType>;
  note?: InputMaybe<TextFilterQueryType>;
  purchasedItem?: InputMaybe<UuidFilterQueryTypeWithDateRange>;
  tel?: InputMaybe<TextFilterQueryType>;
  totalSpending?: InputMaybe<NumberRangeFilterQueryTypeWithDateRange>;
  totalVisit?: InputMaybe<NumberRangeFilterQueryTypeWithDateRange>;
};

export type AudienceSearchSetMutationPayload = {
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  queryFilter: AudienceQueryFilter;
};

export type AudienceSearchSetObjectType = {
  __typename?: 'AudienceSearchSetObjectType';
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  filterJson?: Maybe<Scalars['Dictionary']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export enum AudienceSyncStatus {
  Deleted = 'DELETED',
  FailedOnListCreating = 'FAILED_ON_LIST_CREATING',
  FailedOnSyncing = 'FAILED_ON_SYNCING',
  Prepared = 'PREPARED',
  Preparing = 'PREPARING',
  Synced = 'SYNCED'
}

export type AudienceUpdatePayload = {
  audienceSearchSetUuid?: InputMaybe<Scalars['UUID']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  platform?: InputMaybe<AudiencePlatform>;
  visible?: InputMaybe<Scalars['Boolean']['input']>;
};

export type AuthCategoryDjangoObjectType = {
  __typename?: 'AuthCategoryDjangoObjectType';
  authCategory: Array<DiscountOutput>;
  cancelInvoice: Scalars['Int']['output'];
  cancelOrderItem: Scalars['Int']['output'];
  changeDefaultDiscount: Scalars['Int']['output'];
  checkOut: Scalars['Int']['output'];
  closeAccount: Scalars['Int']['output'];
  customerGroupBatchExit: Scalars['Int']['output'];
  dailyAccount: Scalars['Int']['output'];
  deleteGroup: Scalars['Int']['output'];
  editVirtualCashDrawer: Scalars['Int']['output'];
  groupToKitchen: Scalars['Int']['output'];
  headquarter?: Maybe<HeadQuarterType>;
  id: Scalars['ID']['output'];
  instoreAutoAcceptOrder: Scalars['Int']['output'];
  instoreAutoPrintSessionQrCode: Scalars['Int']['output'];
  issueCreditNote: Scalars['Int']['output'];
  loginIpad: Scalars['Int']['output'];
  loginWeb: Scalars['Int']['output'];
  mealPreparationTime: Scalars['Int']['output'];
  moneybox: Scalars['Int']['output'];
  name?: Maybe<Scalars['String']['output']>;
  onlineRestaurantDeliveryOrderOperation: Scalars['Int']['output'];
  onlineRestaurantTakeoutOrderOperation: Scalars['Int']['output'];
  openGroup: Scalars['Int']['output'];
  originCategory: Scalars['Int']['output'];
  paymentAuthCategory: Array<LegacyPaymentOutput>;
  paymentManualConfirmAuthCategory: Array<LegacyPaymentOutput>;
  reportEmail: Scalars['Int']['output'];
  reservationOrderEnabled: Scalars['Int']['output'];
  restaurant?: Maybe<RestaurantType>;
  restaurantIsOpening: Scalars['Int']['output'];
  serviceAuthCategory: Array<ServiceChargeObject>;
  usePayment: Scalars['Int']['output'];
  usePriceTag: Scalars['Int']['output'];
  uuid: Scalars['String']['output'];
  viewClosing: Scalars['Int']['output'];
};

export type AuthorizationInfoOutput = {
  __typename?: 'AuthorizationInfoOutput';
  intervalEndAt?: Maybe<Scalars['String']['output']>;
  intervalStartAt?: Maybe<Scalars['String']['output']>;
  status?: Maybe<AuthorizationStatusEnum>;
};

export enum AuthorizationStatusEnum {
  Authorized = 'AUTHORIZED',
  Expired = 'EXPIRED',
  None = 'NONE',
  NotStartedYet = 'NOT_STARTED_YET'
}

export type AutoSyncMenuMutation = {
  __typename?: 'AutoSyncMenuMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type AutoSyncMenuToOnlineOrderingMutation = {
  __typename?: 'AutoSyncMenuToOnlineOrderingMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type AutoSyncMenuToOnlineRestaurantMutation = {
  __typename?: 'AutoSyncMenuToOnlineRestaurantMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type AutoSyncUbereatsV2MenuMutation = {
  __typename?: 'AutoSyncUbereatsV2MenuMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type AutomationSettingOutput = {
  __typename?: 'AutomationSettingOutput';
  isAutoImportInvoice?: Maybe<Scalars['Boolean']['output']>;
  isAutoUploadUnusedInvoice?: Maybe<Scalars['Boolean']['output']>;
};

export type AvailableAttributesOutput = {
  __typename?: 'AvailableAttributesOutput';
  menuUrl?: Maybe<Scalars['Boolean']['output']>;
  orderUrl?: Maybe<Scalars['Boolean']['output']>;
};

export type AvailableTableType = {
  __typename?: 'AvailableTableType';
  availableTableEntityUuids?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  diningTimeStart?: Maybe<Scalars['DateTime']['output']>;
  mealTimeLimit?: Maybe<Scalars['Int']['output']>;
};

export type BasicGroupByBranchOutput = {
  __typename?: 'BasicGroupByBranchOutput';
  restaurantName?: Maybe<Scalars['String']['output']>;
  restaurantStoreId?: Maybe<Scalars['String']['output']>;
  summary?: Maybe<SummaryOutput>;
};

export type BasicSalesPayloadOutput = {
  __typename?: 'BasicSalesPayloadOutput';
  branches?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  compareDateTimeRanges?: Maybe<Array<Maybe<StartEndDateTimeOutput>>>;
  endDate?: Maybe<Scalars['Date']['output']>;
  endTime?: Maybe<Scalars['Time']['output']>;
  startDate?: Maybe<Scalars['Date']['output']>;
  startTime?: Maybe<Scalars['Time']['output']>;
  timeRangeType?: Maybe<ReportTimeRangeTypes>;
  timeRangeValue?: Maybe<Scalars['Int']['output']>;
};

export type BatchDeleteMutation = {
  __typename?: 'BatchDeleteMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type BatchDeleteUbereatsV2Mutation = {
  __typename?: 'BatchDeleteUbereatsV2Mutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type BatchUpdateReservationTableEntities = {
  __typename?: 'BatchUpdateReservationTableEntities';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type BatchUpdateReservations = {
  __typename?: 'BatchUpdateReservations';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type BatchUpdateReservationsInput = {
  tableEntityUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  userUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type BindGmbInput = {
  email?: InputMaybe<Scalars['String']['input']>;
  locationId?: InputMaybe<Scalars['String']['input']>;
};

export type BirthFilterQueryType = {
  condition?: InputMaybe<BirthdayFilterTypes>;
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  /** Don't modify if you're not using customized filter */
  type?: InputMaybe<Scalars['String']['input']>;
};

export enum BirthdayFilterTypes {
  DateRange = 'DATE_RANGE'
}

export type BooleanFilterQueryType = {
  type?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['Boolean']['input']>;
};

export type BranchAlreadyUnderMemberSharingError = {
  __typename?: 'BranchAlreadyUnderMemberSharingError';
  message?: Maybe<Scalars['String']['output']>;
};

export type BranchBusinessSummaryOutput = {
  __typename?: 'BranchBusinessSummaryOutput';
  avgOrderPrice?: Maybe<Scalars['Decimal']['output']>;
  branchAmountPercentage?: Maybe<Scalars['String']['output']>;
  restaurantName?: Maybe<Scalars['String']['output']>;
  restaurantStoreId?: Maybe<Scalars['String']['output']>;
  summaryAmount?: Maybe<Scalars['Decimal']['output']>;
  summaryInvoiceCount?: Maybe<Scalars['Int']['output']>;
};

export type BranchCreateUpdateInput = {
  address: Scalars['String']['input'];
  contactNumber: Scalars['String']['input'];
  contactPerson: Scalars['String']['input'];
  name: Scalars['String']['input'];
  shopUuid: Scalars['UUID']['input'];
  uniTaxId?: InputMaybe<Scalars['String']['input']>;
  uniTaxName?: InputMaybe<Scalars['String']['input']>;
};

export type BranchFieldError = {
  __typename?: 'BranchFieldError';
  loginId?: Maybe<HqInviteBranchCheckLoginIdFieldsErrorUnionType>;
  storeId?: Maybe<HqInviteBranchCheckStoreIdFieldsErrorUnionType>;
};

export type BranchInput = {
  loginId: Scalars['String']['input'];
  storeId: Scalars['String']['input'];
};

export type BranchMappedWithPlatformsType = {
  __typename?: 'BranchMappedWithPlatformsType';
  branchName?: Maybe<Scalars['String']['output']>;
  branchStoreId?: Maybe<Scalars['String']['output']>;
  platforms?: Maybe<Array<Maybe<PlatformTypes>>>;
};

export type BranchMemberMergeFailError = {
  __typename?: 'BranchMemberMergeFailError';
  message?: Maybe<Scalars['String']['output']>;
};

export type BranchMemberMergeStillRunningError = {
  __typename?: 'BranchMemberMergeStillRunningError';
  message?: Maybe<Scalars['String']['output']>;
};

export type BranchOrderType = Node & {
  __typename?: 'BranchOrderType';
  branch?: Maybe<BranchSnapshotInOrderType>;
  createdAt?: Maybe<Scalars['UTCDateTime']['output']>;
  deliveryGroups?: Maybe<Array<DeliveryGroupInOrderForBranchType>>;
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  note: Scalars['String']['output'];
  orderDisplayId: Scalars['String']['output'];
  status: OrderStatus;
  totalAmount?: Maybe<Scalars['Decimal']['output']>;
  totalDeliveryFee?: Maybe<Scalars['Decimal']['output']>;
  totalItemAmount?: Maybe<Scalars['Decimal']['output']>;
  totalItemCount: Scalars['Int']['output'];
  totalTaxAmount?: Maybe<Scalars['Decimal']['output']>;
  user?: Maybe<BranchUserSnapshotInOrderType>;
  uuid: Scalars['UUID']['output'];
};

export type BranchOrderTypeConnection = {
  __typename?: 'BranchOrderTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<BranchOrderTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `BranchOrderType` and its cursor. */
export type BranchOrderTypeEdge = {
  __typename?: 'BranchOrderTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<BranchOrderType>;
};

export type BranchOutput = {
  __typename?: 'BranchOutput';
  activationStatus?: Maybe<ActivationStatusEnum>;
  associatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  integratedPlatforms?: Maybe<Array<Maybe<PlatformTypes>>>;
  isPlan?: Maybe<Scalars['Boolean']['output']>;
  latestDumpSettingToIpadAt?: Maybe<Scalars['UTCDateTime']['output']>;
  latestSyncFinishedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  modules?: Maybe<Array<Maybe<HqBranchOutput>>>;
  name?: Maybe<Scalars['String']['output']>;
  relationshipStatus?: Maybe<BranchRelationshipStatusTypes>;
  storeId?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type BranchPurchasing = {
  __typename?: 'BranchPurchasing';
  branches?: Maybe<BranchTypeConnection>;
  deliveryGroupItems?: Maybe<DeliveryGroupItemsTypeConnection>;
  deliveryGroups?: Maybe<DeliveryGroupTypeConnection>;
  hqInformation?: Maybe<HqInformationType>;
  orders?: Maybe<OrderTypeConnection>;
  productCategories?: Maybe<CategoryTypeConnection>;
  products?: Maybe<ItemTypeConnection>;
  shops?: Maybe<ShopTypeConnection>;
  suppliers?: Maybe<SupplierTypeConnection>;
};


export type BranchPurchasingBranchesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type BranchPurchasingDeliveryGroupItemsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  createdDateFrom?: InputMaybe<Scalars['Date']['input']>;
  createdDateTo?: InputMaybe<Scalars['Date']['input']>;
  deliveryGroup_Order_Branch_OriginalUuid_In?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  deliveryGroup_Status_In?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  deliveryGroup_Supplier_OriginalUuid_In?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  taxType_In?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type BranchPurchasingDeliveryGroupsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  createdDateFrom?: InputMaybe<Scalars['Date']['input']>;
  createdDateTo?: InputMaybe<Scalars['Date']['input']>;
  displayId_Icontains?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  isDeliveryFeeUndetermined?: InputMaybe<Scalars['Boolean']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_Branch_OriginalUuid_In?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  status_In?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  supplier_OriginalUuid_In?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type BranchPurchasingOrdersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  branch_OriginalUuid_In?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  createdDateFrom?: InputMaybe<Scalars['Date']['input']>;
  createdDateTo?: InputMaybe<Scalars['Date']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  isDeliveryFeeUndetermined?: InputMaybe<Scalars['Boolean']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderDisplayId_Icontains?: InputMaybe<Scalars['String']['input']>;
  status_In?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type BranchPurchasingProductCategoriesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type BranchPurchasingProductsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  category_Uuid_In?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  first?: InputMaybe<Scalars['Int']['input']>;
  isStockBelowThreshold?: InputMaybe<Scalars['Boolean']['input']>;
  isStockSufficient?: InputMaybe<Scalars['Boolean']['input']>;
  itemInShops_Shop_Uuid?: InputMaybe<Scalars['UUID']['input']>;
  itemInShops_Status_In?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  refrigeration_In?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  supplier_Uuid_In?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  taxType_In?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type BranchPurchasingShopsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type BranchPurchasingSuppliersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type BranchPurchasingCartInput = {
  note: Scalars['String']['input'];
};

export type BranchPurchasingCartItemInput = {
  itemUuid: Scalars['UUID']['input'];
  /** set 0 to remove item from cart. */
  quantity: Scalars['Int']['input'];
};

export type BranchPurchasingMutation = {
  __typename?: 'BranchPurchasingMutation';
  copyProduct?: Maybe<CopyProduct>;
  createBranch?: Maybe<CreateBranch>;
  createBranchUser?: Maybe<CreateBranchUser>;
  /** Create a new item with category and supplier */
  createProduct?: Maybe<CreateProduct>;
  createProductCategory?: Maybe<CreateProductCategory>;
  createSupplier?: Maybe<CreateSupplier>;
  deleteBranch?: Maybe<DeleteBranch>;
  deleteProduct?: Maybe<DeleteProduct>;
  deleteProductCategory?: Maybe<DeleteProductCategory>;
  deleteSupplier?: Maybe<DeleteSupplier>;
  deleteUserFromBranch?: Maybe<DeleteUserFromBranch>;
  deliveryGroupMarkShipping?: Maybe<DeliveryGroupsMarkShipping>;
  editDeliveryFee?: Maybe<DeliveryFeeEdit>;
  editHqNote?: Maybe<HqNoteEdit>;
  orderMarkCancelled?: Maybe<OrdersMarkCancelled>;
  orderMarkInProgress?: Maybe<OrdersMarkInProgress>;
  orderMarkShipping?: Maybe<OrdersMarkShipping>;
  productFileUpload?: Maybe<ProductFileUpload>;
  reorderProduct?: Maybe<ReorderProduct>;
  reorderProductCategory?: Maybe<ReorderProductCategory>;
  reorderSupplier?: Maybe<ReorderSupplier>;
  updateBranch?: Maybe<UpdateBranch>;
  updateHqInformation?: Maybe<UpdateHqInformation>;
  updateProduct?: Maybe<UpdateProduct>;
  updateProductCategory?: Maybe<UpdateProductCategory>;
  updateProductStatus?: Maybe<UpdateProductStatus>;
  updateShop?: Maybe<UpdateShop>;
  updateSupplier?: Maybe<UpdateSupplier>;
};


export type BranchPurchasingMutationCopyProductArgs = {
  uuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationCreateBranchArgs = {
  payload: BranchCreateUpdateInput;
};


export type BranchPurchasingMutationCreateBranchUserArgs = {
  payload: BranchUserCreateInput;
};


export type BranchPurchasingMutationCreateProductArgs = {
  payload: ProductCreateInput;
};


export type BranchPurchasingMutationCreateProductCategoryArgs = {
  payload: ProductCategoryInput;
};


export type BranchPurchasingMutationCreateSupplierArgs = {
  payload: SupplierCreateInput;
};


export type BranchPurchasingMutationDeleteBranchArgs = {
  uuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationDeleteProductArgs = {
  uuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationDeleteProductCategoryArgs = {
  uuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationDeleteSupplierArgs = {
  uuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationDeleteUserFromBranchArgs = {
  branchUserUuid: Scalars['UUID']['input'];
  branchUuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationDeliveryGroupMarkShippingArgs = {
  deliveryGroupUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};


export type BranchPurchasingMutationEditDeliveryFeeArgs = {
  deliveryFee: Scalars['Decimal']['input'];
  deliveryGroupUuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationEditHqNoteArgs = {
  hqNote: Scalars['String']['input'];
  orderUuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationOrderMarkCancelledArgs = {
  orderUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};


export type BranchPurchasingMutationOrderMarkInProgressArgs = {
  orderUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};


export type BranchPurchasingMutationOrderMarkShippingArgs = {
  orderUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};


export type BranchPurchasingMutationProductFileUploadArgs = {
  file: Scalars['Upload']['input'];
};


export type BranchPurchasingMutationReorderProductArgs = {
  productReorderedCategories: Array<InputMaybe<ReorderProductUnderCategory>>;
};


export type BranchPurchasingMutationReorderProductCategoryArgs = {
  orderedProductCategoryUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};


export type BranchPurchasingMutationReorderSupplierArgs = {
  orderedSupplierUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};


export type BranchPurchasingMutationUpdateBranchArgs = {
  payload: BranchCreateUpdateInput;
  uuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationUpdateHqInformationArgs = {
  payload: HqInformationUpdateInput;
};


export type BranchPurchasingMutationUpdateProductArgs = {
  payload: ProductUpdateInput;
  uuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationUpdateProductCategoryArgs = {
  payload: ProductCategoryInput;
  uuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationUpdateProductStatusArgs = {
  status: ProductStatusType;
  uuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationUpdateShopArgs = {
  payload: ShopUpdateInput;
  uuid: Scalars['UUID']['input'];
};


export type BranchPurchasingMutationUpdateSupplierArgs = {
  payload: SupplierCreateInput;
  uuid: Scalars['UUID']['input'];
};

export type BranchPurchasingUserMutation = {
  __typename?: 'BranchPurchasingUserMutation';
  changeEmail?: Maybe<ChangeEmail>;
  changeName?: Maybe<ChangeName>;
};


export type BranchPurchasingUserMutationChangeEmailArgs = {
  email: Scalars['String']['input'];
};


export type BranchPurchasingUserMutationChangeNameArgs = {
  name: Scalars['String']['input'];
};

export enum BranchRelationshipStatusTypes {
  Associated = 'ASSOCIATED',
  Disassociated = 'DISASSOCIATED'
}

export type BranchReplyInvitationResultOutput = {
  __typename?: 'BranchReplyInvitationResultOutput';
  currentReceivedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  failedInvitations?: Maybe<Array<Maybe<FailedInvitationResultOutput>>>;
  successInvitations?: Maybe<Array<Maybe<SuccessInvitationResultOutput>>>;
};

export type BranchSideMutation = {
  __typename?: 'BranchSideMutation';
  checkInViaMobile?: Maybe<CheckInViaBranchUserMobileOutput>;
  checkMobileVerificationCode?: Maybe<MobileVerificationCodeCheckOutput>;
  finishRegistration?: Maybe<BranchUserSignInOutput>;
  resetPassword?: Maybe<BranchUserSignInOutput>;
  sendMobileVerificationCode?: Maybe<CheckInViaBranchUserMobileOutput>;
  signInViaMobile?: Maybe<BranchUserSignInOutput>;
};


export type BranchSideMutationCheckInViaMobileArgs = {
  payload?: InputMaybe<CheckInViaBranchUserMobileInput>;
};


export type BranchSideMutationCheckMobileVerificationCodeArgs = {
  payload?: InputMaybe<MobileVerificationCodeCheckInput>;
};


export type BranchSideMutationFinishRegistrationArgs = {
  payload?: InputMaybe<FinishRegistrationInput>;
};


export type BranchSideMutationResetPasswordArgs = {
  payload?: InputMaybe<ResetBranchUserPasswordInput>;
};


export type BranchSideMutationSendMobileVerificationCodeArgs = {
  payload?: InputMaybe<CheckInViaBranchUserMobileInput>;
};


export type BranchSideMutationSignInViaMobileArgs = {
  payload?: InputMaybe<BranchUserSignInInput>;
};

export type BranchSideQuery = {
  __typename?: 'BranchSideQuery';
  hqInformation?: Maybe<HqInformationTypeOnBranchSide>;
  uuid?: Maybe<Scalars['String']['output']>;
};

export type BranchSnapshotInOrderType = {
  __typename?: 'BranchSnapshotInOrderType';
  address: Scalars['String']['output'];
  contactNumber: Scalars['String']['output'];
  contactPerson: Scalars['String']['output'];
  name: Scalars['String']['output'];
  originalUuid: Scalars['UUID']['output'];
  shopOriginalUuid: Scalars['UUID']['output'];
  uniTaxId: Scalars['String']['output'];
  uniTaxName: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
};

export type BranchType = Node & {
  __typename?: 'BranchType';
  address: Scalars['String']['output'];
  contactNumber: Scalars['String']['output'];
  contactPerson: Scalars['String']['output'];
  createdAt?: Maybe<Scalars['UTCDateTime']['output']>;
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  shop: ShopType;
  uniTaxId: Scalars['String']['output'];
  uniTaxName: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  userCount?: Maybe<Scalars['Int']['output']>;
  users: Array<BranchUserType>;
  uuid: Scalars['UUID']['output'];
};

export type BranchTypeConnection = {
  __typename?: 'BranchTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<BranchTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `BranchType` and its cursor. */
export type BranchTypeEdge = {
  __typename?: 'BranchTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<BranchType>;
};

export type BranchUserCreateInput = {
  branchUuid: Scalars['UUID']['input'];
  mobile: Scalars['String']['input'];
};

export type BranchUserSignInInput = {
  mobile: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

export type BranchUserSignInOutput = {
  __typename?: 'BranchUserSignInOutput';
  branchUserUuid?: Maybe<Scalars['UUID']['output']>;
  token?: Maybe<Scalars['String']['output']>;
};

export type BranchUserSnapshotInOrderType = {
  __typename?: 'BranchUserSnapshotInOrderType';
  activatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  email: Scalars['String']['output'];
  isHqUser: Scalars['Boolean']['output'];
  mobile: Scalars['String']['output'];
  name: Scalars['String']['output'];
  originalUuid: Scalars['UUID']['output'];
  uuid: Scalars['UUID']['output'];
};

export type BranchUserType = {
  __typename?: 'BranchUserType';
  activatedAt?: Maybe<Scalars['DateTime']['output']>;
  createdAt?: Maybe<Scalars['UTCDateTime']['output']>;
  email: Scalars['String']['output'];
  isHqUser: Scalars['Boolean']['output'];
  mobile: Scalars['String']['output'];
  name: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type BranchWithInvitingOutput = {
  __typename?: 'BranchWithInvitingOutput';
  modules?: Maybe<Array<Maybe<HqBranchModulesUnionType>>>;
  name?: Maybe<Scalars['String']['output']>;
  storeId?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export enum BranchWithInvitingStatusTypes {
  Associated = 'ASSOCIATED',
  InvitationSent = 'INVITATION_SENT'
}

export type Brand = {
  __typename?: 'Brand';
  crm?: Maybe<BrandCrm>;
  publicId?: Maybe<Scalars['String']['output']>;
};

export type BrandCrm = {
  __typename?: 'BrandCrm';
  landingPageSetting?: Maybe<HeadquarterHqUnionType>;
};

export type BrandCrmMutation = {
  __typename?: 'BrandCrmMutation';
  landingPageSetting?: Maybe<UpdateLandingPageSetting>;
};


export type BrandCrmMutationLandingPageSettingArgs = {
  payload: LandingPageSettingInput;
  uuid: Scalars['UUID']['input'];
};

export type BrandMutation = {
  __typename?: 'BrandMutation';
  crm?: Maybe<BrandCrmMutation>;
};

export type BrowsableAddOnModuleOutput = {
  __typename?: 'BrowsableAddOnModuleOutput';
  additionalPurchaseUnitPrice?: Maybe<Scalars['Decimal']['output']>;
  modulePlan?: Maybe<IPfModulePlan>;
  originalAdditionalPurchaseUnitPrice?: Maybe<Scalars['Decimal']['output']>;
  originalPricePerMonth?: Maybe<Scalars['Decimal']['output']>;
  pricePerMonth?: Maybe<Scalars['Decimal']['output']>;
  quotaAmount?: Maybe<Scalars['Int']['output']>;
  tag?: Maybe<IPfModuleTag>;
};

export enum BusinessInformationReferencePlatform {
  Gmb = 'GMB',
  Instore = 'INSTORE',
  OnlineRestaurant = 'ONLINE_RESTAURANT'
}

export type CrmMembersOutput = {
  __typename?: 'CRMMembersOutput';
  address?: Maybe<Scalars['String']['output']>;
  birth?: Maybe<Scalars['String']['output']>;
  birthYear?: Maybe<Scalars['Int']['output']>;
  disabledBySystem?: Maybe<Scalars['Boolean']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  excludedCoupons?: Maybe<Array<Maybe<CouponSnapshotOutput>>>;
  fbUserId?: Maybe<Scalars['String']['output']>;
  foodieAddress?: Maybe<Scalars['String']['output']>;
  foodieBirthdayDate?: Maybe<Scalars['String']['output']>;
  foodieBirthdayYear?: Maybe<Scalars['Int']['output']>;
  foodieConnected?: Maybe<Scalars['Boolean']['output']>;
  foodieEmail?: Maybe<Scalars['String']['output']>;
  foodieGender?: Maybe<Scalars['String']['output']>;
  foodieName?: Maybe<Scalars['String']['output']>;
  foodieTel?: Maybe<Scalars['String']['output']>;
  gender?: Maybe<Scalars['String']['output']>;
  ipadCreatedAt?: Maybe<Scalars['String']['output']>;
  ipadUpdatedAt?: Maybe<Scalars['String']['output']>;
  isDeleted?: Maybe<Scalars['Boolean']['output']>;
  lastCheckoutAt?: Maybe<Scalars['UTCDateTime']['output']>;
  loyaltyInfo?: Maybe<LoyaltyInfoOutput>;
  memberCouponHistory?: Maybe<Array<Maybe<MemberCouponHistoryOutput>>>;
  memberType?: Maybe<Scalars['Int']['output']>;
  membersMergedIntoCurrent: FoodieCrmMemberTypeConnection;
  mergedInto?: Maybe<FoodieCrmMemberType>;
  mobile?: Maybe<Scalars['String']['output']>;
  mobileCountryCode?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  originStoreName?: Maybe<Scalars['String']['output']>;
  originalMobile?: Maybe<Scalars['String']['output']>;
  pointEventHistory?: Maybe<PointEventHistory>;
  redeemableCoupons?: Maybe<Array<Maybe<CouponSnapshotOutput>>>;
  tel?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
  version?: Maybe<Scalars['String']['output']>;
};


export type CrmMembersOutputMembersMergedIntoCurrentArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  publicId?: InputMaybe<Scalars['String']['input']>;
};


export type CrmMembersOutputPointEventHistoryArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  queryMonth?: InputMaybe<Scalars['Int']['input']>;
  queryYear?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export type CrmQuery = {
  __typename?: 'CRMQuery';
  crossStoreMemberMergeStatus?: Maybe<CrossStoreMemberMergeStatusForBranch>;
  export?: Maybe<Member>;
  ipadSyncMemberList?: Maybe<IPadSyncMemberListOutput>;
  /** CrmMember detail information */
  member?: Maybe<CrmMembersOutput>;
  searchMemberByFbUserId?: Maybe<CrmMemberListOutput>;
  searchMemberByMobile?: Maybe<CrmMemberListOutput>;
};


export type CrmQueryExportArgs = {
  queryFilter?: InputMaybe<MemberQueryFilter>;
};


export type CrmQueryIpadSyncMemberListArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  updateTimeStartFrom?: InputMaybe<Scalars['String']['input']>;
};


export type CrmQueryMemberArgs = {
  uuid: Scalars['UUID']['input'];
};


export type CrmQuerySearchMemberByFbUserIdArgs = {
  fbUserId: Scalars['String']['input'];
};


export type CrmQuerySearchMemberByMobileArgs = {
  mobile: Scalars['String']['input'];
};

export type CancelInviteBranchOutput = {
  __typename?: 'CancelInviteBranchOutput';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type CancelReservation = {
  __typename?: 'CancelReservation';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type CancelSyncMenuEventOutput = {
  __typename?: 'CancelSyncMenuEventOutput';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
  restaurantNames?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type CancelSyncMenuTaskOutput = {
  __typename?: 'CancelSyncMenuTaskOutput';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export enum CancelledBy {
  Customer = 'CUSTOMER',
  Pos = 'POS',
  PosAfterAccepted = 'POS_AFTER_ACCEPTED',
  SystemDenied = 'SYSTEM_DENIED',
  Vendor = 'VENDOR'
}

export type CancelledItemObject = {
  __typename?: 'CancelledItemObject';
  amount?: Maybe<Scalars['String']['output']>;
  count?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type CartDinerOutput = {
  __typename?: 'CartDinerOutput';
  avatar?: Maybe<DinerAvatarEnum>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type CartInput = {
  orderComment?: InputMaybe<Scalars['String']['input']>;
  rootItems?: InputMaybe<Array<InputMaybe<RootItemsInput>>>;
};

export type CartSummary = {
  __typename?: 'CartSummary';
  address?: Maybe<Scalars['String']['output']>;
  branchName?: Maybe<Scalars['String']['output']>;
  contactNumber?: Maybe<Scalars['String']['output']>;
  contactPerson?: Maybe<Scalars['String']['output']>;
  deliveryGroups?: Maybe<Array<Maybe<DeliveryGroupInCart>>>;
  hasInvalidItemsRemoved?: Maybe<Scalars['Boolean']['output']>;
  totalAmount?: Maybe<Scalars['Decimal']['output']>;
  totalDeliveryFee?: Maybe<Scalars['Decimal']['output']>;
  totalItemAmount?: Maybe<Scalars['Decimal']['output']>;
  totalItemCount?: Maybe<Scalars['Int']['output']>;
  uniTaxId?: Maybe<Scalars['String']['output']>;
  uniTaxName?: Maybe<Scalars['String']['output']>;
};

export type CartType = {
  __typename?: 'CartType';
  items?: Maybe<ItemInShopAndCartTypeConnection>;
  note?: Maybe<Scalars['String']['output']>;
  summary?: Maybe<CartSummary>;
};


export type CartTypeItemsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type CategoryBranchSales = {
  __typename?: 'CategoryBranchSales';
  restaurant?: Maybe<RestaurantInfoInSalesDetailReport>;
  salesAmount?: Maybe<Scalars['Decimal']['output']>;
  salesAmountPercentage?: Maybe<Scalars['Decimal']['output']>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  salesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
};

export type CategoryDetailReportOutput = {
  __typename?: 'CategoryDetailReportOutput';
  categoryName?: Maybe<Scalars['String']['output']>;
  deletedDate?: Maybe<Scalars['Date']['output']>;
  restaurant?: Maybe<RestaurantInfoInSalesDetailReport>;
  salesAmount?: Maybe<Scalars['Decimal']['output']>;
  salesBranches?: Maybe<Array<Maybe<CategoryBranchSales>>>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  salesOverview?: Maybe<Array<Maybe<CategoryItemSalesOverview>>>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type CategoryDetailReportQueryPayload = {
  /** If it's Branch Category, FE should provide empty list.If it's HQ Category, FE should provide wanted branch UUIDs. Empty list means all branches.If users come from a URL with category_uuid directly, FE should provide empty list. */
  branches?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  endDate: Scalars['Date']['input'];
  endTime: Scalars['Time']['input'];
  serviceTypes?: InputMaybe<Array<InputMaybe<ServiceTypes>>>;
  startDate: Scalars['Date']['input'];
  startTime: Scalars['Time']['input'];
  /** Category UUID */
  uuid: Scalars['UUID']['input'];
};

export type CategoryGroupReportObject = {
  __typename?: 'CategoryGroupReportObject';
  amountDifference?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  categoryName?: Maybe<Scalars['String']['output']>;
  categoryUuid?: Maybe<Scalars['String']['output']>;
  consumptionAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  countingAmount?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  purchaseAmount?: Maybe<Scalars['String']['output']>;
  returnAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  scrappedAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  usageAmount?: Maybe<Scalars['ReverseNumberSignDecimalStr']['output']>;
};

export enum CategoryGroupReportObjectEnumType {
  AmountDifference = 'AMOUNT_DIFFERENCE',
  CategoryName = 'CATEGORY_NAME',
  CategoryUuid = 'CATEGORY_UUID',
  ConsumptionAmount = 'CONSUMPTION_AMOUNT',
  CountingAmount = 'COUNTING_AMOUNT',
  PurchaseAmount = 'PURCHASE_AMOUNT',
  ReturnAmount = 'RETURN_AMOUNT',
  ScrappedAmount = 'SCRAPPED_AMOUNT',
  UsageAmount = 'USAGE_AMOUNT'
}

/** input without uuid will create a new one */
export type CategoryInput = {
  name?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type CategoryItemSalesOverview = {
  __typename?: 'CategoryItemSalesOverview';
  averageSellingPrice?: Maybe<Scalars['Decimal']['output']>;
  isDeleted?: Maybe<Scalars['Boolean']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  salesAmount?: Maybe<Scalars['Decimal']['output']>;
  salesAmountPercentage?: Maybe<Scalars['Decimal']['output']>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  salesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
  totalSalesCount?: Maybe<Scalars['Int']['output']>;
  totalSalesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
  /** Menuitem UUID which under this category */
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type CategorySettingSnapShotObject = {
  __typename?: 'CategorySettingSnapShotObject';
  id: Scalars['ID']['output'];
  inventorylogSet: Array<InventoryLogObject>;
  name: Scalars['String']['output'];
  sortingIndex: Scalars['Int']['output'];
  uuid: Scalars['UUID']['output'];
};

export type CategoryType = Node & {
  __typename?: 'CategoryType';
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  productCount?: Maybe<Scalars['Int']['output']>;
  sort: Scalars['Int']['output'];
  uuid: Scalars['UUID']['output'];
};

export type CategoryTypeConnection = {
  __typename?: 'CategoryTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<CategoryTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `CategoryType` and its cursor. */
export type CategoryTypeEdge = {
  __typename?: 'CategoryTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<CategoryType>;
};

export type ChangeEmail = {
  __typename?: 'ChangeEmail';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type ChangeEmailForPasswordResetOutput = {
  __typename?: 'ChangeEmailForPasswordResetOutput';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type ChangeEmailForPasswordResetPayload = {
  emailForPasswordReset: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

export type ChangeName = {
  __typename?: 'ChangeName';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type ChangePasswordOutput = {
  __typename?: 'ChangePasswordOutput';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type ChangePasswordPayload = {
  newPassword: Scalars['String']['input'];
  oldPassword: Scalars['String']['input'];
};

export type ChangedLogInput = {
  source?: InputMaybe<Scalars['UUID']['input']>;
  target?: InputMaybe<Scalars['UUID']['input']>;
};

export type ChangedLogMutation = {
  __typename?: 'ChangedLogMutation';
  changedLog?: Maybe<ChangedLogOutput>;
};


export type ChangedLogMutationChangedLogArgs = {
  payload?: InputMaybe<ChangedLogInput>;
};

export type ChangedLogOutput = {
  __typename?: 'ChangedLogOutput';
  ipadAppliedAt?: Maybe<Scalars['UTCDateTime']['output']>;
};

export type ChargedByOrderCreateInput = {
  fee: Scalars['Decimal']['input'];
  freeChargeAmount?: InputMaybe<Scalars['Decimal']['input']>;
};

export type ChargedByOrderType = {
  __typename?: 'ChargedByOrderType';
  fee?: Maybe<Scalars['Decimal']['output']>;
  freeChargeAmount?: Maybe<Scalars['Decimal']['output']>;
};

export type ChargedByQuantityCreateInput = {
  fee: Scalars['Decimal']['input'];
  freeChargeAmount?: InputMaybe<Scalars['Decimal']['input']>;
  freeChargeQuantity?: InputMaybe<Scalars['Int']['input']>;
};

export type ChargedByQuantityType = {
  __typename?: 'ChargedByQuantityType';
  fee?: Maybe<Scalars['Decimal']['output']>;
  freeChargeAmount?: Maybe<Scalars['Decimal']['output']>;
  freeChargeQuantity?: Maybe<Scalars['Int']['output']>;
};

export type ChargedByRefrigerationCreateInput = {
  fee: Scalars['Decimal']['input'];
  freeChargeAmount?: InputMaybe<Scalars['Decimal']['input']>;
  refrigeration: RefrigerationType;
};

export enum ChargedByRefrigerationRefrigeration {
  /** FROZEN */
  Frozen = 'FROZEN',
  /** NORMAL_TEMPERATURE */
  NormalTemperature = 'NORMAL_TEMPERATURE',
  /** REFRIGERATOR */
  Refrigerator = 'REFRIGERATOR'
}

export type ChargedByRefrigerationType = {
  __typename?: 'ChargedByRefrigerationType';
  fee?: Maybe<Scalars['Decimal']['output']>;
  freeChargeAmount?: Maybe<Scalars['Decimal']['output']>;
  refrigeration: ChargedByRefrigerationRefrigeration;
};

export type CheckInViaBranchUserMobileInput = {
  mobile: Scalars['String']['input'];
};

export type CheckInViaBranchUserMobileOutput = {
  __typename?: 'CheckInViaBranchUserMobileOutput';
  isActivated?: Maybe<Scalars['Boolean']['output']>;
  mobile?: Maybe<Scalars['String']['output']>;
};

/** Checkout the shopping cart. */
export type Checkout = {
  __typename?: 'Checkout';
  order?: Maybe<BranchOrderType>;
};

export type CheckoutModifyPointInput = {
  /** Invoice_uuid for this checkout process */
  invoiceUuid: Scalars['UUID']['input'];
  /** define when the user perform this request. */
  issueDate?: InputMaybe<Scalars['DateTime']['input']>;
  /** CrmMember who have this PointEvent */
  memberUuid: Scalars['UUID']['input'];
  pointEvents: Array<CheckoutPointEventInput>;
  /** iCHEFUser who run this operation */
  userUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type CheckoutModule = {
  __typename?: 'CheckoutModule';
  name?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type CheckoutModuleReport = {
  __typename?: 'CheckoutModuleReport';
  events?: Maybe<CheckoutModuleReportEvents>;
  stats?: Maybe<CheckoutModuleReportStats>;
};

export type CheckoutModuleReportEvents = {
  __typename?: 'CheckoutModuleReportEvents';
  list?: Maybe<EventsConnection>;
  summary?: Maybe<CheckoutModuleReportEventsSummary>;
};


export type CheckoutModuleReportEventsListArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export type CheckoutModuleReportEventsSummary = {
  __typename?: 'CheckoutModuleReportEventsSummary';
  avg?: Maybe<PointEventSummaryAvg>;
  sum?: Maybe<PointEventSummarySum>;
};

export type CheckoutModuleReportStats = {
  __typename?: 'CheckoutModuleReportStats';
  list?: Maybe<CheckoutModuleStatsConnection>;
  summary?: Maybe<CheckoutModuleReportStatsSummary>;
};


export type CheckoutModuleReportStatsListArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export type CheckoutModuleReportStatsSummary = {
  __typename?: 'CheckoutModuleReportStatsSummary';
  avg?: Maybe<PointEventStatsSummaryAvg>;
  sum?: Maybe<PointEventStatsSummarySum>;
};

export type CheckoutModuleStatsConnection = {
  __typename?: 'CheckoutModuleStatsConnection';
  nodes?: Maybe<Array<Maybe<PointEventStats>>>;
  pageInfo: PageInformation;
};

export type CheckoutPointEventInput = {
  checkoutEventUuid: Scalars['UUID']['input'];
  delta: Scalars['Int']['input'];
  eventType: GraphqlPointEventType;
  pointEventUuid: Scalars['UUID']['input'];
};

export enum CheckoutSource {
  Foodpanda = 'FOODPANDA',
  Grabfood = 'GRABFOOD',
  OnlineRestaurant = 'ONLINE_RESTAURANT',
  OnSite = 'ON_SITE',
  Ubereats = 'UBEREATS'
}

export type CloseAccountReportObject = {
  __typename?: 'CloseAccountReportObject';
  cancelledItems?: Maybe<Array<Maybe<CancelledItemObject>>>;
  cashExpenseDetails?: Maybe<Array<Maybe<ExpenseDetailObject>>>;
  cashRemittanceAmount?: Maybe<Scalars['String']['output']>;
  cashRetainedAmount?: Maybe<Scalars['String']['output']>;
  cashTotalExpenseAmount?: Maybe<Scalars['String']['output']>;
  closeAccountTime?: Maybe<Scalars['DateTime']['output']>;
  closeAccountUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  invoicesInfo?: Maybe<InvoiceObject>;
  managerName?: Maybe<Scalars['String']['output']>;
  managerUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  payments?: Maybe<Array<Maybe<PaymentObject>>>;
  timeRangeEnd?: Maybe<Scalars['DateTime']['output']>;
  timeRangeStart?: Maybe<Scalars['DateTime']['output']>;
  totalDiscountAmount?: Maybe<Scalars['String']['output']>;
  totalRevenueAmount?: Maybe<Scalars['String']['output']>;
};

export type CloseAccountReportPagingObjectType = {
  __typename?: 'CloseAccountReportPagingObjectType';
  average?: Maybe<CloseAccountReportObject>;
  nodes?: Maybe<Array<Maybe<CloseAccountReportObject>>>;
  pageInfo: PageInformation;
  sum?: Maybe<CloseAccountReportObject>;
};

export enum ColumnLayoutType {
  OneColumn = 'ONE_COLUMN',
  ThreeColumns = 'THREE_COLUMNS',
  TwoColumns = 'TWO_COLUMNS'
}

export type CombineSessionOutputType = {
  __typename?: 'CombineSessionOutputType';
  toSessionUuid: Scalars['UUID']['output'];
};

export type CombineSessionUnionType = CombineSessionOutputType | UnhandledError;

export type ComboBranchSales = {
  __typename?: 'ComboBranchSales';
  restaurant?: Maybe<RestaurantInfoInSalesDetailReport>;
  salesAmount?: Maybe<Scalars['Decimal']['output']>;
  salesAmountPercentage?: Maybe<Scalars['Decimal']['output']>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  salesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
};

export type ComboCategorySales = {
  __typename?: 'ComboCategorySales';
  categoryName?: Maybe<Scalars['String']['output']>;
  salesItems?: Maybe<Array<Maybe<ItemSalesUnderCategoryForCombo>>>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type ComboDetailReportOutput = {
  __typename?: 'ComboDetailReportOutput';
  averageSellingPrice?: Maybe<Scalars['Decimal']['output']>;
  categoryName?: Maybe<Scalars['String']['output']>;
  deletedDate?: Maybe<Scalars['Date']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  restaurant?: Maybe<RestaurantInfoInSalesDetailReport>;
  salesAmount?: Maybe<Scalars['Decimal']['output']>;
  salesBranches?: Maybe<Array<Maybe<ComboBranchSales>>>;
  salesComboCategories?: Maybe<Array<Maybe<ComboCategorySales>>>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type ComboItemCategoryInput = {
  /** Allow user to select the same combo item multiple times, default is False */
  allowRepeatableSelection?: InputMaybe<Scalars['Boolean']['input']>;
  /** How to sort related combo menu item on ComboItemCategory */
  comboMenuItemSortingType?: InputMaybe<Scalars['String']['input']>;
  comboMenuItems?: InputMaybe<Array<InputMaybe<ComboMenuItemInput>>>;
  /** Maximum selection of combo item category, default is 1 */
  maximumSelection?: InputMaybe<Scalars['Int']['input']>;
  /** Minimum selection of combo item category, default is 1 */
  minimumSelection?: InputMaybe<Scalars['Int']['input']>;
  /** Required if not existed */
  name?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['String']['input']>;
};

export type ComboItemCategoryType = {
  __typename?: 'ComboItemCategoryType';
  allowRepeatableSelection: Scalars['Boolean']['output'];
  /** How to sort related combo menu item on ComboItemCategory */
  comboMenuItemSortingType?: Maybe<ComboMenuItemSortingType>;
  comboMenuItemUuidsMappedWithOnlineOrdering?: Maybe<ComboMenuItemUuidsMappedWithOnlineOrdering>;
  comboMenuItems?: Maybe<Array<Maybe<ComboMenuItemType>>>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  instoreOrderingModifierGroup: Array<OnlineOrderingModifierGroupOutput>;
  isFromHq?: Maybe<Scalars['Boolean']['output']>;
  maximumSelection: Scalars['Int']['output'];
  menuItem?: Maybe<MenuItemType>;
  minimumSelection: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  onlineRestaurantModifierGroup: Array<OnlineRestaurantModifierGroupOutput>;
  restaurant: RestaurantType;
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  ubereatsV2ModifierGroup?: Maybe<UbereatsV2ModifierGroupOutput>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['String']['output'];
};

/**
 * Why just ComboItemCategory? Because UI flow, if ComboItemCategory which already mapped could delete,
 * frontend will be hard to resume original data of those ComboItemCategory,
 * others (e.g. MenuItem, MenuItemCategory, ComboMenuItem, ...) which mapped been delete, will be block
 * by backend.
 * So these are especial provide to frontend.
 *                                                 johnny ask dmoon on Dec.2020
 */
export type ComboItemCategoryUuidsMappedWithOnlineOrderingObjectType = {
  __typename?: 'ComboItemCategoryUuidsMappedWithOnlineOrderingObjectType';
  /** The UUIDs of combo-item-category contains combo-menu-item mapped with ubereasts. */
  ubereats?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type ComboItemCategoryValidationMutation = {
  __typename?: 'ComboItemCategoryValidationMutation';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type ComboMenuItemInput = {
  menuItemUuid?: InputMaybe<Scalars['String']['input']>;
  /**  (Decimal string for API; Float type in DB) */
  price?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['String']['input']>;
};

/** ComboMenuItemSortingType Enum:By spec, `DEFAULT` to be 'sorted by item sort field', `CUSTOM` meant to be 'sorted by relation sort field'. */
export enum ComboMenuItemSortingType {
  Custom = 'CUSTOM',
  Default = 'DEFAULT'
}

export type ComboMenuItemType = {
  __typename?: 'ComboMenuItemType';
  comboItemCategory?: Maybe<ComboItemCategoryType>;
  /** uuid of realted attr combo_item_category */
  comboItemCategoryUuid?: Maybe<Scalars['String']['output']>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  instoreOrderingMenuItem: Array<OnlineOrderingMenuItemOutput>;
  isFromHq?: Maybe<Scalars['Boolean']['output']>;
  /** uuid of realted attr origin */
  menuItemUuid?: Maybe<Scalars['String']['output']>;
  /** name of realted attr origin */
  name?: Maybe<Scalars['String']['output']>;
  onlineRestaurantMenuItem: Array<OnlineRestaurantMenuItemOutput>;
  originalItem?: Maybe<MenuItemType>;
  /**  (Decimal string for API; Float type in DB) */
  price?: Maybe<Scalars['String']['output']>;
  restaurant: RestaurantType;
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  ubereatsMenuItem: Array<UbereatsMenuItemOutput>;
  ubereatsV2MenuItem?: Maybe<UbereatsV2MenuItemOutput>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['String']['output'];
};

export type ComboMenuItemUuidsMappedWithOnlineOrdering = {
  __typename?: 'ComboMenuItemUuidsMappedWithOnlineOrdering';
  /** While the combo-menu-item mapped with ubereats-menu-item under the <ubereats-menu-item which is mapped with menu-item>, the relation of combo-menu-item should be kept for mapping rules.Because of deleting the combo-menu-item mapped to ubereats might make the mapping missing combo-menu-item. */
  ubereats?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type ComboReportQueryPayload = {
  /** If it's Branch Combo, FE should provide empty list.If it's HQ Combo, FE should provide wanted branch UUIDs. Empty list means all branches.If users come from a URL with item_combo_uuid directly, FE should provide empty list. */
  branches?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  endDate: Scalars['Date']['input'];
  endTime: Scalars['Time']['input'];
  serviceTypes?: InputMaybe<Array<InputMaybe<ServiceTypes>>>;
  startDate: Scalars['Date']['input'];
  startTime: Scalars['Time']['input'];
  /** Combo Item UUID */
  uuid: Scalars['UUID']['input'];
};

export type CompareSalesDataObject = {
  __typename?: 'CompareSalesDataObject';
  data?: Maybe<Array<Maybe<SalesDataObject>>>;
};

export type ConfirmDeniedOrderOutput = {
  __typename?: 'ConfirmDeniedOrderOutput';
  errorCode?: Maybe<Scalars['Int']['output']>;
  errorMsg?: Maybe<Scalars['String']['output']>;
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
  order?: Maybe<IchefOnlineOrderType>;
};

export type ConfirmReservation = {
  __typename?: 'ConfirmReservation';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type ContractOutput = {
  __typename?: 'ContractOutput';
  cloudNotifiedIpadAt?: Maybe<Scalars['UTCDateTime']['output']>;
  contractType?: Maybe<ContractTypes>;
  eachLimits?: Maybe<Scalars['Dictionary']['output']>;
  emergentContractType?: Maybe<EmergentContractTypes>;
  endAt?: Maybe<Scalars['UTCDateTime']['output']>;
  maxInventoryItemsIsSystemLimit?: Maybe<Scalars['Boolean']['output']>;
  maxMembersIsSystemLimit?: Maybe<Scalars['Boolean']['output']>;
  maxOnlineOrdersIsSystemLimit?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  signupAt?: Maybe<Scalars['UTCDateTime']['output']>;
  startAt?: Maybe<Scalars['UTCDateTime']['output']>;
  uuid?: Maybe<Scalars['String']['output']>;
};

export type ContractQuery = {
  __typename?: 'ContractQuery';
  currentContract?: Maybe<ContractOutput>;
  originalContract?: Maybe<ContractOutput>;
  upcomingContract?: Maybe<ContractOutput>;
};

export enum ContractTypes {
  Cancelled = 'CANCELLED',
  Emergency = 'EMERGENCY',
  New = 'NEW',
  Renew = 'RENEW',
  Upgrade = 'UPGRADE'
}

export type CopyProduct = {
  __typename?: 'CopyProduct';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type CoreModuleErrorUnionType = HqInviteBranchUsingUbereatsV1Error | HqInviteBranchWithInvalidQuotaError;

export type CoreModuleFieldError = {
  __typename?: 'CoreModuleFieldError';
  error?: Maybe<CoreModuleErrorUnionType>;
};

export type CoreModuleOutput = {
  __typename?: 'CoreModuleOutput';
  associatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  branchLoginId?: Maybe<Scalars['String']['output']>;
  contractUrl?: Maybe<Scalars['String']['output']>;
  latestSyncMenuFinishedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  status?: Maybe<BranchWithInvitingStatusTypes>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export enum CouponConditionEnum {
  Unused = 'UNUSED',
  Used = 'USED'
}

export type CouponFilterQueryType = {
  /** Specify the statuses of members who collected the coupon */
  conditions?: InputMaybe<Array<InputMaybe<CouponConditionEnum>>>;
  couponUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type CouponOutput = {
  __typename?: 'CouponOutput';
  code: Scalars['String']['output'];
  /** Number of coupon can be collected, only exist in ValidateOrder and OrderOutput */
  count?: Maybe<Scalars['Int']['output']>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  discount: DiscountOutput;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  isPrintingQrcode: Scalars['Boolean']['output'];
  /** Coupon collect URL */
  link?: Maybe<Scalars['String']['output']>;
  maxCollect?: Maybe<Scalars['Int']['output']>;
  maxUse?: Maybe<Scalars['Int']['output']>;
  minimumAmountForIssuing?: Maybe<Scalars['Float']['output']>;
  statistic?: Maybe<CouponStatisticOutput>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  /** Used as an unique ID of the record.Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export type CouponSnapshotOutput = {
  __typename?: 'CouponSnapshotOutput';
  code: Scalars['String']['output'];
  /** Number of coupon can be collected, only exist in ValidateOrder and OrderOutput */
  count?: Maybe<Scalars['Int']['output']>;
  couponUuid: Scalars['UUID']['output'];
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  discount: DiscountSnapshotOutput;
  id: Scalars['ID']['output'];
  isPrintingQrcode: Scalars['Boolean']['output'];
  /** Coupon collect URL */
  link?: Maybe<Scalars['String']['output']>;
  maxCollect?: Maybe<Scalars['Int']['output']>;
  maxUse?: Maybe<Scalars['Int']['output']>;
  minimumAmountForIssuing?: Maybe<Scalars['Float']['output']>;
  settingFileVersion: Scalars['String']['output'];
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
};

export type CouponStatisticOutput = {
  __typename?: 'CouponStatisticOutput';
  collectedCount?: Maybe<Scalars['Int']['output']>;
  usedCount?: Maybe<Scalars['Int']['output']>;
};

export enum CouponTransactionEventType {
  Collect = 'COLLECT',
  Issue = 'ISSUE',
  Redeem = 'REDEEM'
}

export type CouponTransactionInput = {
  couponUuid: Scalars['UUID']['input'];
  eventType: CouponTransactionEventType;
  invoiceUuid?: InputMaybe<Scalars['UUID']['input']>;
  memberUuid?: InputMaybe<Scalars['UUID']['input']>;
  platformType?: InputMaybe<PlatformTypes>;
};

export type CouponTransactionOutput = {
  __typename?: 'CouponTransactionOutput';
  coupon?: Maybe<CouponSnapshotOutput>;
  eventType: CouponTransactionEventType;
  invoiceUuid?: Maybe<Scalars['UUID']['output']>;
  memberUuid?: Maybe<Scalars['UUID']['output']>;
  message?: Maybe<Scalars['String']['output']>;
  platformType?: Maybe<PlatformTypes>;
  status?: Maybe<StatusEnum>;
};

export type CreateBranch = {
  __typename?: 'CreateBranch';
  branchUuid?: Maybe<Scalars['UUID']['output']>;
};

export type CreateBranchUser = {
  __typename?: 'CreateBranchUser';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type CreateCategoryInput = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CreateContractWithBranchPayload = {
  branch: BranchInput;
  modules: Array<InputMaybe<HqBranchModules>>;
};

export type CreateContractsWithBranchOkOutput = {
  __typename?: 'CreateContractsWithBranchOkOutput';
  invitingHqBranches?: Maybe<Array<Maybe<InvitingHqBranchOutput>>>;
};

/**
 * Fields contained in MemberQueryManager.allowed_create_fields are not         all the fields iPad will use in create process
 * And the fields defined here are actually allow to create field for iPad
 */
export type CreateCrmMemberInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  birth?: InputMaybe<Scalars['String']['input']>;
  birthYear?: InputMaybe<Scalars['Int']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  gender?: InputMaybe<GenderTypes>;
  ipadCreatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  ipadUpdatedAt?: InputMaybe<Scalars['DateTime']['input']>;
  memberType: MemberTypes;
  mobile: Scalars['String']['input'];
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  tel?: InputMaybe<Scalars['String']['input']>;
  uuid: Scalars['UUID']['input'];
};

export type CreateCustomerGroupConfigInput = {
  autoCreateNextCustomerGroupAfterCheckout?: InputMaybe<Scalars['Boolean']['input']>;
  autoExitCustomerGroup?: InputMaybe<Scalars['Boolean']['input']>;
  customizedFields?: InputMaybe<Array<InputMaybe<CustomerGroupConfigCustomizedFieldsInput>>>;
  lineUpTimeAlert?: InputMaybe<Scalars['Int']['input']>;
  mealTimeAlert?: InputMaybe<Scalars['Int']['input']>;
  requiredFieldsCheckPoint?: InputMaybe<RequiredFieldsCheckPoint>;
  serviceType?: InputMaybe<ServiceType>;
  shouldManualConfirmServedStatus?: InputMaybe<Scalars['Boolean']['input']>;
  sortingIndex?: InputMaybe<Scalars['Int']['input']>;
  sourceType?: InputMaybe<Scalars['UUID']['input']>;
  waitForCommitTimeAlert?: InputMaybe<Scalars['Int']['input']>;
  waitForServedTimeAlert?: InputMaybe<Scalars['Int']['input']>;
  waitForTakeoutTimeAlert?: InputMaybe<Scalars['Int']['input']>;
};

export type CreateDiscountPayload = {
  allowedOnFoodpanda?: InputMaybe<Scalars['Boolean']['input']>;
  allowedOnGrabfood?: InputMaybe<Scalars['Boolean']['input']>;
  allowedOnIpad?: InputMaybe<Scalars['Boolean']['input']>;
  allowedOnOnlineRestaurant?: InputMaybe<Scalars['Boolean']['input']>;
  allowedOnUbereats?: InputMaybe<Scalars['Boolean']['input']>;
  authCategoryUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  cgTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  couponMaxUse?: InputMaybe<Scalars['Int']['input']>;
  customerNumberEnd?: InputMaybe<Scalars['Int']['input']>;
  customerNumberStart?: InputMaybe<Scalars['Int']['input']>;
  defaultOnOnlineRestaurant?: InputMaybe<Scalars['Boolean']['input']>;
  discountType?: InputMaybe<Scalars['String']['input']>;
  discountValue?: InputMaybe<Scalars['Float']['input']>;
  invoiceMinusInterlockServiceCharge?: InputMaybe<Scalars['Boolean']['input']>;
  isAuthenticated?: InputMaybe<Scalars['Boolean']['input']>;
  isCoupon: Scalars['Boolean']['input'];
  isOpen?: InputMaybe<Scalars['Boolean']['input']>;
  isPrintingCouponQrcode?: InputMaybe<Scalars['Boolean']['input']>;
  isdeleted?: InputMaybe<Scalars['Boolean']['input']>;
  itemMinusInterlockServiceCharge?: InputMaybe<Scalars['Boolean']['input']>;
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  minimumAmount?: InputMaybe<Scalars['Decimal']['input']>;
  minimumAmountForCouponIssuing?: InputMaybe<Scalars['Decimal']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  onlineDescription?: InputMaybe<Scalars['String']['input']>;
  openAdvanceCondition?: InputMaybe<Scalars['Boolean']['input']>;
  periodEnd?: InputMaybe<Scalars['Date']['input']>;
  periodStart?: InputMaybe<Scalars['Date']['input']>;
  timeLimitEnd?: InputMaybe<Scalars['Int']['input']>;
  timeLimitStart?: InputMaybe<Scalars['Int']['input']>;
  useTimeLimit?: InputMaybe<Scalars['Boolean']['input']>;
  weekdays?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type CreateGmbInput = {
  email?: InputMaybe<Scalars['String']['input']>;
  languageCode?: InputMaybe<Scalars['String']['input']>;
  lat?: InputMaybe<Scalars['String']['input']>;
  locationName?: InputMaybe<Scalars['String']['input']>;
  long?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
};

export type CreateInstoreInformationInputObject = {
  address?: InputMaybe<Scalars['String']['input']>;
  checkoutAnnouncement?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  isAutoAcceptOrder?: InputMaybe<Scalars['Boolean']['input']>;
  isAutoPrintSessionQrCode?: InputMaybe<Scalars['Boolean']['input']>;
  /** 餐點備註選項，預設為 OPTIONAL */
  itemCommentVisibility?: InputMaybe<ItemCommentVisibility>;
  name: Scalars['String']['input'];
  orderCommentDescription?: InputMaybe<Scalars['String']['input']>;
  /** 訂單備註選項，預設為 OPTIONAL */
  orderCommentVisibility?: InputMaybe<OrderCommentVisibility>;
  paymentTiming?: InputMaybe<PaymentTimingEnum>;
  phone: Scalars['String']['input'];
  pictureS3Paths?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  promotionAnnouncement?: InputMaybe<Scalars['String']['input']>;
  restaurantAnnouncement?: InputMaybe<Scalars['String']['input']>;
  taiwanCorporateTaxIdEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CreateInventoryOutput = {
  __typename?: 'CreateInventoryOutput';
  status?: Maybe<Scalars['String']['output']>;
};

export type CreateItemInput = {
  category?: InputMaybe<Scalars['UUID']['input']>;
  defaultPrice?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  safetyStock?: InputMaybe<Scalars['String']['input']>;
  unitName?: InputMaybe<Scalars['String']['input']>;
};

export type CreateLineQrCodeMaterialInputObject = {
  color: QrCodeMaterialColorEnum;
  logoUrl?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  type: QrCodeMaterialTypeEnum;
};

export type CreateMenuItemCategoryPayload = {
  externalId?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type CreateMenuItemPayload = {
  comboItemCategories?: InputMaybe<Array<InputMaybe<ComboItemCategoryInput>>>;
  croppedInfo?: InputMaybe<Scalars['Dictionary']['input']>;
  /** Used to enable and make effective customized_tax_type and customized_tax_rate; otherwise `restaurant.tax_type` will be used on iPad. */
  customizedTaxEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** Sample value: `TX` */
  customizedTaxType?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of this item in external ERP system. */
  externalId?: InputMaybe<Scalars['String']['input']>;
  inventoryConsumptionList?: InputMaybe<Array<InputMaybe<MenuItemInventoryConsumptionMutation>>>;
  itemTagRelationshipList?: InputMaybe<Array<InputMaybe<ItemTagRelationshipPayload>>>;
  menuItemCategoryUuid: Scalars['String']['input'];
  /** MenuItemTagSortingType Enum:By spec, `DEFAULT` to be 'sorted by tag sort field', `CUSTOM` meant to be 'sorted by relation sort field'. */
  menuItemTagSortingType?: InputMaybe<Scalars['String']['input']>;
  menuItemTagUuids?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name: Scalars['String']['input'];
  originalPictureUuid?: InputMaybe<Scalars['UUID']['input']>;
  picture?: InputMaybe<Scalars['String']['input']>;
  /**  (Decimal string for API; Float type in DB) */
  price?: InputMaybe<Scalars['String']['input']>;
  type: Scalars['String']['input'];
};

export type CreateMenuItemTagPayload = {
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of this item in external ERP system. */
  externalId?: InputMaybe<Scalars['String']['input']>;
  inventoryConsumptionList?: InputMaybe<Array<InputMaybe<MenuItemTagInventoryConsumptionMutation>>>;
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name: Scalars['String']['input'];
  /**  (Decimal string for API; Float type in DB) */
  price?: InputMaybe<Scalars['String']['input']>;
};

export type CreateOnlineOrderingMenuCategoryPayload = {
  name: Scalars['String']['input'];
};

export type CreateOnlineRestaurantInformationInputObject = {
  address: Scalars['String']['input'];
  checkoutAnnouncement?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  /** 免洗餐具選項，預設為 OPTIONAL */
  disposableTablewareVisibility?: InputMaybe<DisposableTablewareVisibility>;
  foodieMode?: InputMaybe<FoodieMode>;
  /** 餐點備註選項，預設為 OPTIONAL */
  itemCommentVisibility?: InputMaybe<ItemCommentVisibility>;
  mealPreparationTimeAvg: MealPreparationTimeAvgEnum;
  name: Scalars['String']['input'];
  openingHoursPeriods: Array<InputMaybe<OpeningHoursPeriodInputObject>>;
  orderCommentDescription?: InputMaybe<Scalars['String']['input']>;
  /** 訂單備註選項，預設為 OPTIONAL */
  orderCommentVisibility?: InputMaybe<OrderCommentVisibility>;
  phone?: InputMaybe<Scalars['String']['input']>;
  pictureS3Paths?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  promotionAnnouncement?: InputMaybe<Scalars['String']['input']>;
  restaurantAnnouncement?: InputMaybe<Scalars['String']['input']>;
  taiwanCorporateTaxIdEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CreateOnlineRestaurantMenuCategoryPayload = {
  name: Scalars['String']['input'];
};

export type CreateOnlineRestaurantPaymentPayload = {
  channel?: InputMaybe<PaymentChannelGrapheneEnum>;
  name: Scalars['String']['input'];
  onlineStoreLine?: InputMaybe<CreateOnlineStoreLinePaymentPayload>;
  onlineStorePxPayPlus?: InputMaybe<CreateOnlineStorePxPayPlusPaymentPayload>;
  onlineStripe?: InputMaybe<CreateOnlineStripePaymentPayload>;
  type: PaymentTypeGrapheneEnum;
};

export type CreateOnlineRestaurantQrCodeMaterialInputObject = {
  color: QrCodeMaterialColorEnum;
  logoUrl?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  type: QrCodeMaterialTypeEnum;
};

export type CreateOnlineStoreLinePaymentPayload = {
  channelId: Scalars['String']['input'];
  channelSecret: Scalars['String']['input'];
  lineStoreId: Scalars['String']['input'];
};

export type CreateOnlineStorePxPayPlusPaymentPayload = {
  merchantCode: Scalars['String']['input'];
};

/**
 * CreateOnlineStripePaymentPayload is the schema of online stripe payment output, the
 * followings are the usage of each field:
 *     - connect_account:
 *     the stripe account of the restaurant.
 */
export type CreateOnlineStripePaymentPayload = {
  connectAccount: Scalars['String']['input'];
};

export type CreateOrRebuildUncountedMenuItemsInPosOutputUnionType = MenuItemUuidsNotInRestaurantError | OkOutput | UnhandledError;

export type CreateOrUpdateReservationInput = {
  adultCount: Scalars['Int']['input'];
  diningTimeEnd: Scalars['DateTime']['input'];
  diningTimeStart: Scalars['DateTime']['input'];
  email: Scalars['String']['input'];
  gender: GenderTypes;
  kidChairCount: Scalars['Int']['input'];
  kidCount: Scalars['Int']['input'];
  mobile: Scalars['String']['input'];
  mobileRegion?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  note: Scalars['String']['input'];
  preorderPayload?: InputMaybe<UpdatePreorderInput>;
  tableEntityUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  userUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type CreateOrUpdateRestaurantPolicyInput = {
  privacyPolicy: Scalars['String']['input'];
};

export type CreatePointsTransactionInput = {
  /** Invoice_uuid for this checkout process */
  invoiceUuid: Scalars['UUID']['input'];
  /** define when the user perform this request. */
  issueDate: Scalars['DateTime']['input'];
  pointEvents: Array<CheckoutPointEventInput>;
};

export type CreatePreorderInformationUnionType = InstoreInformationNotExistsError | OkOutput | UnhandledError;

/** Create a new item with category and supplier */
export type CreateProduct = {
  __typename?: 'CreateProduct';
  productCategoryUuid?: Maybe<Scalars['UUID']['output']>;
};

export type CreateProductCategory = {
  __typename?: 'CreateProductCategory';
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type CreateReservation = {
  __typename?: 'CreateReservation';
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type CreateReservationBlocklistUnionType = InvalidMobileError | MobileAlreadyExistsError | OkOutput | UnhandledError;

export type CreateReservationInformationMutation = {
  __typename?: 'CreateReservationInformationMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type CreateReservationInformationPayload = {
  contactNumber: Scalars['String']['input'];
  coverPictureS3Filenames: Array<InputMaybe<Scalars['String']['input']>>;
  mealTimeLimits: Array<InputMaybe<MealTimeLimitsInput>>;
  openingHoursPeriods: WeekdayOpeningPeriodInput;
  reservationHoursPeriods: WeekdayReservationPeriodInput;
  seatReservationTime?: InputMaybe<Scalars['Int']['input']>;
  storeAddress: Scalars['String']['input'];
  storeName: Scalars['String']['input'];
};

export type CreateReservationTableGroupPayload = {
  isWithReservationSeatSetting: Scalars['Boolean']['input'];
  maximumReservationSeat: Scalars['Int']['input'];
  minimumReservationSeat: Scalars['Int']['input'];
  name: Scalars['String']['input'];
};

export type CreateReservationTableGroupUnionType = ExceedSystemMaximumCountError | OkOutput | UnhandledError;

export type CreateRestaurantPolicy = {
  __typename?: 'CreateRestaurantPolicy';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type CreateSessionOutputType = {
  __typename?: 'CreateSessionOutputType';
  createdAt: Scalars['DateTime']['output'];
  sessionUuid: Scalars['UUID']['output'];
};

export type CreateSessionUnionType = CreateSessionOutputType | EntryCodeCannotProduceError | IpfNoModuleError | IpfOverQuotaLimitError | TableIsInvalidError | UnhandledError;

export type CreateSpecialReservationDayUnionType = OkOutput | SpecialReservationDayCheckFieldsError | UnhandledError;

export type CreateSupplier = {
  __typename?: 'CreateSupplier';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type CreateTagGroupPayload = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  maximumSelection?: InputMaybe<Scalars['Int']['input']>;
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  minimumSelection?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  sortingType?: InputMaybe<SortingType>;
  subTags?: InputMaybe<Array<InputMaybe<SubTagPayload>>>;
};

export type CreditCardOutput = {
  __typename?: 'CreditCardOutput';
  errorCode?: Maybe<Scalars['String']['output']>;
  isP3dRequired?: Maybe<Scalars['Boolean']['output']>;
  p3dHtml?: Maybe<Scalars['String']['output']>;
};

export type CreditCardTypeOutput = {
  __typename?: 'CreditCardTypeOutput';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type CrmMemberListOutput = {
  __typename?: 'CrmMemberListOutput';
  members?: Maybe<Array<Maybe<CrmMembersOutput>>>;
};

export type CrmMemberMutation = {
  __typename?: 'CrmMemberMutation';
  checkoutModifyPoint?: Maybe<CrmMembersOutput>;
  createCouponTransaction?: Maybe<Array<Maybe<CouponTransactionOutput>>>;
  createCrmMember?: Maybe<CrmMembersOutput>;
  createMemberModifyPoint?: Maybe<CrmMembersOutput>;
  createPointsTransaction?: Maybe<PointTransactionOutput>;
  deleteMembers?: Maybe<DeleteMembersUnionType>;
  disableCoupon?: Maybe<StatusOutput>;
  /** PointEvent mutation which type=PointEventType.revert */
  disablePoint?: Maybe<CrmMembersOutput>;
  manualModifyPoint?: Maybe<CrmMembersOutput>;
  refundCoupon?: Maybe<StatusOutput>;
  /** PointEvent mutation which type=PointEventType.revert */
  refundPoint?: Maybe<CrmMembersOutput>;
  /** PointEvent mutation which type=PointEventType.reset */
  resetPoint?: Maybe<StatusOutput>;
};


export type CrmMemberMutationCheckoutModifyPointArgs = {
  input?: InputMaybe<CheckoutModifyPointInput>;
};


export type CrmMemberMutationCreateCouponTransactionArgs = {
  input?: InputMaybe<Array<InputMaybe<CouponTransactionInput>>>;
};


export type CrmMemberMutationCreateCrmMemberArgs = {
  input?: InputMaybe<CreateCrmMemberInput>;
};


export type CrmMemberMutationCreateMemberModifyPointArgs = {
  checkoutInput?: InputMaybe<CheckoutModifyPointInput>;
  memberInput?: InputMaybe<CreateCrmMemberInput>;
};


export type CrmMemberMutationCreatePointsTransactionArgs = {
  input?: InputMaybe<CreatePointsTransactionInput>;
};


export type CrmMemberMutationDeleteMembersArgs = {
  searchTerm?: InputMaybe<Scalars['String']['input']>;
  uuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


export type CrmMemberMutationDisableCouponArgs = {
  invoiceUuid: Scalars['UUID']['input'];
};


export type CrmMemberMutationDisablePointArgs = {
  input?: InputMaybe<PointEventDisableInput>;
};


export type CrmMemberMutationManualModifyPointArgs = {
  input?: InputMaybe<ManualModifyPointInput>;
};


export type CrmMemberMutationRefundCouponArgs = {
  invoiceUuid: Scalars['UUID']['input'];
};


export type CrmMemberMutationRefundPointArgs = {
  input?: InputMaybe<PointEventRefundInput>;
};


export type CrmMemberMutationResetPointArgs = {
  input?: InputMaybe<PointEventResetInput>;
};

export type CrmMemberOperationDetailLogType = Node & {
  __typename?: 'CrmMemberOperationDetailLogType';
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  memberUuid: Scalars['String']['output'];
  mobile: Scalars['String']['output'];
  uuid: Scalars['String']['output'];
};

export type CrmMemberOperationDetailLogTypeConnection = {
  __typename?: 'CrmMemberOperationDetailLogTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<CrmMemberOperationDetailLogTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `CrmMemberOperationDetailLogType` and its cursor. */
export type CrmMemberOperationDetailLogTypeEdge = {
  __typename?: 'CrmMemberOperationDetailLogTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<CrmMemberOperationDetailLogType>;
};

export enum CrmMembersListSortingChoice {
  CreatedAt = 'created_at',
  LastCheckoutAt = 'last_checkout_at'
}

export type CrmPermissionLogRestaurantType = {
  __typename?: 'CrmPermissionLogRestaurantType';
  isHq?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  storeId: Scalars['String']['output'];
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type CrmPermissionLogType = Node & {
  __typename?: 'CrmPermissionLogType';
  createdAt?: Maybe<Scalars['UTCDateTime']['output']>;
  dateTime: Scalars['DateTime']['output'];
  detailLogs?: Maybe<CrmMemberOperationDetailLogTypeConnection>;
  displayName: Scalars['String']['output'];
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  memberCount?: Maybe<Scalars['Int']['output']>;
  memberMobile?: Maybe<Scalars['String']['output']>;
  moduleName?: Maybe<PermissionLogModuleName>;
  restaurant?: Maybe<CrmPermissionLogRestaurantType>;
  userLoginId?: Maybe<Scalars['String']['output']>;
  uuid: Scalars['String']['output'];
};


export type CrmPermissionLogTypeDetailLogsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  memberMobileContains?: InputMaybe<Scalars['String']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};

export type CrmPermissionLogTypeConnection = {
  __typename?: 'CrmPermissionLogTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<CrmPermissionLogTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `CrmPermissionLogType` and its cursor. */
export type CrmPermissionLogTypeEdge = {
  __typename?: 'CrmPermissionLogTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<CrmPermissionLogType>;
};

export type CrmUsage = {
  __typename?: 'CrmUsage';
  disabledMemberCount?: Maybe<Scalars['Int']['output']>;
  isExceedLimit?: Maybe<Scalars['Boolean']['output']>;
  isExceedWarningLimit?: Maybe<Scalars['Boolean']['output']>;
  isReachLimit?: Maybe<Scalars['Boolean']['output']>;
  leftMemberCount?: Maybe<Scalars['Int']['output']>;
  maxMemberCount?: Maybe<Scalars['Int']['output']>;
  /** total active members */
  totalMemberCount?: Maybe<Scalars['Int']['output']>;
};

export enum CrossStoreMemberMergeStatusForBranch {
  Running = 'RUNNING',
  Waiting = 'WAITING'
}

export type CurrentPosDataMutation = {
  __typename?: 'CurrentPosDataMutation';
  updateCurrentTableUsage?: Maybe<UpdateCurrentTableUsage>;
};


export type CurrentPosDataMutationUpdateCurrentTableUsageArgs = {
  clientUpdatedAt: Scalars['DateTime']['input'];
  payload: Array<InputMaybe<CurrentTableUsageInput>>;
  schemaVersion: Scalars['String']['input'];
};

export type CurrentTableUsageInput = {
  /** with timezone, pass None if occupied forever */
  diningTimeEnd?: InputMaybe<Scalars['DateTime']['input']>;
  /** with timezone */
  diningTimeStart: Scalars['DateTime']['input'];
  reservationUuid?: InputMaybe<Scalars['UUID']['input']>;
  sessionUuid?: InputMaybe<Scalars['UUID']['input']>;
  tableEntityUuid: Scalars['UUID']['input'];
};

export type CustomerBehaviorMutation = {
  __typename?: 'CustomerBehaviorMutation';
  createUnpaidInvoice?: Maybe<UnpaidInvoiceOutput>;
};


export type CustomerBehaviorMutationCreateUnpaidInvoiceArgs = {
  eventTimestamp?: InputMaybe<Scalars['Float']['input']>;
  eventUuid?: InputMaybe<Scalars['UUID']['input']>;
  invoiceUuid?: InputMaybe<Scalars['UUID']['input']>;
  payment?: InputMaybe<UnpaidPaymentObject>;
  posId?: InputMaybe<Scalars['String']['input']>;
  sourceJson?: InputMaybe<Scalars['JSONString']['input']>;
};

export type CustomerBehaviorQuery = {
  __typename?: 'CustomerBehaviorQuery';
  events?: Maybe<InvoiceEventReportPagingObjectType>;
};


export type CustomerBehaviorQueryEventsArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  queryFilter?: InputMaybe<ReportBaseQueryFilters>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export enum CustomerCommentSettingMode {
  Disable = 'DISABLE',
  EnableAndOptional = 'ENABLE_AND_OPTIONAL',
  EnableAndRequired = 'ENABLE_AND_REQUIRED'
}

export enum CustomerGroupConfigCustomizedFieldFieldType {
  /** ADDRESS */
  Address = 'ADDRESS',
  /** COMMENT */
  Comment = 'COMMENT',
  /** ESTIMATED_TIME */
  EstimatedTime = 'ESTIMATED_TIME',
  /** PEOPLE */
  People = 'PEOPLE',
  /** SERIAL_NUMBER */
  SerialNumber = 'SERIAL_NUMBER',
  /** SOURCE_TYPE */
  SourceType = 'SOURCE_TYPE'
}

export type CustomerGroupConfigCustomizedFieldOutput = {
  __typename?: 'CustomerGroupConfigCustomizedFieldOutput';
  customerGroupConfig: CustomerGroupConfigOutput;
  fieldType: CustomerGroupConfigCustomizedFieldFieldType;
  isSystemDefault: Scalars['Boolean']['output'];
  required: Scalars['Boolean']['output'];
  sortingIndex: Scalars['Int']['output'];
  userPresetValue?: Maybe<Scalars['String']['output']>;
};

export type CustomerGroupConfigCustomizedFieldsInput = {
  fieldType?: InputMaybe<FieldType>;
  required?: InputMaybe<Scalars['Boolean']['input']>;
  sortingIndex?: InputMaybe<Scalars['Int']['input']>;
  userPresetValue?: InputMaybe<Scalars['String']['input']>;
};

export type CustomerGroupConfigMutation = {
  __typename?: 'CustomerGroupConfigMutation';
  createCustomerGroupConfig?: Maybe<CustomerGroupConfigOutput>;
  createCustomerGroupSourceType?: Maybe<CustomerGroupSourceTypeOutput>;
  deleteCustomerGroupConfig?: Maybe<CustomerGroupConfigOutput>;
  deleteCustomerGroupSourceType?: Maybe<CustomerGroupSourceTypeOutput>;
  updateCustomerGroupConfig?: Maybe<CustomerGroupConfigOutput>;
  updateCustomerGroupSourceType?: Maybe<CustomerGroupSourceTypeOutput>;
};


export type CustomerGroupConfigMutationCreateCustomerGroupConfigArgs = {
  payload?: InputMaybe<CreateCustomerGroupConfigInput>;
};


export type CustomerGroupConfigMutationCreateCustomerGroupSourceTypeArgs = {
  payload?: InputMaybe<CustomerGroupSourceTypeInput>;
};


export type CustomerGroupConfigMutationDeleteCustomerGroupConfigArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type CustomerGroupConfigMutationDeleteCustomerGroupSourceTypeArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type CustomerGroupConfigMutationUpdateCustomerGroupConfigArgs = {
  payload?: InputMaybe<UpdateCustomerGroupConfigInput>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type CustomerGroupConfigMutationUpdateCustomerGroupSourceTypeArgs = {
  payload?: InputMaybe<CustomerGroupSourceTypeInput>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type CustomerGroupConfigOutput = {
  __typename?: 'CustomerGroupConfigOutput';
  autoCreateNextCustomerGroupAfterCheckout?: Maybe<Scalars['Boolean']['output']>;
  autoExitCustomerGroup: Scalars['Boolean']['output'];
  customizedFields: Array<CustomerGroupConfigCustomizedFieldOutput>;
  lineUpTimeAlert?: Maybe<Scalars['Int']['output']>;
  mealTimeAlert?: Maybe<Scalars['Int']['output']>;
  requiredFieldsCheckPoint: CustomerGroupConfigRequiredFieldsCheckPoint;
  serviceType: CustomerGroupConfigServiceType;
  shouldManualConfirmServedStatus: Scalars['Boolean']['output'];
  sortingIndex: Scalars['Int']['output'];
  sourceType: CustomerGroupSourceTypeOutput;
  uuid: Scalars['UUID']['output'];
  waitForCommitTimeAlert?: Maybe<Scalars['Int']['output']>;
  waitForServedTimeAlert?: Maybe<Scalars['Int']['output']>;
  waitForTakeoutTimeAlert?: Maybe<Scalars['Int']['output']>;
};

export type CustomerGroupConfigQuery = {
  __typename?: 'CustomerGroupConfigQuery';
  getAllCustomerGroupConfig?: Maybe<GetAllCustomerGroupConfigOutput>;
  getCustomerGroupConfig?: Maybe<CustomerGroupConfigOutput>;
};


export type CustomerGroupConfigQueryGetCustomerGroupConfigArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export enum CustomerGroupConfigRequiredFieldsCheckPoint {
  /** COMMIT_CUSTOMER_GROUP */
  CommitCustomerGroup = 'COMMIT_CUSTOMER_GROUP',
  /** CREATE_CUSTOMER_GROUP */
  CreateCustomerGroup = 'CREATE_CUSTOMER_GROUP'
}

export enum CustomerGroupConfigServiceType {
  /** INDOOR */
  Indoor = 'INDOOR',
  /** TAKEOUT */
  Takeout = 'TAKEOUT'
}

export type CustomerGroupSourceTypeInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type CustomerGroupSourceTypeOutput = {
  __typename?: 'CustomerGroupSourceTypeOutput';
  customerGroupConfigs: Array<CustomerGroupConfigOutput>;
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  isSystemDefault: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  /** Used as an unique ID of the record.Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export type CustomerTransactionOutput = {
  __typename?: 'CustomerTransactionOutput';
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  invoiceNumber?: Maybe<Scalars['String']['output']>;
  paidAt?: Maybe<Scalars['DateTime']['output']>;
  refundAt?: Maybe<Scalars['DateTime']['output']>;
  totalAmountWithFee?: Maybe<Scalars['Decimal']['output']>;
  transactionSource?: Maybe<CustomerTransactionSourceEnum>;
  uuid?: Maybe<Scalars['String']['output']>;
};

export enum CustomerTransactionSourceEnum {
  AdditionalPurchase = 'ADDITIONAL_PURCHASE',
  AddonSubscription = 'ADDON_SUBSCRIPTION',
  AddOnModule = 'ADD_ON_MODULE',
  CustomerSuccessService = 'CUSTOMER_SUCCESS_SERVICE',
  FirstSubscription = 'FIRST_SUBSCRIPTION',
  GobApplication = 'GOB_APPLICATION',
  Legacy = 'LEGACY',
  PurchaseTwmobile = 'PURCHASE_TWMOBILE',
  Quotation = 'QUOTATION',
  RenewalSubscription = 'RENEWAL_SUBSCRIPTION',
  RenewGovApplication = 'RENEW_GOV_APPLICATION',
  RentalToSubscription = 'RENTAL_TO_SUBSCRIPTION',
  ResaleService = 'RESALE_SERVICE',
  UpgradeSubscription = 'UPGRADE_SUBSCRIPTION',
  ZeroTransaction = 'ZERO_TRANSACTION'
}

export type CustomizeFoodpandaTagGroupMutation = {
  __typename?: 'CustomizeFoodpandaTagGroupMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type CustomizeFoodpandaTagMutation = {
  __typename?: 'CustomizeFoodpandaTagMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type CustomizeUbereatsV2TagGroupMutation = {
  __typename?: 'CustomizeUbereatsV2TagGroupMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type CustomizeUbereatsV2TagMutation = {
  __typename?: 'CustomizeUbereatsV2TagMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type DailyAccountReportObject = {
  __typename?: 'DailyAccountReportObject';
  closeAccounts?: Maybe<Array<Maybe<CloseAccountReportObject>>>;
  dailyAccountTime?: Maybe<Scalars['DateTime']['output']>;
  dailyAccountUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  managerName?: Maybe<Scalars['String']['output']>;
  managerUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
};

export type DailyAccountReportPagingObjectType = {
  __typename?: 'DailyAccountReportPagingObjectType';
  average?: Maybe<DailyAccountReportObject>;
  nodes?: Maybe<Array<Maybe<DailyAccountReportObject>>>;
  pageInfo: PageInformation;
  sum?: Maybe<DailyAccountReportObject>;
};

/**
 * Spec: between start_date and end_date + between start_time and end_time.
 * Example: 1/1-1/2, 00:00-02:00 --> 1/1 00:00-02:00 + 1/2 00:00-02:00
 */
export type DateTimePayload = {
  endDate: Scalars['Date']['input'];
  endTime: Scalars['Time']['input'];
  startDate: Scalars['Date']['input'];
  startTime: Scalars['Time']['input'];
};

export type DatetimeRangeFilterType = {
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  /** Don't modify if you're not using customized filter */
  type?: InputMaybe<Scalars['String']['input']>;
};

export type DayRangeOverlapError = {
  __typename?: 'DayRangeOverlapError';
  message?: Maybe<Scalars['String']['output']>;
};

export type DeleteBranch = {
  __typename?: 'DeleteBranch';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type DeleteCategoryInput = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type DeleteDiscount = {
  __typename?: 'DeleteDiscount';
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type DeleteLineOaqrCodeMaterialMutation = {
  __typename?: 'DeleteLineOAQRCodeMaterialMutation';
  deletedUuid?: Maybe<Scalars['UUID']['output']>;
};

export type DeleteMedia = {
  __typename?: 'DeleteMedia';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type DeleteMembersUnionType = AllSelectedMemberUndeletableError | OkOutput | PartialDeleteMembersOkOutput | UnhandledError;

export type DeleteOnlineOrderingMenuMutation = {
  __typename?: 'DeleteOnlineOrderingMenuMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type DeleteOnlineRestaurantMenuMutation = {
  __typename?: 'DeleteOnlineRestaurantMenuMutation';
  deletedCategoryUuids?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  deletedMenuItemUuids?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
};

export type DeleteOnlineRestaurantPaymentMutation = {
  __typename?: 'DeleteOnlineRestaurantPaymentMutation';
  deletedUuid?: Maybe<Scalars['UUID']['output']>;
};

export type DeleteOnlineRestaurantQrCodeMaterialMutation = {
  __typename?: 'DeleteOnlineRestaurantQRCodeMaterialMutation';
  deletedUuid?: Maybe<Scalars['UUID']['output']>;
};

export type DeleteProduct = {
  __typename?: 'DeleteProduct';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type DeleteProductCategory = {
  __typename?: 'DeleteProductCategory';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type DeleteReservationBlocklistUnionType = OkOutput | UnhandledError;

export type DeleteReservationTableGroupUnionType = OkOutput | UnhandledError | UuidNotExistsError;

export type DeleteSpecialReservationDayUnionType = OkOutput | UnhandledError | UuidNotExistsError;

export type DeleteSupplier = {
  __typename?: 'DeleteSupplier';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type DeleteUserFromBranch = {
  __typename?: 'DeleteUserFromBranch';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type DeletedItemInput = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type DeliveryDiscountPolicyInput = {
  discountAmount?: InputMaybe<Scalars['Decimal']['input']>;
  discountPolicyType?: InputMaybe<DiscountPolicyType>;
  discountThresholdPrice?: InputMaybe<Scalars['Decimal']['input']>;
};

export type DeliveryFeeDiscountPolicy = {
  __typename?: 'DeliveryFeeDiscountPolicy';
  discountAmount?: Maybe<Scalars['Decimal']['output']>;
  discountPolicyType?: Maybe<DiscountPolicyType>;
  discountThresholdPrice?: Maybe<Scalars['Decimal']['output']>;
};

export type DeliveryFeeEdit = {
  __typename?: 'DeliveryFeeEdit';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type DeliveryFeeRuleObjectType = {
  __typename?: 'DeliveryFeeRuleObjectType';
  deliveryDiscountPolicy?: Maybe<DeliveryFeeDiscountPolicy>;
  deliveryDistance: Scalars['Float']['output'];
  deliveryFee: Scalars['Float']['output'];
  deliveryThresholdPrice?: Maybe<Scalars['Float']['output']>;
  estimatedDeliveryTime: Scalars['Int']['output'];
  isDeliveryThresholdPriceEnabled: Scalars['Boolean']['output'];
  uuid: Scalars['UUID']['output'];
};

export type DeliveryFeeRuleSettingObjectType = {
  __typename?: 'DeliveryFeeRuleSettingObjectType';
  deliveryDescription?: Maybe<Scalars['String']['output']>;
  rules?: Maybe<Array<Maybe<DeliveryFeeRuleObjectType>>>;
};

export enum DeliveryGroupChangeLogAction {
  /** CANCELLED */
  Cancelled = 'CANCELLED',
  /** IN_PROGRESS */
  InProgress = 'IN_PROGRESS',
  /** PENDING */
  Pending = 'PENDING',
  /** SHIPPING */
  Shipping = 'SHIPPING'
}

export type DeliveryGroupChangeLogType = {
  __typename?: 'DeliveryGroupChangeLogType';
  action: DeliveryGroupChangeLogAction;
  loginId?: Maybe<Scalars['String']['output']>;
  params?: Maybe<Scalars['Dictionary']['output']>;
  time?: Maybe<Scalars['UTCDateTime']['output']>;
};

export type DeliveryGroupInCart = {
  __typename?: 'DeliveryGroupInCart';
  amount?: Maybe<Scalars['Decimal']['output']>;
  deliveryFee?: Maybe<Scalars['Decimal']['output']>;
  deliveryType?: Maybe<DeliveryRuleType>;
  isFreeDelivery?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<ItemInShopAndCartType>>>;
  quantity?: Maybe<Scalars['Int']['output']>;
  refrigeration?: Maybe<RefrigerationType>;
  supplier?: Maybe<SupplierForBranchType>;
};

export type DeliveryGroupInItemType = {
  __typename?: 'DeliveryGroupInItemType';
  amount?: Maybe<Scalars['Decimal']['output']>;
  deliveryFee?: Maybe<Scalars['Decimal']['output']>;
  deliveryRule?: Maybe<OrderDeliveryRuleInOrderGroupType>;
  displayId: Scalars['String']['output'];
  isFreeDelivery: Scalars['Boolean']['output'];
  order?: Maybe<OrderInDeliveryGroupType>;
  quantity: Scalars['Int']['output'];
  refrigeration: DeliveryGroupRefrigeration;
  status: DeliveryGroupStatus;
  supplier?: Maybe<OrderSupplierType>;
  uuid: Scalars['UUID']['output'];
};

export type DeliveryGroupInOrderForBranchType = {
  __typename?: 'DeliveryGroupInOrderForBranchType';
  actualDeliveryDate?: Maybe<Scalars['Date']['output']>;
  amount?: Maybe<Scalars['Decimal']['output']>;
  changelogs: Array<DeliveryGroupChangeLogType>;
  deliveryFee?: Maybe<Scalars['Decimal']['output']>;
  deliveryRule?: Maybe<OrderDeliveryRuleInOrderGroupType>;
  displayId: Scalars['String']['output'];
  estimateArrivalDate?: Maybe<Scalars['Date']['output']>;
  isFreeDelivery: Scalars['Boolean']['output'];
  items?: Maybe<Array<OrderGroupItemType>>;
  quantity: Scalars['Int']['output'];
  refrigeration: DeliveryGroupRefrigeration;
  status: DeliveryGroupStatus;
  supplier?: Maybe<OrderSupplierForBranchType>;
  uuid: Scalars['UUID']['output'];
};

export type DeliveryGroupInOrderType = {
  __typename?: 'DeliveryGroupInOrderType';
  actualDeliveryDate?: Maybe<Scalars['Date']['output']>;
  amount?: Maybe<Scalars['Decimal']['output']>;
  changelogs: Array<DeliveryGroupChangeLogType>;
  deliveryFee?: Maybe<Scalars['Decimal']['output']>;
  deliveryRule?: Maybe<OrderDeliveryRuleInOrderGroupType>;
  displayId: Scalars['String']['output'];
  estimateArrivalDate?: Maybe<Scalars['Date']['output']>;
  isFreeDelivery: Scalars['Boolean']['output'];
  items?: Maybe<Array<OrderGroupItemType>>;
  quantity: Scalars['Int']['output'];
  refrigeration: DeliveryGroupRefrigeration;
  status: DeliveryGroupStatus;
  supplier: OrderSupplierType;
  uuid: Scalars['UUID']['output'];
};

export enum DeliveryGroupItemsRefrigeration {
  /** FROZEN */
  Frozen = 'FROZEN',
  /** NORMAL_TEMPERATURE */
  NormalTemperature = 'NORMAL_TEMPERATURE',
  /** REFRIGERATOR */
  Refrigerator = 'REFRIGERATOR'
}

export enum DeliveryGroupItemsTaxType {
  /** TF */
  Tf = 'TF',
  /** TX */
  Tx = 'TX',
  /** TZ */
  Tz = 'TZ'
}

export type DeliveryGroupItemsType = Node & {
  __typename?: 'DeliveryGroupItemsType';
  deliveryGroup?: Maybe<DeliveryGroupInItemType>;
  description: Scalars['String']['output'];
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  image: Scalars['String']['output'];
  importPrice?: Maybe<Scalars['Decimal']['output']>;
  name: Scalars['String']['output'];
  quantity: Scalars['Int']['output'];
  refrigeration: DeliveryGroupItemsRefrigeration;
  salePrice?: Maybe<Scalars['Decimal']['output']>;
  sku: Scalars['String']['output'];
  taxAmount?: Maybe<Scalars['Decimal']['output']>;
  taxType: DeliveryGroupItemsTaxType;
  totalAmount?: Maybe<Scalars['Decimal']['output']>;
  unitDescription: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
};

export type DeliveryGroupItemsTypeConnection = {
  __typename?: 'DeliveryGroupItemsTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<DeliveryGroupItemsTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `DeliveryGroupItemsType` and its cursor. */
export type DeliveryGroupItemsTypeEdge = {
  __typename?: 'DeliveryGroupItemsTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<DeliveryGroupItemsType>;
};

export enum DeliveryGroupRefrigeration {
  /** FROZEN */
  Frozen = 'FROZEN',
  /** NORMAL_TEMPERATURE */
  NormalTemperature = 'NORMAL_TEMPERATURE',
  /** REFRIGERATOR */
  Refrigerator = 'REFRIGERATOR'
}

export enum DeliveryGroupStatus {
  /** CANCELLED */
  Cancelled = 'CANCELLED',
  /** IN_PROGRESS */
  InProgress = 'IN_PROGRESS',
  /** PENDING */
  Pending = 'PENDING',
  /** SHIPPING */
  Shipping = 'SHIPPING'
}

export type DeliveryGroupType = Node & {
  __typename?: 'DeliveryGroupType';
  actualDeliveryDate?: Maybe<Scalars['Date']['output']>;
  amount?: Maybe<Scalars['Decimal']['output']>;
  deliveryFee?: Maybe<Scalars['Decimal']['output']>;
  deliveryRule?: Maybe<OrderDeliveryRuleInOrderGroupType>;
  displayId: Scalars['String']['output'];
  estimateArrivalDate?: Maybe<Scalars['Date']['output']>;
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  isFreeDelivery: Scalars['Boolean']['output'];
  items?: Maybe<Array<OrderGroupItemType>>;
  order?: Maybe<OrderInDeliveryGroupType>;
  quantity: Scalars['Int']['output'];
  refrigeration: DeliveryGroupRefrigeration;
  status: DeliveryGroupStatus;
  supplier?: Maybe<OrderSupplierType>;
  totalItemImportPrice?: Maybe<Scalars['Decimal']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type DeliveryGroupTypeConnection = {
  __typename?: 'DeliveryGroupTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<DeliveryGroupTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `DeliveryGroupType` and its cursor. */
export type DeliveryGroupTypeEdge = {
  __typename?: 'DeliveryGroupTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<DeliveryGroupType>;
};

export type DeliveryGroupsMarkShipping = {
  __typename?: 'DeliveryGroupsMarkShipping';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type DeliveryRuleCreateInput = {
  chargedByOrder?: InputMaybe<ChargedByOrderCreateInput>;
  chargedByQuantity?: InputMaybe<ChargedByQuantityCreateInput>;
  chargedByRefrigerations?: InputMaybe<Array<InputMaybe<ChargedByRefrigerationCreateInput>>>;
  type: DeliveryRuleType;
};

export type DeliveryRuleInput = {
  deliveryDiscountPolicy?: InputMaybe<DeliveryDiscountPolicyInput>;
  deliveryDistance?: InputMaybe<Scalars['Decimal']['input']>;
  deliveryFee?: InputMaybe<Scalars['Decimal']['input']>;
  deliveryThresholdPrice?: InputMaybe<Scalars['Decimal']['input']>;
  estimatedDeliveryTime?: InputMaybe<Scalars['Int']['input']>;
  isDeliveryThresholdPriceEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

/** align with related_name/column_name, so value are in lower case */
export enum DeliveryRuleType {
  ChargedByHqDefine = 'CHARGED_BY_HQ_DEFINE',
  ChargedByOrder = 'CHARGED_BY_ORDER',
  ChargedByQuantity = 'CHARGED_BY_QUANTITY',
  ChargedByRefrigerations = 'CHARGED_BY_REFRIGERATIONS',
  FreeOfCharge = 'FREE_OF_CHARGE',
  OnsiteShippingCharge = 'ONSITE_SHIPPING_CHARGE'
}

export type DevToolCleanOrders = {
  __typename?: 'DevToolCleanOrders';
  ok?: Maybe<Scalars['Boolean']['output']>;
};

export type DevToolSendOnlineRestaurantOrderMutation = {
  __typename?: 'DevToolSendOnlineRestaurantOrderMutation';
  ok?: Maybe<Scalars['Boolean']['output']>;
};

export enum DinerAvatarEnum {
  Alien = 'ALIEN',
  Bear = 'BEAR',
  Cat = 'CAT',
  Dog = 'DOG',
  Fox = 'FOX',
  Frog = 'FROG',
  Ghost = 'GHOST',
  Horse = 'HORSE',
  Koala = 'KOALA',
  Lion = 'LION',
  Monkey = 'MONKEY',
  Mouse = 'MOUSE',
  Panda = 'PANDA',
  Pig = 'PIG',
  PolarBear = 'POLAR_BEAR',
  Preorder = 'PREORDER',
  Rabbit = 'RABBIT',
  Raccoon = 'RACCOON',
  Tiger = 'TIGER'
}

export type DisassociatedModulesNotificationOutput = {
  __typename?: 'DisassociatedModulesNotificationOutput';
  currentReceivedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  disassociatedModules?: Maybe<Array<Maybe<HqBranchModules>>>;
  isMemberMerged?: Maybe<Scalars['Boolean']['output']>;
};

export enum DiscountCategoryEnum {
  Coupon = 'COUPON',
  Discount = 'DISCOUNT'
}

export type DiscountMutation = {
  __typename?: 'DiscountMutation';
  copyDiscount?: Maybe<DiscountOutput>;
  createDiscount?: Maybe<DiscountOutput>;
  deleteDiscount?: Maybe<DeleteDiscount>;
  sortDiscount?: Maybe<Array<Maybe<DiscountOutput>>>;
  updateDiscount?: Maybe<DiscountOutput>;
};


export type DiscountMutationCopyDiscountArgs = {
  uuid: Scalars['UUID']['input'];
};


export type DiscountMutationCreateDiscountArgs = {
  payload?: InputMaybe<CreateDiscountPayload>;
};


export type DiscountMutationDeleteDiscountArgs = {
  uuid: Scalars['UUID']['input'];
};


export type DiscountMutationSortDiscountArgs = {
  uuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


export type DiscountMutationUpdateDiscountArgs = {
  payload?: InputMaybe<UpdateDiscountPayload>;
  uuid: Scalars['UUID']['input'];
};

export type DiscountOutput = {
  __typename?: 'DiscountOutput';
  allowedOnFoodpanda: Scalars['Boolean']['output'];
  allowedOnGrabfood: Scalars['Boolean']['output'];
  allowedOnIpad: Scalars['Boolean']['output'];
  allowedOnOnlineRestaurant: Scalars['Boolean']['output'];
  allowedOnUbereats: Scalars['Boolean']['output'];
  authCategory: Array<AuthCategoryDjangoObjectType>;
  cgTypes?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  coupon?: Maybe<CouponOutput>;
  customerNumber?: Maybe<Scalars['String']['output']>;
  customerNumberEnd?: Maybe<Scalars['Int']['output']>;
  customerNumberStart?: Maybe<Scalars['Int']['output']>;
  defaultOnOnlineRestaurant: Scalars['Boolean']['output'];
  discountType: Scalars['String']['output'];
  discountValue: Scalars['Float']['output'];
  groupType?: Maybe<Scalars['String']['output']>;
  id: Scalars['ID']['output'];
  invoiceMinusInterlockServiceCharge: Scalars['Boolean']['output'];
  isAuthenticated: Scalars['Boolean']['output'];
  isOpen: Scalars['Boolean']['output'];
  isdeleted: Scalars['Boolean']['output'];
  itemMinusInterlockServiceCharge: Scalars['Boolean']['output'];
  menuItem: Array<MenuItemType>;
  minimumAmount: Scalars['Float']['output'];
  name: Scalars['String']['output'];
  onlineDescription?: Maybe<Scalars['String']['output']>;
  openAdvanceCondition: Scalars['Boolean']['output'];
  periodEnd?: Maybe<Scalars['Date']['output']>;
  periodStart?: Maybe<Scalars['Date']['output']>;
  restaurant: RestaurantType;
  sort: Scalars['Int']['output'];
  timeLimit?: Maybe<Scalars['String']['output']>;
  timeLimitEnd?: Maybe<Scalars['Int']['output']>;
  timeLimitStart?: Maybe<Scalars['Int']['output']>;
  useTimeLimit: Scalars['Boolean']['output'];
  uuid: Scalars['String']['output'];
  weekday?: Maybe<Scalars['String']['output']>;
  weekdays?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export enum DiscountPolicyType {
  Full = 'FULL',
  NoDiscount = 'NO_DISCOUNT',
  Partial = 'PARTIAL'
}

export type DiscountQuery = {
  __typename?: 'DiscountQuery';
  discount?: Maybe<DiscountOutput>;
  discounts?: Maybe<Array<Maybe<DiscountOutput>>>;
};


export type DiscountQueryDiscountArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type DiscountReportBasicOutput = {
  __typename?: 'DiscountReportBasicOutput';
  discountAmount?: Maybe<Scalars['Decimal']['output']>;
  orderCount?: Maybe<Scalars['Int']['output']>;
  revenueAmount?: Maybe<Scalars['Decimal']['output']>;
  revenuePercentage?: Maybe<Scalars['Decimal']['output']>;
};

export type DiscountReportOutput = {
  __typename?: 'DiscountReportOutput';
  discountAmount?: Maybe<Scalars['Decimal']['output']>;
  discountCategory?: Maybe<DiscountCategoryEnum>;
  discountName?: Maybe<Scalars['String']['output']>;
  onlineRestaurant?: Maybe<DiscountReportBasicOutput>;
  orderCount?: Maybe<Scalars['Int']['output']>;
  pos?: Maybe<DiscountReportBasicOutput>;
  revenueAmount?: Maybe<Scalars['Decimal']['output']>;
  revenuePercentage?: Maybe<Scalars['Decimal']['output']>;
};

export type DiscountReportQuery = {
  __typename?: 'DiscountReportQuery';
  discountSummary?: Maybe<DiscountSummaryReportOutput>;
  discounts?: Maybe<Array<Maybe<DiscountReportOutput>>>;
  summary?: Maybe<DiscountSummaryReportOutput>;
};

export type DiscountReportQueryPayload = {
  endDate: Scalars['Date']['input'];
  endTime: Scalars['Time']['input'];
  multistoreRestaurantUuidList?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  peopleCountMax: Scalars['Int']['input'];
  peopleCountMin: Scalars['Int']['input'];
  serviceTypes: Array<InputMaybe<ServiceTypes>>;
  startDate: Scalars['Date']['input'];
  startTime: Scalars['Time']['input'];
  weekdays: Array<InputMaybe<Weekday>>;
};

export enum DiscountSnapshotDiscountType {
  /** INVOICE_MINUS */
  InvoiceMinus = 'INVOICE_MINUS',
  /** INVOICE_MULTIPLY */
  InvoiceMultiply = 'INVOICE_MULTIPLY',
  /** ITEM_MINUS */
  ItemMinus = 'ITEM_MINUS',
  /** ITEM_MULTIPLY */
  ItemMultiply = 'ITEM_MULTIPLY',
  /** MANUAL */
  Manual = 'MANUAL'
}

export type DiscountSnapshotOutput = {
  __typename?: 'DiscountSnapshotOutput';
  allowedOnFoodpanda: Scalars['Boolean']['output'];
  allowedOnGrabfood: Scalars['Boolean']['output'];
  allowedOnIpad: Scalars['Boolean']['output'];
  allowedOnOnlineRestaurant: Scalars['Boolean']['output'];
  allowedOnUbereats: Scalars['Boolean']['output'];
  cgTypes?: Maybe<Scalars['String']['output']>;
  coupon?: Maybe<CouponSnapshotOutput>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  customerNumber?: Maybe<Scalars['String']['output']>;
  defaultOnOnlineRestaurant: Scalars['Boolean']['output'];
  discountType: DiscountSnapshotDiscountType;
  discountValue: Scalars['Float']['output'];
  id: Scalars['ID']['output'];
  invoiceMinusInterlockServiceCharge: Scalars['Boolean']['output'];
  itemMinusInterlockServiceCharge: Scalars['Boolean']['output'];
  markShouldDeleteAt?: Maybe<Scalars['DateTime']['output']>;
  menuItemUuids?: Maybe<Array<Scalars['UUID']['output']>>;
  minimumAmount: Scalars['Float']['output'];
  moduleUuid: Scalars['String']['output'];
  name: Scalars['String']['output'];
  onlineDescription?: Maybe<Scalars['String']['output']>;
  onlineRestaurantMenuItemSnapshotNames?: Maybe<Array<Scalars['String']['output']>>;
  onlineRestaurantMenuItemSnapshotUuids?: Maybe<Array<Scalars['UUID']['output']>>;
  openAdvanceCondition: Scalars['Boolean']['output'];
  periodEnd?: Maybe<Scalars['Date']['output']>;
  periodStart?: Maybe<Scalars['Date']['output']>;
  posOnlyMenuItemNames?: Maybe<Array<Scalars['String']['output']>>;
  restaurantUuid: Scalars['UUID']['output'];
  settingFileVersion: Scalars['String']['output'];
  sort: Scalars['Int']['output'];
  timeLimit?: Maybe<Scalars['String']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  useTimeLimit: Scalars['Boolean']['output'];
  uuid: Scalars['String']['output'];
  weekday?: Maybe<Scalars['String']['output']>;
};

export type DiscountSummaryReportOutput = {
  __typename?: 'DiscountSummaryReportOutput';
  discountAmount?: Maybe<Scalars['Decimal']['output']>;
  orderCount?: Maybe<Scalars['Int']['output']>;
  revenueAmount?: Maybe<Scalars['Decimal']['output']>;
  revenuePercentage?: Maybe<Scalars['Decimal']['output']>;
};

export type DisplayMenuItemCountInPosOutputUnionType = OkOutput | UnhandledError;

export type DisplayedTimePeriodsObjectType = {
  __typename?: 'DisplayedTimePeriodsObjectType';
  timePeriods?: Maybe<Array<Maybe<TimePeriodObjectType>>>;
  weekday?: Maybe<Scalars['String']['output']>;
};

export enum DisposableTablewareVisibility {
  Hidden = 'HIDDEN',
  Optional = 'OPTIONAL'
}

export type EReceiptOutput = SgeReceipt;

export type EachLimitUsageQuery = {
  __typename?: 'EachLimitUsageQuery';
  crmMember?: Maybe<CrmUsage>;
  inventoryItems?: Maybe<InventoryItemUsageOutput>;
  isTaiwanInvoiceEnabled?: Maybe<Scalars['Boolean']['output']>;
  lastMonthRevenue?: Maybe<RevenueOutput>;
  thisMonthRevenue?: Maybe<RevenueOutput>;
};

export type EaterOutput = {
  __typename?: 'EaterOutput';
  customerNumber?: Maybe<Scalars['String']['output']>;
  deliveryAddress?: Maybe<Scalars['String']['output']>;
  deliveryFloor?: Maybe<Scalars['String']['output']>;
  deviceCode?: Maybe<Scalars['String']['output']>;
  diner?: Maybe<CartDinerOutput>;
  email?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  tableName?: Maybe<Scalars['String']['output']>;
  taiwanCorporateTaxId?: Maybe<Scalars['String']['output']>;
};

export enum EmergentContractTypes {
  EmergentExtend = 'EMERGENT_EXTEND',
  EmergentIncrement = 'EMERGENT_INCREMENT'
}

export type EntryCodeCannotProduceError = {
  __typename?: 'EntryCodeCannotProduceError';
  message?: Maybe<Scalars['String']['output']>;
};

export type EventGroupReportObject = {
  __typename?: 'EventGroupReportObject';
  amountDifference?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  cgIdentity?: Maybe<Scalars['String']['output']>;
  cgNumber?: Maybe<Scalars['Int']['output']>;
  cgType?: Maybe<InventoryEventCgTypeEnum>;
  cgUuid?: Maybe<Scalars['String']['output']>;
  consumptionAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  countingAmount?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  datetime?: Maybe<Scalars['String']['output']>;
  eventGeneratedBy?: Maybe<InventoryEventGeneratedByEnum>;
  eventType?: Maybe<InventoryEventTypeEnum>;
  eventUuid?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  purchaseAmount?: Maybe<Scalars['String']['output']>;
  returnAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  scrappedAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  usageAmount?: Maybe<Scalars['ReverseNumberSignDecimalStr']['output']>;
  userName?: Maybe<Scalars['String']['output']>;
};

export enum EventGroupReportObjectEnumType {
  AmountDifference = 'AMOUNT_DIFFERENCE',
  CgIdentity = 'CG_IDENTITY',
  CgNumber = 'CG_NUMBER',
  CgType = 'CG_TYPE',
  CgUuid = 'CG_UUID',
  ConsumptionAmount = 'CONSUMPTION_AMOUNT',
  CountingAmount = 'COUNTING_AMOUNT',
  Datetime = 'DATETIME',
  EventGeneratedBy = 'EVENT_GENERATED_BY',
  EventType = 'EVENT_TYPE',
  EventUuid = 'EVENT_UUID',
  Note = 'NOTE',
  PurchaseAmount = 'PURCHASE_AMOUNT',
  ReturnAmount = 'RETURN_AMOUNT',
  ScrappedAmount = 'SCRAPPED_AMOUNT',
  UsageAmount = 'USAGE_AMOUNT',
  UserName = 'USER_NAME'
}

export type EventInput = {
  cgIdentity?: InputMaybe<Scalars['String']['input']>;
  cgNumber?: InputMaybe<Scalars['Int']['input']>;
  cgType?: InputMaybe<InventoryEventCgTypeEnum>;
  cgUuid?: InputMaybe<Scalars['UUID']['input']>;
  generatedBy?: InputMaybe<InventoryEventGeneratedByEnum>;
  lastEventUuid?: InputMaybe<Scalars['UUID']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  timestamp: Scalars['Float']['input'];
  totalAmountDifference?: InputMaybe<Scalars['String']['input']>;
  type: InventoryEventTypeEnum;
  userName?: InputMaybe<Scalars['String']['input']>;
  userUuid?: InputMaybe<Scalars['UUID']['input']>;
  uuid: Scalars['UUID']['input'];
};

export type EventsConnection = {
  __typename?: 'EventsConnection';
  nodes?: Maybe<Array<Maybe<PointEvent>>>;
  pageInfo: PageInformation;
};

export type ExceedSystemMaximumCountError = {
  __typename?: 'ExceedSystemMaximumCountError';
  message?: Maybe<Scalars['String']['output']>;
};

export type ExpenseDetailObject = {
  __typename?: 'ExpenseDetailObject';
  amount?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
};

export type FacebookIntegrationMutation = {
  __typename?: 'FacebookIntegrationMutation';
  setupLoyaltyProgram?: Maybe<LoyaltyProgramSettingOutput>;
  updateLoyaltyProgramDescription?: Maybe<LoyaltyProgramSettingOutput>;
};


export type FacebookIntegrationMutationSetupLoyaltyProgramArgs = {
  input?: InputMaybe<SetupLoyaltyProgramInput>;
};


export type FacebookIntegrationMutationUpdateLoyaltyProgramDescriptionArgs = {
  input?: InputMaybe<UpdateLoyaltyProgramDescriptionInput>;
};

export type FacebookIntegrationQuery = {
  __typename?: 'FacebookIntegrationQuery';
  getLoyaltyProgramSetting?: Maybe<LoyaltyProgramSettingOutput>;
};

export type FailedInvitationResultOutput = {
  __typename?: 'FailedInvitationResultOutput';
  branchLoginId?: Maybe<Scalars['String']['output']>;
  branchName?: Maybe<Scalars['String']['output']>;
  branchStoreId?: Maybe<Scalars['String']['output']>;
  failedReason?: Maybe<InviteBranchFailedReason>;
  modules?: Maybe<Array<Maybe<HqBranchModules>>>;
};

/** Tests are in GatekeeperVersionFlagSchemaTestCase. */
export type FeatureVersionFlagOutput = {
  __typename?: 'FeatureVersionFlagOutput';
  allowCashDrawerSetting?: Maybe<Scalars['String']['output']>;
  allowCreateKgiPayment?: Maybe<Scalars['String']['output']>;
  allowCreateTaishinPayment?: Maybe<Scalars['String']['output']>;
  allowGlobalPayments?: Maybe<Scalars['String']['output']>;
  allowInstoreGroupOrderingM1?: Maybe<Scalars['String']['output']>;
  allowInstoreLine?: Maybe<Scalars['String']['output']>;
  allowInstoreMealTimeLimits?: Maybe<Scalars['String']['output']>;
  allowInstoreOrdering?: Maybe<Scalars['String']['output']>;
  allowInstoreOrderingSessionM2?: Maybe<Scalars['String']['output']>;
  allowInstorePoints?: Maybe<Scalars['String']['output']>;
  allowIpfModule?: Maybe<Scalars['String']['output']>;
  allowMenuItemCountInPos?: Maybe<Scalars['String']['output']>;
  allowOnlineStorePxPayPlus?: Maybe<Scalars['String']['output']>;
  allowProjectComboItemMultiOption?: Maybe<Scalars['String']['output']>;
  allowPxPayPlus?: Maybe<Scalars['String']['output']>;
  allowReservation?: Maybe<Scalars['String']['output']>;
  allowReservationBlocklist?: Maybe<Scalars['String']['output']>;
  allowReservationOversea?: Maybe<Scalars['String']['output']>;
  allowReserveWithGoogle?: Maybe<Scalars['String']['output']>;
  coupon?: Maybe<Scalars['String']['output']>;
  deliveryOrder?: Maybe<Scalars['String']['output']>;
  instoreAutoAcceptOrder?: Maybe<Scalars['String']['output']>;
  kitchenPrintRuleControl?: Maybe<Scalars['String']['output']>;
  menuItemSoldOutOptimizationM1?: Maybe<Scalars['String']['output']>;
  onlineOrderingDeviceCode?: Maybe<Scalars['String']['output']>;
  onlineRestaurantDeliveryOrder?: Maybe<Scalars['String']['output']>;
  onlineRestaurantDeliveryReservationOrder?: Maybe<Scalars['String']['output']>;
  onlineStoreEReceipt?: Maybe<Scalars['String']['output']>;
  onlineStripePay?: Maybe<Scalars['String']['output']>;
  showUnpaidSalesAmount?: Maybe<Scalars['String']['output']>;
  uploadOverdueInvoiceReminder?: Maybe<Scalars['String']['output']>;
};

export enum FieldType {
  Address = 'ADDRESS',
  Comment = 'COMMENT',
  EstimatedTime = 'ESTIMATED_TIME',
  People = 'PEOPLE',
  SerialNumber = 'SERIAL_NUMBER',
  SourceType = 'SOURCE_TYPE'
}

export type FinishRegistrationInput = {
  confirmPassword: Scalars['String']['input'];
  email: Scalars['String']['input'];
  mobile: Scalars['String']['input'];
  name: Scalars['String']['input'];
  password: Scalars['String']['input'];
  verificationCode: Scalars['String']['input'];
};

export type Flydove = {
  __typename?: 'Flydove';
  errorCode?: Maybe<Scalars['String']['output']>;
  errorMessage?: Maybe<Scalars['String']['output']>;
  isError?: Maybe<Scalars['String']['output']>;
  requestStatusCode?: Maybe<Scalars['Float']['output']>;
  signinUrl?: Maybe<Scalars['String']['output']>;
};

export type FlydoveAudienceObjectType = {
  __typename?: 'FlydoveAudienceObjectType';
  errorCode?: Maybe<Scalars['String']['output']>;
  errorMessage?: Maybe<Scalars['String']['output']>;
  isError?: Maybe<Scalars['Boolean']['output']>;
  signinUrl?: Maybe<Scalars['String']['output']>;
};

export type FoodieCrmMemberType = Node & {
  __typename?: 'FoodieCrmMemberType';
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  mobile?: Maybe<Scalars['String']['output']>;
  pointEventHistory?: Maybe<PointEventHistory>;
  points?: Maybe<Scalars['Int']['output']>;
  restaurantUuid: Scalars['UUID']['output'];
  uuid?: Maybe<Scalars['UUID']['output']>;
};


export type FoodieCrmMemberTypePointEventHistoryArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  queryMonth?: InputMaybe<Scalars['Int']['input']>;
  queryYear?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export type FoodieCrmMemberTypeConnection = {
  __typename?: 'FoodieCrmMemberTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<FoodieCrmMemberTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `FoodieCrmMemberType` and its cursor. */
export type FoodieCrmMemberTypeEdge = {
  __typename?: 'FoodieCrmMemberTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<FoodieCrmMemberType>;
};

export enum FoodieMode {
  Disabled = 'DISABLED',
  Enabled = 'ENABLED',
  Forced = 'FORCED'
}

export type FoodpandaAutoSyncMenuMutation = {
  __typename?: 'FoodpandaAutoSyncMenuMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type FoodpandaBatchDeleteMutation = {
  __typename?: 'FoodpandaBatchDeleteMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type FoodpandaCustomizeTagGroupPayload = {
  name?: InputMaybe<Scalars['StripString']['input']>;
  translationName?: InputMaybe<Scalars['StripString']['input']>;
};

export type FoodpandaCustomizeTagPayload = {
  name?: InputMaybe<Scalars['StripString']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
  translationName?: InputMaybe<Scalars['StripString']['input']>;
};

export type FoodpandaCustomizedTagFieldsOutput = {
  __typename?: 'FoodpandaCustomizedTagFieldsOutput';
  name?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['String']['output']>;
};

export type FoodpandaCustomizedTagGroupFieldsOutput = {
  __typename?: 'FoodpandaCustomizedTagGroupFieldsOutput';
  name?: Maybe<Scalars['String']['output']>;
};

export type FoodpandaHiddenTagsAndTagGroupsPayload = {
  hiddenTagGroupUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  hiddenTagUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};

export type FoodpandaIntegrationOutput = {
  __typename?: 'FoodpandaIntegrationOutput';
  applyingFormUrl?: Maybe<Scalars['String']['output']>;
  applyingStatus?: Maybe<ApplyingStatus>;
  containerMenuItemUuid?: Maybe<Scalars['UUID']['output']>;
  foodpandaChainId?: Maybe<Scalars['String']['output']>;
  paymentModuleUuid: Scalars['UUID']['output'];
  restaurantUuid: Scalars['UUID']['output'];
  uuid: Scalars['UUID']['output'];
};

export enum FoodpandaInvoiceIssuePolicy {
  Disabled = 'DISABLED',
  Enabled = 'ENABLED',
  FoodpandaIntegrationNotAvailable = 'FOODPANDA_INTEGRATION_NOT_AVAILABLE'
}

export type FoodpandaMenuByWeekdaysOutput = {
  __typename?: 'FoodpandaMenuByWeekdaysOutput';
  timePeriodsByWeekday?: Maybe<Array<Maybe<FoodpandaTimePeriodByWeekdayOutput>>>;
  weekday?: Maybe<Weekday>;
};

export type FoodpandaMenuCategoryOutput = {
  __typename?: 'FoodpandaMenuCategoryOutput';
  description?: Maybe<Scalars['String']['output']>;
  menuItems: Array<FoodpandaMenuItemOutput>;
  menus: Array<FoodpandaMenuOutput>;
  /** Name of the record, max_length = 191. */
  name: Scalars['String']['output'];
  /** Used to sort records, starting at 0. */
  sortingIndex: Scalars['Int']['output'];
  translationDescription: Scalars['String']['output'];
  translationName: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
};

export type FoodpandaMenuCategoryPayload = {
  description?: InputMaybe<Scalars['StripString']['input']>;
  menuUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  name: Scalars['StripString']['input'];
  translationDescription?: InputMaybe<Scalars['StripString']['input']>;
  translationName?: InputMaybe<Scalars['StripString']['input']>;
};

export enum FoodpandaMenuItemMappingType {
  /** COMBO_MENU_ITEM */
  ComboMenuItem = 'COMBO_MENU_ITEM',
  /** MENU_ITEM */
  MenuItem = 'MENU_ITEM',
  /** MENU_ITEM_TAG */
  MenuItemTag = 'MENU_ITEM_TAG',
  /** NOT_MAPPED */
  None = 'NONE'
}

export type FoodpandaMenuItemOutput = {
  __typename?: 'FoodpandaMenuItemOutput';
  category?: Maybe<FoodpandaMenuCategoryOutput>;
  customizedName?: Maybe<Scalars['String']['output']>;
  customizedPrice?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  displayPrice?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  mappingType: FoodpandaMenuItemMappingType;
  modifierGroups: Array<FoodpandaModifierGroupOutput>;
  originalName?: Maybe<Scalars['String']['output']>;
  originalPrice?: Maybe<Scalars['String']['output']>;
  pictureFilename: Scalars['String']['output'];
  /** Used to sort records, starting at 0. */
  sortingIndex: Scalars['Int']['output'];
  taxAdjustedPrice?: Maybe<Scalars['String']['output']>;
  translationCustomizedName: Scalars['String']['output'];
  translationDescription: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
};

export type FoodpandaMenuItemPayload = {
  categoryUuid: Scalars['UUID']['input'];
  customizedName?: InputMaybe<Scalars['StripString']['input']>;
  customizedPrice?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['StripString']['input']>;
  pictureFilename?: InputMaybe<Scalars['String']['input']>;
  translationCustomizedName?: InputMaybe<Scalars['StripString']['input']>;
  translationDescription?: InputMaybe<Scalars['StripString']['input']>;
};

export type FoodpandaMenuMutation = {
  __typename?: 'FoodpandaMenuMutation';
  autoSyncMenu?: Maybe<FoodpandaAutoSyncMenuMutation>;
  batchDelete?: Maybe<FoodpandaBatchDeleteMutation>;
  createMenu?: Maybe<FoodpandaMenuOutput>;
  createMenuCategory?: Maybe<FoodpandaMenuCategoryOutput>;
  customizeTag?: Maybe<CustomizeFoodpandaTagMutation>;
  customizeTagGroup?: Maybe<CustomizeFoodpandaTagGroupMutation>;
  deleteMenu?: Maybe<FoodpandaMenuOutput>;
  deleteMenuCategory?: Maybe<FoodpandaMenuCategoryOutput>;
  deleteMenuItem?: Maybe<FoodpandaMenuItemOutput>;
  importMenuItemToCategory?: Maybe<Array<Maybe<FoodpandaMenuCategoryOutput>>>;
  reorderMenuCategories?: Maybe<Array<Maybe<FoodpandaMenuCategoryOutput>>>;
  setHiddenTagsAndTagGroups?: Maybe<SetFoodpandaHiddenTagsAndGroupsMutation>;
  updateMenu?: Maybe<FoodpandaMenuOutput>;
  updateMenuCategory?: Maybe<FoodpandaMenuCategoryOutput>;
  updateMenuItem?: Maybe<FoodpandaMenuItemOutput>;
  validateMenu?: Maybe<ValidateFoodpandaMenuMutation>;
  validateMenuTimePeriod?: Maybe<ValidateFoodpandaMenuTimePeriodMutation>;
  validateTagsAndTagGroups?: Maybe<ValidateFoodpandaTagsAndTagGroupsMutation>;
};


export type FoodpandaMenuMutationBatchDeleteArgs = {
  categoryUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


export type FoodpandaMenuMutationCreateMenuArgs = {
  payload: FoodpandaMenuPayload;
};


export type FoodpandaMenuMutationCreateMenuCategoryArgs = {
  payload: FoodpandaMenuCategoryPayload;
};


export type FoodpandaMenuMutationCustomizeTagArgs = {
  payload: FoodpandaCustomizeTagPayload;
  uuid: Scalars['UUID']['input'];
};


export type FoodpandaMenuMutationCustomizeTagGroupArgs = {
  payload: FoodpandaCustomizeTagGroupPayload;
  uuid: Scalars['UUID']['input'];
};


export type FoodpandaMenuMutationDeleteMenuArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type FoodpandaMenuMutationDeleteMenuCategoryArgs = {
  uuid: Scalars['UUID']['input'];
};


export type FoodpandaMenuMutationDeleteMenuItemArgs = {
  uuid: Scalars['UUID']['input'];
};


export type FoodpandaMenuMutationImportMenuItemToCategoryArgs = {
  ichefMenuItemUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  uuid: Scalars['UUID']['input'];
};


export type FoodpandaMenuMutationReorderMenuCategoriesArgs = {
  payload: Array<InputMaybe<FoodpandaReorderMenuCategoryPayload>>;
};


export type FoodpandaMenuMutationSetHiddenTagsAndTagGroupsArgs = {
  payload: FoodpandaHiddenTagsAndTagGroupsPayload;
};


export type FoodpandaMenuMutationUpdateMenuArgs = {
  payload: FoodpandaMenuPayload;
  uuid: Scalars['UUID']['input'];
};


export type FoodpandaMenuMutationUpdateMenuCategoryArgs = {
  payload: FoodpandaMenuCategoryPayload;
  uuid: Scalars['UUID']['input'];
};


export type FoodpandaMenuMutationUpdateMenuItemArgs = {
  payload: FoodpandaMenuItemPayload;
  uuid: Scalars['UUID']['input'];
};


export type FoodpandaMenuMutationValidateMenuTimePeriodArgs = {
  payload: FoodpandaMenuTimePeriodValidationPayload;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type FoodpandaMenuOutput = {
  __typename?: 'FoodpandaMenuOutput';
  name: Scalars['String']['output'];
  timePeriods?: Maybe<Array<Maybe<FoodpandaMenuTimePeriodOutput>>>;
  /** Used as an unique ID of the record. Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export type FoodpandaMenuPayload = {
  name: Scalars['StripString']['input'];
  timePeriods: Array<InputMaybe<FoodpandaMenuTimePeriodPayload>>;
};

export type FoodpandaMenuQuery = {
  __typename?: 'FoodpandaMenuQuery';
  categories?: Maybe<Array<Maybe<FoodpandaMenuCategoryOutput>>>;
  getUploadMenuStatus?: Maybe<FoodpandaUploadMenuStatusOutput>;
  hiddenTagGroupUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  hiddenTagUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  menuByWeekdays?: Maybe<Array<Maybe<FoodpandaMenuByWeekdaysOutput>>>;
  menuItem?: Maybe<FoodpandaMenuItemOutput>;
  menuTagGroups?: Maybe<Array<Maybe<FoodpandaMenuTagGroupOutput>>>;
  menuTags?: Maybe<Array<Maybe<FoodpandaMenuTagOutput>>>;
  menus?: Maybe<Array<Maybe<FoodpandaMenuOutput>>>;
};


export type FoodpandaMenuQueryCategoriesArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type FoodpandaMenuQueryMenuItemArgs = {
  uuid: Scalars['UUID']['input'];
};

/**
 * Sample on spec:
 * {
 *   "uuid": "123-456",
 *   "customizedFields": {
 *     "name": "蛋炒飯",
 *   },
 *   "translationName": "fried rice",
 * }
 */
export type FoodpandaMenuTagGroupOutput = {
  __typename?: 'FoodpandaMenuTagGroupOutput';
  customizedFields?: Maybe<FoodpandaCustomizedTagGroupFieldsOutput>;
  subTags?: Maybe<Array<Maybe<FoodpandaMenuTagOutput>>>;
  translationName?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

/**
 * Sample on spec:
 * {
 *   "uuid": "123-456",
 *   "taxAdjustedPrice": "23.30",
 *   "customizedFields": {
 *     "name": "現在你說要加改培根",
 *     "price": "00.50"
 *   },
 *   "translationName": "bacon instead",
 * }
 */
export type FoodpandaMenuTagOutput = {
  __typename?: 'FoodpandaMenuTagOutput';
  customizedFields?: Maybe<FoodpandaCustomizedTagFieldsOutput>;
  taxAdjustedPrice?: Maybe<Scalars['String']['output']>;
  translationName?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type FoodpandaMenuTimePeriodOutput = {
  __typename?: 'FoodpandaMenuTimePeriodOutput';
  endTime?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
  weekdays?: Maybe<Array<Maybe<Weekday>>>;
};

export type FoodpandaMenuTimePeriodPayload = {
  endTime: Scalars['String']['input'];
  startTime: Scalars['String']['input'];
  weekdays: Array<InputMaybe<Weekday>>;
};

export type FoodpandaMenuTimePeriodValidationPayload = {
  timePeriods: Array<InputMaybe<FoodpandaMenuTimePeriodPayload>>;
};

export enum FoodpandaModifierGroupMappingType {
  /** COMBO_ITEM_CATEGORY */
  ComboItemCategory = 'COMBO_ITEM_CATEGORY',
  /** NONE */
  None = 'NONE',
  /** TAG_GROUP */
  TagGroup = 'TAG_GROUP',
  /** VIRTUAL_TAG_GROUP */
  VirtualTagGroup = 'VIRTUAL_TAG_GROUP'
}

export type FoodpandaModifierGroupOutput = {
  __typename?: 'FoodpandaModifierGroupOutput';
  displayName?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  mappingType: FoodpandaModifierGroupMappingType;
  maximumSelection?: Maybe<Scalars['String']['output']>;
  minimumSelection?: Maybe<Scalars['String']['output']>;
  modifierOptions: Array<FoodpandaMenuItemOutput>;
  originalName?: Maybe<Scalars['String']['output']>;
  /** Used to sort records, starting at 0. */
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type FoodpandaMutation = {
  __typename?: 'FoodpandaMutation';
  applyFoodpandaIntegration?: Maybe<ApplyFoodpandaIntegrationMutation>;
  terminateFoodpandaIntegration?: Maybe<TerminateFoodpandaIntegrationMutation>;
};


export type FoodpandaMutationApplyFoodpandaIntegrationArgs = {
  payload?: InputMaybe<ApplyFoodpandaIntegrationInput>;
};


export type FoodpandaMutationTerminateFoodpandaIntegrationArgs = {
  payload?: InputMaybe<TerminateFoodpandaIntegrationInput>;
};

export type FoodpandaReorderMenuCategoryPayload = {
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid: Scalars['String']['input'];
};

export type FoodpandaTagControlType = {
  __typename?: 'FoodpandaTagControlType';
  menuItemTag: MenuItemTagType;
};

export type FoodpandaTimePeriodByWeekdayOutput = {
  __typename?: 'FoodpandaTimePeriodByWeekdayOutput';
  endTime?: Maybe<Scalars['String']['output']>;
  menuName?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['String']['output']>;
};

export type FoodpandaUploadMenuStatusOutput = {
  __typename?: 'FoodpandaUploadMenuStatusOutput';
  latestSuccessTime?: Maybe<Scalars['String']['output']>;
  uploadStatus?: Maybe<UploadMenuStatus>;
};

export type GmbBindingOutput = {
  __typename?: 'GMBBindingOutput';
  address?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  googleMapUrl?: Maybe<Scalars['String']['output']>;
  locationId?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

export type GmbMutation = {
  __typename?: 'GMBMutation';
  bindGmb?: Maybe<GmbBindingOutput>;
  createGmb?: Maybe<GmbBindingOutput>;
  deleteMedia?: Maybe<DeleteMedia>;
  googleUserLogin?: Maybe<GoogleUserLogin>;
  unbindGmb?: Maybe<GmbBindingOutput>;
  updateLocationAttributes?: Maybe<UpdateLocationAttributes>;
  updateLocationInformation?: Maybe<LocationInformationOutput>;
  uploadMedia?: Maybe<MediaItemOutput>;
  /**
   * Validate web user already login the gmb-binding user
   * Ref: https://developers.google.com/identity/sign-in/web/backend-auth#verify-the-integrity-of-the-id-token
   */
  validateGoogleToken?: Maybe<ValidateGoogleToken>;
};


export type GmbMutationBindGmbArgs = {
  input?: InputMaybe<BindGmbInput>;
};


export type GmbMutationCreateGmbArgs = {
  input?: InputMaybe<CreateGmbInput>;
};


export type GmbMutationDeleteMediaArgs = {
  mediaName?: InputMaybe<Scalars['String']['input']>;
};


export type GmbMutationGoogleUserLoginArgs = {
  googleAuthCode?: InputMaybe<Scalars['String']['input']>;
};


export type GmbMutationUpdateLocationAttributesArgs = {
  input?: InputMaybe<UpdateLocationAttributesInput>;
};


export type GmbMutationUpdateLocationInformationArgs = {
  input?: InputMaybe<UpdateLocationInformationInput>;
};


export type GmbMutationUploadMediaArgs = {
  input?: InputMaybe<UploadImageInput>;
};


export type GmbMutationValidateGoogleTokenArgs = {
  email?: InputMaybe<Scalars['String']['input']>;
};

export type GmbQuery = {
  __typename?: 'GMBQuery';
  availableAttributes?: Maybe<AvailableAttributesOutput>;
  existingLocations?: Maybe<LocationListOutputV1>;
  gmbBinding?: Maybe<GmbBindingOutput>;
  locationAttributes?: Maybe<LocationAttributesOutput>;
  locationInformation?: Maybe<LocationInformationOutput>;
  locationMedia?: Maybe<MediaItemListOutput>;
  searchCategories?: Maybe<LocationCategoryListOutput>;
  searchLocations?: Maybe<LocationListOutputV1>;
  storeInfo?: Maybe<StoreInfoQuery>;
};


export type GmbQueryExistingLocationsArgs = {
  email?: InputMaybe<Scalars['String']['input']>;
};


export type GmbQueryLocationMediaArgs = {
  category?: InputMaybe<Scalars['String']['input']>;
};


export type GmbQuerySearchCategoriesArgs = {
  languageCode?: InputMaybe<Scalars['String']['input']>;
  searchTerm?: InputMaybe<Scalars['String']['input']>;
};


export type GmbQuerySearchLocationsArgs = {
  email?: InputMaybe<Scalars['String']['input']>;
  searchName?: InputMaybe<Scalars['String']['input']>;
};

export type GstInfoObject = {
  __typename?: 'GSTInfoObject';
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  gstEnabled: Scalars['Boolean']['output'];
  gstRegisterAddress: Scalars['String']['output'];
  gstRegisterCompanyName: Scalars['String']['output'];
  gstRegisterNumber: Scalars['String']['output'];
  gstRegisterPhone: Scalars['String']['output'];
  taxIncluded: Scalars['Boolean']['output'];
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  uuid: Scalars['String']['output'];
};

export type GatekeeperOutput = {
  __typename?: 'GatekeeperOutput';
  allowCoupon?: Maybe<Scalars['Boolean']['output']>;
  allowDeliveryOrder?: Maybe<Scalars['Boolean']['output']>;
  allowDepositAndPreorder?: Maybe<Scalars['Boolean']['output']>;
  allowFoodie?: Maybe<Scalars['Boolean']['output']>;
  allowGrabfood?: Maybe<Scalars['Boolean']['output']>;
  allowHqMenuItemReport?: Maybe<Scalars['Boolean']['output']>;
  allowInstoreMember?: Maybe<Scalars['Boolean']['output']>;
  allowInstoreOrdering?: Maybe<Scalars['Boolean']['output']>;
  allowInstoreOrderingSessionM1?: Maybe<Scalars['Boolean']['output']>;
  allowInstoreOrderingSessionM2?: Maybe<Scalars['Boolean']['output']>;
  allowInstorePoints?: Maybe<Scalars['Boolean']['output']>;
  allowInventoryBom?: Maybe<Scalars['Boolean']['output']>;
  allowIpf?: Maybe<Scalars['Boolean']['output']>;
  allowLineOfficialAccount?: Maybe<Scalars['Boolean']['output']>;
  allowMultipleVirtualCashDrawers?: Maybe<Scalars['Boolean']['output']>;
  allowNewebCreditCardM1?: Maybe<Scalars['Boolean']['output']>;
  allowOnlinePoints?: Maybe<Scalars['Boolean']['output']>;
  allowOnlineRestaurantDeliveryOrder?: Maybe<Scalars['Boolean']['output']>;
  allowOnlineRestaurantReservationOrder?: Maybe<Scalars['Boolean']['output']>;
  allowPreorder?: Maybe<Scalars['Boolean']['output']>;
  allowProjectComboItemMultiOption?: Maybe<Scalars['Boolean']['output']>;
  allowPxPayPlus?: Maybe<Scalars['Boolean']['output']>;
  allowRemoveNullReceipt?: Maybe<Scalars['Boolean']['output']>;
  allowReservation?: Maybe<Scalars['Boolean']['output']>;
  allowReservationM2TakeoutSettings?: Maybe<Scalars['Boolean']['output']>;
  allowTagGroup?: Maybe<Scalars['Boolean']['output']>;
  allowWithoutNeweb?: Maybe<Scalars['Boolean']['output']>;
  hqAllowProjectComboItemMultiOption?: Maybe<Scalars['Boolean']['output']>;
  inventoryItemsLimitNumber?: Maybe<Scalars['Int']['output']>;
  ipfModuleFoodpandaVisible?: Maybe<Scalars['Boolean']['output']>;
  ipfModuleOnlineStoreOrderingVisible?: Maybe<Scalars['Boolean']['output']>;
  isFoodpandaModuleActivate?: Maybe<Scalars['Boolean']['output']>;
  isNewebRequiredForOnlineRestaurantOrdering?: Maybe<Scalars['Boolean']['output']>;
  isSkipDemoRestaurant?: Maybe<Scalars['Boolean']['output']>;
  memberSharingEnabled?: Maybe<Scalars['Boolean']['output']>;
  menuItemInventoryConsumptionLimitNumber?: Maybe<Scalars['Int']['output']>;
  menuItemTagInventoryConsumptionLimitNumber?: Maybe<Scalars['Int']['output']>;
  onlineStoreOrderingRequireIpfModule: Scalars['Boolean']['output'];
  onlineStoreOrderingUsingForFree?: Maybe<Scalars['Boolean']['output']>;
};

export enum GatewayPaymentGatewayType {
  /** EASY_WALLET */
  EasyWallet = 'EASY_WALLET',
  /** INSTORE_LINE */
  InstoreLine = 'INSTORE_LINE',
  /** INSTORE_PX_PAY_PLUS */
  InstorePxPayPlus = 'INSTORE_PX_PAY_PLUS',
  /** JKO */
  Jko = 'JKO',
  /** LINE */
  Line = 'LINE',
  /** NEWEB_CREDIT_CARD */
  NewebCreditCard = 'NEWEB_CREDIT_CARD',
  /** ONLINE_RESTAURANT_LINE */
  OnlineRestaurantLine = 'ONLINE_RESTAURANT_LINE',
  /** ONLINE_RESTAURANT_PX_PAY_PLUS */
  OnlineRestaurantPxPayPlus = 'ONLINE_RESTAURANT_PX_PAY_PLUS',
  /** ONLINE_STRIPE */
  OnlineStripe = 'ONLINE_STRIPE'
}

export type GatewayPaymentOutput = {
  __typename?: 'GatewayPaymentOutput';
  amount?: Maybe<Scalars['Float']['output']>;
  barcode?: Maybe<Scalars['String']['output']>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  eventUuid?: Maybe<Scalars['UUID']['output']>;
  gatewayType: GatewayPaymentGatewayType;
  id: Scalars['ID']['output'];
  invoiceUuid?: Maybe<Scalars['UUID']['output']>;
  isMarkedManually?: Maybe<Scalars['Boolean']['output']>;
  paymentUuid?: Maybe<Scalars['UUID']['output']>;
  posId?: Maybe<Scalars['String']['output']>;
  posTradeDatetime?: Maybe<Scalars['DateTime']['output']>;
  restaurantUuid?: Maybe<Scalars['UUID']['output']>;
  storeId?: Maybe<Scalars['String']['output']>;
  token?: Maybe<Scalars['String']['output']>;
  transactionStatus?: Maybe<RequestStatusTypes>;
  transactionStatusDescription?: Maybe<Scalars['String']['output']>;
  transactionType?: Maybe<RequestTypes>;
  transactionUuid: Scalars['UUID']['output'];
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  /** e.g. card last digits */
  vendorPaymentInfo?: Maybe<Scalars['String']['output']>;
  vendorPaymentMethod?: Maybe<VendorPaymentMethodTypes>;
  vendorRefundTransactionDatetime?: Maybe<Scalars['DateTime']['output']>;
  vendorRefundTransactionNumber?: Maybe<Scalars['String']['output']>;
  vendorTransactionDatetime?: Maybe<Scalars['DateTime']['output']>;
  vendorTransactionNumber?: Maybe<Scalars['String']['output']>;
};

export enum GenderTypes {
  Female = 'female',
  Male = 'male',
  Others = 'others'
}

export type GeocodeObjectType = {
  __typename?: 'GeocodeObjectType';
  lat?: Maybe<Scalars['Decimal']['output']>;
  lng?: Maybe<Scalars['Decimal']['output']>;
  placeId?: Maybe<Scalars['String']['output']>;
};

export type GetAllCustomerGroupConfigOutput = {
  __typename?: 'GetAllCustomerGroupConfigOutput';
  indoor?: Maybe<Array<Maybe<CustomerGroupConfigOutput>>>;
  takeout?: Maybe<Array<Maybe<CustomerGroupConfigOutput>>>;
};

export type GlobalPaymentLogMutation = {
  __typename?: 'GlobalPaymentLogMutation';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type GmbBindingObjectType = {
  __typename?: 'GmbBindingObjectType';
  isReserveWithGoogleOn?: Maybe<Scalars['Boolean']['output']>;
  isUrlLinkedToGmb?: Maybe<Scalars['Boolean']['output']>;
};

export type GmbError = {
  __typename?: 'GmbError';
  errorList?: Maybe<Array<Maybe<Scalars['GenericScalar']['output']>>>;
  message?: Maybe<Scalars['String']['output']>;
};

export type GoogleApiQuery = {
  __typename?: 'GoogleAPIQuery';
  fetchGeocode?: Maybe<GeocodeObjectType>;
};


export type GoogleApiQueryFetchGeocodeArgs = {
  address?: InputMaybe<Scalars['String']['input']>;
};

export type GooglePayOutput = {
  __typename?: 'GooglePayOutput';
  errorCode?: Maybe<Scalars['String']['output']>;
};

export type GoogleUserLogin = {
  __typename?: 'GoogleUserLogin';
  email?: Maybe<Scalars['String']['output']>;
};

export type GrabfoodHiddenTagsAndTagGroupsPayload = {
  hiddenTagGroupUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  hiddenTagUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};

export type GrabfoodIntegrationOutput = {
  __typename?: 'GrabfoodIntegrationOutput';
  grabfoodMerchantId: Scalars['String']['output'];
  paymentModuleUuid: Scalars['UUID']['output'];
  restaurantUuid: Scalars['UUID']['output'];
  uuid: Scalars['UUID']['output'];
};

export type GrabfoodMenuByWeekdaysOutput = {
  __typename?: 'GrabfoodMenuByWeekdaysOutput';
  timePeriodsByWeekday?: Maybe<Array<Maybe<GrabfoodTimePeriodByWeekdayOutput>>>;
  weekday?: Maybe<Weekday>;
};

export type GrabfoodMenuCategoryOutput = {
  __typename?: 'GrabfoodMenuCategoryOutput';
  menuItems: Array<GrabfoodMenuItemOutput>;
  menus: Array<GrabfoodMenuOutput>;
  /** Name of the record, max_length = 191. */
  name: Scalars['String']['output'];
  /** Used to sort records, starting at 0. */
  sortingIndex: Scalars['Int']['output'];
  uuid: Scalars['UUID']['output'];
};

export type GrabfoodMenuCategoryPayload = {
  menuUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  name: Scalars['StripString']['input'];
};

export enum GrabfoodMenuItemMappingType {
  /** COMBO_MENU_ITEM */
  ComboMenuItem = 'COMBO_MENU_ITEM',
  /** MENU_ITEM */
  MenuItem = 'MENU_ITEM',
  /** MENU_ITEM_TAG */
  MenuItemTag = 'MENU_ITEM_TAG',
  /** NOT_MAPPED */
  None = 'NONE'
}

export type GrabfoodMenuItemOutput = {
  __typename?: 'GrabfoodMenuItemOutput';
  category?: Maybe<GrabfoodMenuCategoryOutput>;
  customizedName?: Maybe<Scalars['String']['output']>;
  customizedPrice?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayPrice?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  mappingType: GrabfoodMenuItemMappingType;
  modifierGroups: Array<GrabfoodModifierGroupOutput>;
  originalName?: Maybe<Scalars['String']['output']>;
  originalPrice?: Maybe<Scalars['String']['output']>;
  pictureFilename: Scalars['String']['output'];
  /** Used to sort records, starting at 0. */
  sortingIndex: Scalars['Int']['output'];
  taxAdjustedPrice?: Maybe<Scalars['String']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type GrabfoodMenuItemPayload = {
  categoryUuid: Scalars['UUID']['input'];
  customizedName?: InputMaybe<Scalars['StripString']['input']>;
  customizedPrice?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['StripString']['input']>;
  pictureFilename?: InputMaybe<Scalars['String']['input']>;
};

export type GrabfoodMenuMutation = {
  __typename?: 'GrabfoodMenuMutation';
  autoSyncMenu?: Maybe<AutoSyncMenuMutation>;
  batchDelete?: Maybe<BatchDeleteMutation>;
  createMenu?: Maybe<GrabfoodMenuOutput>;
  createMenuCategory?: Maybe<GrabfoodMenuCategoryOutput>;
  deleteMenu?: Maybe<GrabfoodMenuOutput>;
  deleteMenuCategory?: Maybe<GrabfoodMenuCategoryOutput>;
  deleteMenuItem?: Maybe<GrabfoodMenuItemOutput>;
  importMenuItemToCategory?: Maybe<Array<Maybe<GrabfoodMenuCategoryOutput>>>;
  reorderMenuCategories?: Maybe<Array<Maybe<GrabfoodMenuCategoryOutput>>>;
  setHiddenTagsAndTagGroups?: Maybe<SetGrabfoodHiddenTagsAndGroupsMutation>;
  updateMenu?: Maybe<GrabfoodMenuOutput>;
  updateMenuCategory?: Maybe<GrabfoodMenuCategoryOutput>;
  updateMenuItem?: Maybe<GrabfoodMenuItemOutput>;
  validateMenu?: Maybe<ValidateGrabfoodMenuMutation>;
  validateMenuTimePeriod?: Maybe<ValidateGrabfoodMenuTimePeriodMutation>;
  validateTagsAndTagGroups?: Maybe<ValidateGrabfoodTagsAndTagGroupsMutation>;
};


export type GrabfoodMenuMutationBatchDeleteArgs = {
  categoryUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


export type GrabfoodMenuMutationCreateMenuArgs = {
  payload: GrabfoodMenuPayload;
};


export type GrabfoodMenuMutationCreateMenuCategoryArgs = {
  payload: GrabfoodMenuCategoryPayload;
};


export type GrabfoodMenuMutationDeleteMenuArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type GrabfoodMenuMutationDeleteMenuCategoryArgs = {
  uuid: Scalars['UUID']['input'];
};


export type GrabfoodMenuMutationDeleteMenuItemArgs = {
  uuid: Scalars['UUID']['input'];
};


export type GrabfoodMenuMutationImportMenuItemToCategoryArgs = {
  ichefMenuItemUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  uuid: Scalars['UUID']['input'];
};


export type GrabfoodMenuMutationReorderMenuCategoriesArgs = {
  payload: Array<InputMaybe<GrabfoodReorderMenuCategoryPayload>>;
};


export type GrabfoodMenuMutationSetHiddenTagsAndTagGroupsArgs = {
  payload: GrabfoodHiddenTagsAndTagGroupsPayload;
};


export type GrabfoodMenuMutationUpdateMenuArgs = {
  payload: GrabfoodMenuPayload;
  uuid: Scalars['UUID']['input'];
};


export type GrabfoodMenuMutationUpdateMenuCategoryArgs = {
  payload: GrabfoodMenuCategoryPayload;
  uuid: Scalars['UUID']['input'];
};


export type GrabfoodMenuMutationUpdateMenuItemArgs = {
  payload: GrabfoodMenuItemPayload;
  uuid: Scalars['UUID']['input'];
};


export type GrabfoodMenuMutationValidateMenuTimePeriodArgs = {
  payload: GrabfoodMenuTimePeriodValidationPayload;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type GrabfoodMenuOutput = {
  __typename?: 'GrabfoodMenuOutput';
  name: Scalars['String']['output'];
  timePeriods?: Maybe<Array<Maybe<GrabfoodMenuTimePeriodOutput>>>;
  /** Used as an unique ID of the record. Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export type GrabfoodMenuPayload = {
  name: Scalars['StripString']['input'];
  timePeriods: Array<InputMaybe<GrabfoodMenuTimePeriodPayload>>;
};

export type GrabfoodMenuQuery = {
  __typename?: 'GrabfoodMenuQuery';
  categories?: Maybe<Array<Maybe<GrabfoodMenuCategoryOutput>>>;
  getUploadMenuStatus?: Maybe<UploadMenuStatusOutput>;
  hiddenTagGroupUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  hiddenTagUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  menuByWeekdays?: Maybe<Array<Maybe<GrabfoodMenuByWeekdaysOutput>>>;
  menuItem?: Maybe<GrabfoodMenuItemOutput>;
  menus?: Maybe<Array<Maybe<GrabfoodMenuOutput>>>;
};


export type GrabfoodMenuQueryCategoriesArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type GrabfoodMenuQueryMenuItemArgs = {
  uuid: Scalars['UUID']['input'];
};

export type GrabfoodMenuTimePeriodOutput = {
  __typename?: 'GrabfoodMenuTimePeriodOutput';
  endTime?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
  weekdays?: Maybe<Array<Maybe<Weekday>>>;
};

export type GrabfoodMenuTimePeriodPayload = {
  endTime: Scalars['String']['input'];
  startTime: Scalars['String']['input'];
  weekdays: Array<InputMaybe<Weekday>>;
};

export type GrabfoodMenuTimePeriodValidationPayload = {
  timePeriods: Array<InputMaybe<GrabfoodMenuTimePeriodPayload>>;
};

export enum GrabfoodModifierGroupMappingType {
  /** COMBO_ITEM_CATEGORY */
  ComboItemCategory = 'COMBO_ITEM_CATEGORY',
  /** NONE */
  None = 'NONE',
  /** TAG_GROUP */
  TagGroup = 'TAG_GROUP',
  /** VIRTUAL_TAG_GROUP */
  VirtualTagGroup = 'VIRTUAL_TAG_GROUP'
}

export type GrabfoodModifierGroupOutput = {
  __typename?: 'GrabfoodModifierGroupOutput';
  displayName?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  mappingType: GrabfoodModifierGroupMappingType;
  maximumSelection?: Maybe<Scalars['String']['output']>;
  minimumSelection?: Maybe<Scalars['String']['output']>;
  modifierOptions: Array<GrabfoodMenuItemOutput>;
  originalName?: Maybe<Scalars['String']['output']>;
  /** Used to sort records, starting at 0. */
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type GrabfoodReorderMenuCategoryPayload = {
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid: Scalars['String']['input'];
};

export type GrabfoodTagControlType = {
  __typename?: 'GrabfoodTagControlType';
  hidden: Scalars['Boolean']['output'];
  menuItemTag: MenuItemTagType;
};

export type GrabfoodTimePeriodByWeekdayOutput = {
  __typename?: 'GrabfoodTimePeriodByWeekdayOutput';
  endTime?: Maybe<Scalars['String']['output']>;
  menuName?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['String']['output']>;
};

export type GraphicProductAnnouncementObjectType = {
  __typename?: 'GraphicProductAnnouncementObjectType';
  buttonLink?: Maybe<Scalars['String']['output']>;
  buttonText?: Maybe<Scalars['String']['output']>;
  htmlContent?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['ID']['output']>;
  /** Link of the media. It will be used when user clicks the media. */
  mediaLink?: Maybe<Scalars['String']['output']>;
  /** Source of the media. */
  mediaSrc?: Maybe<Scalars['String']['output']>;
  /** Type of the media, now it only supports IMAGE. */
  mediaType?: Maybe<Scalars['String']['output']>;
  /** The time when the production announcement is published. It should be always in UTC timezone. */
  publishedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** PointEventType that graphql mutation support */
export enum GraphqlPointEventType {
  Collect = 'collect',
  Redeem = 'redeem'
}

export type GroupByBranchOutput = {
  __typename?: 'GroupByBranchOutput';
  groupByDate?: Maybe<Array<Maybe<SalesDataObject>>>;
  groupByTimeRange?: Maybe<Array<Maybe<SalesDataObject>>>;
  restaurantName?: Maybe<Scalars['String']['output']>;
  restaurantStoreId?: Maybe<Scalars['String']['output']>;
  summary?: Maybe<SummaryOutput>;
};

export type GroupByDateOutput = {
  __typename?: 'GroupByDateOutput';
  avgOrderPrice?: Maybe<Scalars['String']['output']>;
  groupByBranch?: Maybe<Array<Maybe<BasicGroupByBranchOutput>>>;
  summaryAmount?: Maybe<Scalars['String']['output']>;
  summaryAmountDeltaRatio?: Maybe<Scalars['String']['output']>;
  summaryAmountPercentage?: Maybe<Scalars['String']['output']>;
  summaryInvoiceCount?: Maybe<Scalars['Int']['output']>;
};

export type GroupByTimeRangeOutput = {
  __typename?: 'GroupByTimeRangeOutput';
  compares?: Maybe<Array<Maybe<CompareSalesDataObject>>>;
  thisPeriod?: Maybe<Array<Maybe<SalesDataObject>>>;
};

/**
 *
 *     When adding new modules, need to add new mapping in KEY_MODULE_MAPPING_WITH_ICHEFPOS.
 *
 */
export enum HqBranchModules {
  Core = 'CORE',
  Member = 'MEMBER'
}

export type HqBranchModulesUnionType = CoreModuleOutput | MemberModuleOutput;

export type HqBranchOutput = {
  __typename?: 'HQBranchOutput';
  associatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  branchLoginId?: Maybe<Scalars['String']['output']>;
  contract: Scalars['String']['output'];
  contractUrl?: Maybe<Scalars['String']['output']>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  type?: Maybe<HqBranchModules>;
  uuid: Scalars['String']['output'];
};

export type HqBranchesReachVersionFlagOutput = {
  __typename?: 'HQBranchesReachVersionFlagOutput';
  allowProjectComboItemMultiOption?: Maybe<Scalars['Boolean']['output']>;
};

export type HqDetailOutput = {
  __typename?: 'HQDetailOutput';
  hqName?: Maybe<Scalars['String']['output']>;
  hqStoreId?: Maybe<Scalars['String']['output']>;
  modules?: Maybe<Array<Maybe<HqBranchModulesUnionType>>>;
};

export type HqInfo = {
  __typename?: 'HQInfo';
  branchReplyInvitationResults?: Maybe<BranchReplyInvitationResultOutput>;
  branches?: Maybe<Array<Maybe<BranchOutput>>>;
  branchesWithInviting?: Maybe<Array<Maybe<BranchWithInvitingOutput>>>;
  disassociatedModulesNotification?: Maybe<DisassociatedModulesNotificationOutput>;
  hqDetail?: Maybe<HqDetailOutput>;
  hqInvitation?: Maybe<HqInvitationOutput>;
  hqModules?: Maybe<Array<Maybe<HqModuleOutput>>>;
  hqPlan?: Maybe<HqPlanOutput>;
  hqSettings?: Maybe<HqSettingsOutput>;
  hqUuid?: Maybe<Scalars['String']['output']>;
  inviteBranchCheck?: Maybe<HqInviteBranchCheckUnionType>;
  latestSyncMenuTask?: Maybe<SyncMenuTaskObject>;
  menuSyncedNotification?: Maybe<MenuSyncedNotificationOutput>;
  storeType?: Maybe<StoreType>;
  syncMenuEvent?: Maybe<SyncMenuEventObject>;
};


export type HqInfoBranchReplyInvitationResultsArgs = {
  lastReceivedAt?: InputMaybe<Scalars['UTCDateTime']['input']>;
};


export type HqInfoBranchesArgs = {
  includingDisassociated?: InputMaybe<Scalars['Boolean']['input']>;
  module?: InputMaybe<HqBranchModules>;
};


export type HqInfoBranchesWithInvitingArgs = {
  module?: InputMaybe<HqBranchModules>;
};


export type HqInfoDisassociatedModulesNotificationArgs = {
  lastReceivedAt?: InputMaybe<Scalars['UTCDateTime']['input']>;
};


export type HqInfoInviteBranchCheckArgs = {
  loginId: Scalars['String']['input'];
  storeId: Scalars['String']['input'];
};


export type HqInfoMenuSyncedNotificationArgs = {
  lastReceivedAt?: InputMaybe<Scalars['UTCDateTime']['input']>;
};


export type HqInfoSyncMenuEventArgs = {
  syncMenuEventUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type HqInformationUpdateInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  contactNumber: Scalars['String']['input'];
  contactPerson?: InputMaybe<Scalars['String']['input']>;
  email: Scalars['String']['input'];
  name: Scalars['String']['input'];
  uniTaxId?: InputMaybe<Scalars['String']['input']>;
  uniTaxName?: InputMaybe<Scalars['String']['input']>;
};

export type HqInvitationOutput = {
  __typename?: 'HQInvitationOutput';
  hqName?: Maybe<Scalars['String']['output']>;
  hqStoreId?: Maybe<Scalars['String']['output']>;
  isPlan?: Maybe<Scalars['Boolean']['output']>;
  modules?: Maybe<Array<Maybe<InvitingHqBranchOutput>>>;
};

export type HqMenuItemReportQuery = {
  __typename?: 'HQMenuItemReportQuery';
  categories?: Maybe<Array<Maybe<HqMenuCategorySalesOutput>>>;
  categoryDetail?: Maybe<CategoryDetailReportOutput>;
  comboDetail?: Maybe<ComboDetailReportOutput>;
  combos?: Maybe<Array<Maybe<HqMenuComboItemSalesOutput>>>;
  itemDetail?: Maybe<ItemDetailReportOutput>;
  items?: Maybe<Array<Maybe<HqMenuItemSalesOutput>>>;
};


export type HqMenuItemReportQueryCategoriesArgs = {
  payload?: InputMaybe<MenuCategoriesReportPayload>;
};


export type HqMenuItemReportQueryCategoryDetailArgs = {
  payload?: InputMaybe<CategoryDetailReportQueryPayload>;
};


export type HqMenuItemReportQueryComboDetailArgs = {
  payload?: InputMaybe<ComboReportQueryPayload>;
};


export type HqMenuItemReportQueryCombosArgs = {
  payload?: InputMaybe<MenuComboItemsReportPayload>;
};


export type HqMenuItemReportQueryItemDetailArgs = {
  payload?: InputMaybe<ItemDetailReportQueryPayload>;
};


export type HqMenuItemReportQueryItemsArgs = {
  payload?: InputMaybe<MenuItemsReportPayload>;
};

export type HqModuleOutput = {
  __typename?: 'HQModuleOutput';
  totalQuota?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<AllHqBranchModules>;
  usedQuota?: Maybe<Scalars['Int']['output']>;
};

export type HqPlanOutput = {
  __typename?: 'HQPlanOutput';
  name?: Maybe<Scalars['String']['output']>;
  totalQuota?: Maybe<Scalars['Int']['output']>;
  usedQuota?: Maybe<Scalars['Int']['output']>;
};

export type HqReportQuery = {
  __typename?: 'HQReportQuery';
  basicSalesReport?: Maybe<HqBasicSalesReportOutput>;
  dashboard?: Maybe<HqReportDashboardOutput>;
  menuItemReport?: Maybe<HqMenuItemReportQuery>;
};


export type HqReportQueryBasicSalesReportArgs = {
  payload?: InputMaybe<ReportQueryPayload>;
};

export type HqSettingsOutput = {
  __typename?: 'HQSettingsOutput';
  reportPeriodDailyStartTime?: Maybe<Scalars['Time']['output']>;
};

export type HqSettingsPayload = {
  reportPeriodDailyStartTime?: InputMaybe<Scalars['Time']['input']>;
};

export type HeadQuarterType = {
  __typename?: 'HeadQuarterType';
  brandName: Scalars['String']['output'];
  memberLandingPageImagePath: Scalars['String']['output'];
  urlDomain?: Maybe<Scalars['String']['output']>;
  uuid: Scalars['String']['output'];
};

export type Headquarter = {
  __typename?: 'Headquarter';
  /** uuid under restaurant sharing */
  restaurantUnderMemberSharing?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
};

export type HeadquarterHqUnionType = HeadQuarterType | HqType;

export type HourRangeFilterType = {
  /** 0-24 */
  end?: InputMaybe<Scalars['Int']['input']>;
  /** 0-23 */
  start?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type HoursPeriodsCheckFieldsError = {
  __typename?: 'HoursPeriodsCheckFieldsError';
  end?: Maybe<SpecialReservationDayTimeFieldsErrorUnionType>;
  start?: Maybe<SpecialReservationDayTimeFieldsErrorUnionType>;
};

export type HqBasicSalesReportOutput = {
  __typename?: 'HqBasicSalesReportOutput';
  groupByBranch?: Maybe<Array<Maybe<GroupByBranchOutput>>>;
  groupByDate?: Maybe<Array<Maybe<GroupByDateOutput>>>;
  groupByTimeRange?: Maybe<GroupByTimeRangeOutput>;
  payload?: Maybe<BasicSalesPayloadOutput>;
  summary?: Maybe<SummaryOutput>;
};

export type HqCreateContractsWithBranchUnionType = BranchAlreadyUnderMemberSharingError | CreateContractsWithBranchOkOutput | HqInviteBranchCheckFieldsError | HqInviteBranchUsingUbereatsV1Error | HqInviteBranchWithInvalidQuotaError | UnhandledError;

export type HqDisassociateBranchOutputUnionType = BranchMemberMergeFailError | BranchMemberMergeStillRunningError | OkOutput | UnhandledError;

export type HqInformationType = {
  __typename?: 'HqInformationType';
  address: Scalars['String']['output'];
  contactNumber: Scalars['String']['output'];
  contactPerson: Scalars['String']['output'];
  createdAt?: Maybe<Scalars['UTCDateTime']['output']>;
  email: Scalars['String']['output'];
  name: Scalars['String']['output'];
  uniTaxId: Scalars['String']['output'];
  uniTaxName: Scalars['String']['output'];
  updatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type HqInformationTypeOnBranchSide = {
  __typename?: 'HqInformationTypeOnBranchSide';
  name: Scalars['String']['output'];
};

export type HqInviteBranchCheckFieldsError = {
  __typename?: 'HqInviteBranchCheckFieldsError';
  branch?: Maybe<BranchFieldError>;
  modules?: Maybe<Array<Maybe<ModulesFieldErrorUnionType>>>;
};

export type HqInviteBranchCheckLoginIdFieldsErrorUnionType = LoginIdNotExistsError;

export type HqInviteBranchCheckOkOutput = {
  __typename?: 'HqInviteBranchCheckOkOutput';
  isUsingUbereatsV1?: Maybe<Scalars['Boolean']['output']>;
  message?: Maybe<Scalars['String']['output']>;
};

export type HqInviteBranchCheckStoreIdFieldsErrorUnionType = StoreIdAlreadyInvitedByAnotherHqError | StoreIdAlreadyInvitedError | StoreIdIsHqAccountError | StoreIdNotExistsError | StoreIdRegionNotMatchError;

export type HqInviteBranchCheckUnionType = HqInviteBranchCheckFieldsError | HqInviteBranchCheckOkOutput | UnhandledError;

export type HqInviteBranchUsingUbereatsV1Error = {
  __typename?: 'HqInviteBranchUsingUbereatsV1Error';
  message?: Maybe<Scalars['String']['output']>;
};

export type HqInviteBranchWithInvalidQuotaError = {
  __typename?: 'HqInviteBranchWithInvalidQuotaError';
  message?: Maybe<Scalars['String']['output']>;
};

export type HqIsOfflineError = {
  __typename?: 'HqIsOfflineError';
  message?: Maybe<Scalars['String']['output']>;
};

export type HqMenuCategorySalesOutput = {
  __typename?: 'HqMenuCategorySalesOutput';
  averageSellingPrice?: Maybe<Scalars['Decimal']['output']>;
  categoryName?: Maybe<Scalars['String']['output']>;
  isDeleted?: Maybe<Scalars['Boolean']['output']>;
  restaurant?: Maybe<SourceRestaurantOutput>;
  salesAmount?: Maybe<Scalars['Decimal']['output']>;
  salesAmountPercentage?: Maybe<Scalars['Decimal']['output']>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  salesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type HqMenuComboItemSalesOutput = {
  __typename?: 'HqMenuComboItemSalesOutput';
  averageSellingPrice?: Maybe<Scalars['Decimal']['output']>;
  categoryName?: Maybe<Scalars['String']['output']>;
  isDeleted?: Maybe<Scalars['Boolean']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  restaurant?: Maybe<SourceRestaurantOutput>;
  salesAmount?: Maybe<Scalars['Decimal']['output']>;
  salesAmountPercentage?: Maybe<Scalars['Decimal']['output']>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  salesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type HqMenuItemSalesOutput = {
  __typename?: 'HqMenuItemSalesOutput';
  averageSellingPrice?: Maybe<Scalars['Decimal']['output']>;
  categoryName?: Maybe<Scalars['String']['output']>;
  isDeleted?: Maybe<Scalars['Boolean']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  restaurant?: Maybe<SourceRestaurantOutput>;
  salesAmount?: Maybe<Scalars['Decimal']['output']>;
  salesAmountPercentage?: Maybe<Scalars['Decimal']['output']>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  salesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
  /** Sales count of this item sold as item and as item included in combo */
  totalSalesCount?: Maybe<Scalars['Int']['output']>;
  totalSalesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type HqMutation = {
  __typename?: 'HqMutation';
  acceptInvitation?: Maybe<AcceptHqInvitationUnionType>;
  cancelInviteModuleBranch?: Maybe<CancelInviteBranchOutput>;
  cancelSyncMenuEvent?: Maybe<CancelSyncMenuEventOutput>;
  cancelSyncMenuTask?: Maybe<CancelSyncMenuTaskOutput>;
  createContractWithBranch?: Maybe<HqCreateContractsWithBranchUnionType>;
  disassociateBranch?: Maybe<HqDisassociateBranchOutputUnionType>;
  disassociateModuleBranch?: Maybe<HqDisassociateBranchOutputUnionType>;
  hqSettings?: Maybe<HqSettingsOutput>;
  inviteBranch?: Maybe<InviteBranchOutput>;
  syncMenu?: Maybe<SyncMenuOutput>;
};


export type HqMutationAcceptInvitationArgs = {
  moduleUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};


export type HqMutationCancelInviteModuleBranchArgs = {
  moduleUuid: Scalars['UUID']['input'];
};


export type HqMutationCancelSyncMenuEventArgs = {
  syncMenuEventUuid: Scalars['UUID']['input'];
};


export type HqMutationCancelSyncMenuTaskArgs = {
  syncMenuTaskUuid: Scalars['UUID']['input'];
};


export type HqMutationCreateContractWithBranchArgs = {
  payload: CreateContractWithBranchPayload;
};


export type HqMutationDisassociateBranchArgs = {
  branchUuid: Scalars['UUID']['input'];
};


export type HqMutationDisassociateModuleBranchArgs = {
  moduleUuid: Scalars['UUID']['input'];
};


export type HqMutationHqSettingsArgs = {
  payload: HqSettingsPayload;
};


export type HqMutationInviteBranchArgs = {
  payload: InviteBranchPayload;
};


export type HqMutationSyncMenuArgs = {
  restaurantUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};

export type HqNoteEdit = {
  __typename?: 'HqNoteEdit';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type HqReportDashboardOutput = {
  __typename?: 'HqReportDashboardOutput';
  avgOrderPrice?: Maybe<Scalars['Decimal']['output']>;
  avgOrderPriceDelta?: Maybe<Scalars['Decimal']['output']>;
  avgOrderPriceDeltaRatio?: Maybe<Scalars['String']['output']>;
  bestComboTypeMenuItems?: Maybe<Array<Maybe<HqMenuItemSalesOutput>>>;
  bestItemTypeMenuItems?: Maybe<Array<Maybe<HqMenuItemSalesOutput>>>;
  branchBusinessSummary?: Maybe<Array<Maybe<BranchBusinessSummaryOutput>>>;
  deliveryPercentage?: Maybe<Scalars['String']['output']>;
  deliverySummaryAmount?: Maybe<Scalars['Decimal']['output']>;
  dineinPercentage?: Maybe<Scalars['String']['output']>;
  dineinSummaryAmount?: Maybe<Scalars['Decimal']['output']>;
  endAt?: Maybe<Scalars['DateTime']['output']>;
  invoiceCountForEveryTwoHours?: Maybe<Array<Maybe<InvoiceCountByRangeOutput>>>;
  startAt?: Maybe<Scalars['DateTime']['output']>;
  summaryAmount?: Maybe<Scalars['Decimal']['output']>;
  summaryAmountDelta?: Maybe<Scalars['Decimal']['output']>;
  summaryAmountDeltaRatio?: Maybe<Scalars['String']['output']>;
  summaryInvoiceCount?: Maybe<Scalars['Int']['output']>;
  summaryInvoiceCountDelta?: Maybe<Scalars['Int']['output']>;
  summaryInvoiceCountDeltaRatio?: Maybe<Scalars['String']['output']>;
  takeoutPercentage?: Maybe<Scalars['String']['output']>;
  takeoutSummaryAmount?: Maybe<Scalars['Decimal']['output']>;
};

export type HqType = {
  __typename?: 'HqType';
  brandName: Scalars['String']['output'];
  memberLandingPageImagePath: Scalars['String']['output'];
  urlDomain?: Maybe<Scalars['String']['output']>;
  uuid: Scalars['String']['output'];
};

export enum IchefCancelledOrderCancelledBy {
  /** CUSTOMER */
  Customer = 'CUSTOMER',
  /** POS */
  Pos = 'POS',
  /** POS_AFTER_ACCEPTED */
  PosAfterAccepted = 'POS_AFTER_ACCEPTED',
  /** SYSTEM_DENIED */
  SystemDenied = 'SYSTEM_DENIED',
  /** VENDOR */
  Vendor = 'VENDOR'
}

export type IchefCancelledOrderType = {
  __typename?: 'ICHEFCancelledOrderType';
  cancelledBy: IchefCancelledOrderCancelledBy;
  detail?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  reasonKey?: Maybe<ReasonKeyEnum>;
};

export enum IchefMappingTypes {
  ComboMenuItem = 'COMBO_MENU_ITEM',
  MenuItem = 'MENU_ITEM',
  MenuItemTag = 'MENU_ITEM_TAG',
  NotMapped = 'NOT_MAPPED'
}

export enum IchefMenuItemTypes {
  Combo = 'COMBO',
  Item = 'ITEM'
}

export enum IchefModifierGroupMappingTypes {
  ComboItemCategory = 'COMBO_ITEM_CATEGORY',
  None = 'NONE',
  TagGroup = 'TAG_GROUP',
  VirtualTagGroup = 'VIRTUAL_TAG_GROUP'
}

export type IchefOnlineOrderComboItemCategoryType = {
  __typename?: 'ICHEFOnlineOrderComboItemCategoryType';
  comboItems: Array<IchefOnlineOrderComboItemType>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  ichefComboItemCategoryUuid?: Maybe<Scalars['UUID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
};

export type IchefOnlineOrderComboItemType = {
  __typename?: 'ICHEFOnlineOrderComboItemType';
  comment?: Maybe<Scalars['String']['output']>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  ichefComboMenuItemUuid?: Maybe<Scalars['UUID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  quantity: Scalars['Int']['output'];
  tags: Array<IchefOnlineOrderItemTagType>;
  unitAmount?: Maybe<Scalars['String']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
};

export enum IchefOnlineOrderCouponEventCouponType {
  /** COLLECT_COUPON */
  CollectCoupon = 'COLLECT_COUPON',
  /** REDEEM_COUPON */
  RedeemCoupon = 'REDEEM_COUPON'
}

export type IchefOnlineOrderCouponEventType = {
  __typename?: 'ICHEFOnlineOrderCouponEventType';
  count: Scalars['Int']['output'];
  couponType: IchefOnlineOrderCouponEventCouponType;
  couponUuid: Scalars['UUID']['output'];
  uuid: Scalars['UUID']['output'];
};

export enum IchefOnlineOrderDiscountEventDiscountType {
  /** INVOICE_MINUS */
  InvoiceMinus = 'INVOICE_MINUS',
  /** INVOICE_MULTIPLY */
  InvoiceMultiply = 'INVOICE_MULTIPLY',
  /** ITEM_MINUS */
  ItemMinus = 'ITEM_MINUS',
  /** ITEM_MULTIPLY */
  ItemMultiply = 'ITEM_MULTIPLY',
  /** MANUAL */
  Manual = 'MANUAL'
}

export type IchefOnlineOrderDiscountEventType = {
  __typename?: 'ICHEFOnlineOrderDiscountEventType';
  actualDiscountAmount?: Maybe<Scalars['String']['output']>;
  discountAmount?: Maybe<Scalars['String']['output']>;
  discountModuleUuid: Scalars['UUID']['output'];
  discountType: IchefOnlineOrderDiscountEventDiscountType;
  discountValue: Scalars['Float']['output'];
  uuid: Scalars['UUID']['output'];
};

export type IchefOnlineOrderEaterType = {
  __typename?: 'ICHEFOnlineOrderEaterType';
  allowPrivacyPolicy: Scalars['Boolean']['output'];
  corporateTaxIdTaiwan: Scalars['String']['output'];
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  customerNumber?: Maybe<Scalars['Int']['output']>;
  deliveryAddress?: Maybe<Scalars['String']['output']>;
  deliveryDistanceKilometers?: Maybe<Scalars['String']['output']>;
  deliveryFloor?: Maybe<Scalars['String']['output']>;
  deviceCode?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  firstName?: Maybe<Scalars['String']['output']>;
  fullName?: Maybe<Scalars['String']['output']>;
  lastName?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  tableName?: Maybe<Scalars['String']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
};

export type IchefOnlineOrderItemCategoryType = {
  __typename?: 'ICHEFOnlineOrderItemCategoryType';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  ichefMenuItemCategoryUuid?: Maybe<Scalars['UUID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  orderItems: Array<IchefOnlineOrderItemType>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
};

export enum IchefOnlineOrderItemOrderItemType {
  /** COMBO */
  Combo = 'COMBO',
  /** ITEM */
  Item = 'ITEM'
}

export type IchefOnlineOrderItemTagType = {
  __typename?: 'ICHEFOnlineOrderItemTagType';
  amount?: Maybe<Scalars['String']['output']>;
  comboItem?: Maybe<IchefOnlineOrderComboItemType>;
  content: Scalars['String']['output'];
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  ichefMenuItemTagUuid?: Maybe<Scalars['UUID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  quantity: Scalars['Int']['output'];
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
};

export type IchefOnlineOrderItemType = {
  __typename?: 'ICHEFOnlineOrderItemType';
  comboItemCategories: Array<IchefOnlineOrderComboItemCategoryType>;
  comment?: Maybe<Scalars['String']['output']>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  discountAmount?: Maybe<Scalars['String']['output']>;
  discountAmountByModule?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  discountModuleUuids?: Maybe<Array<Scalars['UUID']['output']>>;
  ichefMenuItemUuid?: Maybe<Scalars['UUID']['output']>;
  item?: Maybe<IchefOnlineOrderItemType>;
  menuItem: Array<IchefOnlineOrderItemType>;
  name?: Maybe<Scalars['String']['output']>;
  orderItemType?: Maybe<IchefOnlineOrderItemOrderItemType>;
  oriDiscountAmountByModule?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  quantity: Scalars['Int']['output'];
  sourceItem?: Maybe<SourceItemType>;
  tags: Array<IchefOnlineOrderItemTagType>;
  totalAmount?: Maybe<Scalars['String']['output']>;
  unitAmount?: Maybe<Scalars['String']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
};

export enum IchefOnlineOrderOrderType {
  /** DELIVERY_BY_RESTAURANT */
  DeliveryByRestaurant = 'DELIVERY_BY_RESTAURANT',
  /** DELIVERY_BY_VENDOR */
  DeliveryByVendor = 'DELIVERY_BY_VENDOR',
  /** DINE_IN */
  DineIn = 'DINE_IN',
  /** PICK_UP */
  PickUp = 'PICK_UP'
}

export enum IchefOnlineOrderPaymentMethod {
  /** CASH_ON_DELIVERY */
  CashOnDelivery = 'CASH_ON_DELIVERY',
  /** CASH_ON_RESTAURANT */
  CashOnRestaurant = 'CASH_ON_RESTAURANT',
  /** ONLINE */
  Online = 'ONLINE'
}

export enum IchefOnlineOrderPaymentStatus {
  /** CANCELLED */
  Cancelled = 'CANCELLED',
  /** DENIED */
  Denied = 'DENIED',
  /** PAID */
  Paid = 'PAID',
  /** PENDING */
  Pending = 'PENDING',
  /** REFUND */
  Refund = 'REFUND'
}

export type IchefOnlineOrderPaymentType = {
  __typename?: 'ICHEFOnlineOrderPaymentType';
  amount?: Maybe<Scalars['String']['output']>;
  deliveryFeeAmount?: Maybe<Scalars['String']['output']>;
  deliveryFeeDiscountAmount?: Maybe<Scalars['String']['output']>;
  deliveryFeeRuleUuid?: Maybe<Scalars['UUID']['output']>;
  discountAmount?: Maybe<Scalars['String']['output']>;
  method: IchefOnlineOrderPaymentMethod;
  moduleName: Scalars['String']['output'];
  moduleType?: Maybe<Scalars['String']['output']>;
  moduleUuid: Scalars['UUID']['output'];
  serviceCharge?: Maybe<Scalars['String']['output']>;
  status: IchefOnlineOrderPaymentStatus;
  taxAmount?: Maybe<Scalars['String']['output']>;
  taxType: Scalars['String']['output'];
  transactionData?: Maybe<Scalars['Dictionary']['output']>;
  vendorPaymentMethod?: Maybe<PaymentOptionEnum>;
};

export enum IchefOnlineOrderPlatformType {
  /** FOODPANDA */
  Foodpanda = 'FOODPANDA',
  /** GRABFOOD */
  Grabfood = 'GRABFOOD',
  /** ICHEF */
  Ichef = 'ICHEF',
  /** ICHEF_INSTORE */
  IchefInstore = 'ICHEF_INSTORE',
  /** POS */
  Pos = 'POS',
  /** PREORDER */
  Preorder = 'PREORDER',
  /** UBEREATS */
  Ubereats = 'UBEREATS'
}

export enum IchefOnlineOrderPointEventCheckoutModuleType {
  /** AUTO_COLLECT_POINTS */
  AutoCollectPoints = 'AUTO_COLLECT_POINTS',
  /** AUTO_REDEEM_POINTS */
  AutoRedeemPoints = 'AUTO_REDEEM_POINTS',
  /** BASE_CHECKOUT */
  BaseCheckModule = 'BASE_CHECK_MODULE',
  /** MANUAL_COLLECT_POINTS */
  ManualCollectPoints = 'MANUAL_COLLECT_POINTS',
  /** MANUAL_REDEEM_POINTS */
  ManualRedeemPoints = 'MANUAL_REDEEM_POINTS'
}

export type IchefOnlineOrderPointEventType = {
  __typename?: 'ICHEFOnlineOrderPointEventType';
  actualDiscountAmount?: Maybe<Scalars['String']['output']>;
  applyTimes: Scalars['Int']['output'];
  checkoutModuleType: IchefOnlineOrderPointEventCheckoutModuleType;
  checkoutModuleUuid: Scalars['UUID']['output'];
  discountAmount?: Maybe<Scalars['String']['output']>;
  pointAdded: Scalars['Int']['output'];
  pointDeducted: Scalars['Int']['output'];
  uuid: Scalars['UUID']['output'];
};

export type IchefOnlineOrderType = {
  __typename?: 'ICHEFOnlineOrderType';
  cancelledOrder?: Maybe<IchefCancelledOrderType>;
  cgNumber?: Maybe<Scalars['Int']['output']>;
  comment?: Maybe<Scalars['String']['output']>;
  confirmDeniedAt?: Maybe<Scalars['Float']['output']>;
  couponEvents: Array<IchefOnlineOrderCouponEventType>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  discountEvents: Array<IchefOnlineOrderDiscountEventType>;
  eater?: Maybe<IchefOnlineOrderEaterType>;
  expectedDeliveryAt?: Maybe<Scalars['Float']['output']>;
  expectedPickupAt?: Maybe<Scalars['Float']['output']>;
  externalRefId: Scalars['String']['output'];
  instoreOrderingSession?: Maybe<InstoreOrderingSessionOutput>;
  invoiceUuid?: Maybe<Scalars['UUID']['output']>;
  ipadAcceptedAt?: Maybe<Scalars['Float']['output']>;
  ipadCancelledAt?: Maybe<Scalars['Float']['output']>;
  ipadDeniedAt?: Maybe<Scalars['Float']['output']>;
  ipadFinishedAt?: Maybe<Scalars['Float']['output']>;
  isContainerChargeMapped: Scalars['Boolean']['output'];
  isMenuFullyMapped: Scalars['Boolean']['output'];
  isReservationOrder: Scalars['Boolean']['output'];
  isUsingEReceipt: Scalars['Boolean']['output'];
  lastModifiedAt?: Maybe<Scalars['Float']['output']>;
  orderIdentityDisplay: Scalars['String']['output'];
  orderItemCategories: Array<IchefOnlineOrderItemCategoryType>;
  orderMembership?: Maybe<OrderMembershipOutput>;
  orderStatus: Status;
  orderType: IchefOnlineOrderOrderType;
  orderedAt?: Maybe<Scalars['Float']['output']>;
  /** 餐點價格 */
  oriTotalAmount?: Maybe<Scalars['String']['output']>;
  payment?: Maybe<IchefOnlineOrderPaymentType>;
  platformType: IchefOnlineOrderPlatformType;
  pointEvents: Array<IchefOnlineOrderPointEventType>;
  restaurantUuid: Scalars['UUID']['output'];
  shouldIncludeDisposableItems: Scalars['Boolean']['output'];
  updatedAt?: Maybe<Scalars['Float']['output']>;
  uuid: Scalars['UUID']['output'];
  viceOrderIdentity?: Maybe<Scalars['String']['output']>;
};

export enum IpadOrderDisplayEnum {
  DisplayAllOrders = 'DISPLAY_ALL_ORDERS',
  DisplayNoOrders = 'DISPLAY_NO_ORDERS',
  HideTodayOrders = 'HIDE_TODAY_ORDERS'
}

export type IpfNoModuleError = {
  __typename?: 'IPFNoModuleError';
  message?: Maybe<Scalars['String']['output']>;
};

export type IpfOverQuotaLimitError = {
  __typename?: 'IPFOverQuotaLimitError';
  message?: Maybe<Scalars['String']['output']>;
};

export type ImportMenuItemToCategoryMutation = {
  __typename?: 'ImportMenuItemToCategoryMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type InstoreInformationNotExistsError = {
  __typename?: 'InstoreInformationNotExistsError';
  message?: Maybe<Scalars['String']['output']>;
};

export type InstoreInformationObjectType = {
  __typename?: 'InstoreInformationObjectType';
  address?: Maybe<Scalars['String']['output']>;
  checkoutAnnouncement?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  deviceCodeEnabled?: Maybe<Scalars['Boolean']['output']>;
  /** 免洗餐具選項，僅有在雲餐外帶外送中使用 */
  disposableTablewareVisibility?: Maybe<DisposableTablewareVisibility>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  isAutoAcceptOrder?: Maybe<Scalars['Boolean']['output']>;
  isAutoPrintSessionQrCode?: Maybe<Scalars['Boolean']['output']>;
  isDeliveryInstantOrderAvailable?: Maybe<Scalars['Boolean']['output']>;
  isTakeoutInstantOrderAvailable?: Maybe<Scalars['Boolean']['output']>;
  /** 餐點備註。 在單店的「文字註記」被停用時，此欄位會顯示 HIDDEN_AND_DISABLED （總店的「文字註記」設定不影響此欄位） */
  itemCommentVisibility?: Maybe<ItemCommentVisibilityQueryEnum>;
  mealTimeLimits: Array<Maybe<InstoreMealTimeLimitObjectType>>;
  mealTimeLimitsEnabled: Scalars['Boolean']['output'];
  menuItemSnapshotCount?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  newebApplyingStatus?: Maybe<NewebApplyStatusEnum>;
  onlineRestaurantUrl?: Maybe<Scalars['String']['output']>;
  operationType?: Maybe<OperationTypeEnum>;
  orderCommentDescription?: Maybe<Scalars['String']['output']>;
  /** 訂單備註 */
  orderCommentVisibility?: Maybe<OrderCommentVisibility>;
  paymentTiming?: Maybe<PaymentTimingEnum>;
  phone?: Maybe<Scalars['String']['output']>;
  pictureS3Paths?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  publicId?: Maybe<Scalars['String']['output']>;
  restaurantAnnouncement?: Maybe<Scalars['String']['output']>;
  restaurantAnnouncementDefaultExpanded?: Maybe<Scalars['Boolean']['output']>;
  showPublicWebsite?: Maybe<Scalars['Boolean']['output']>;
  taiwanCorporateTaxIdEnabled?: Maybe<Scalars['Boolean']['output']>;
};

export type InstoreInformationUnionType = InstoreInformationObjectType | PrintRuleDoseNotExistError | UnhandledError;

export type InstoreMealTimeLimitInputObject = {
  minutes: Scalars['Int']['input'];
  orderingDeadlineOffsetMinutes: Scalars['Int']['input'];
  weekdays: Array<InputMaybe<Weekday>>;
};

export type InstoreMealTimeLimitObjectType = {
  __typename?: 'InstoreMealTimeLimitObjectType';
  minutes: Scalars['Int']['output'];
  orderingDeadlineOffsetMinutes: Scalars['Int']['output'];
  weekdays: Array<Maybe<Weekday>>;
};

export type InstoreMutation = {
  __typename?: 'InstoreMutation';
  createInstoreInformation?: Maybe<InstoreInformationObjectType>;
  updateInstoreInformation?: Maybe<InstoreInformationObjectType>;
  updateInstoreInformationV2?: Maybe<InstoreInformationUnionType>;
  updateInstoreQrCodeMaterial?: Maybe<InstoreQrCodeMaterialObjectType>;
};


export type InstoreMutationCreateInstoreInformationArgs = {
  payload?: InputMaybe<CreateInstoreInformationInputObject>;
};


export type InstoreMutationUpdateInstoreInformationArgs = {
  payload?: InputMaybe<UpdateInstoreInformationInputObject>;
};


export type InstoreMutationUpdateInstoreInformationV2Args = {
  payload?: InputMaybe<UpdateInstoreInformationInputObject>;
};


export type InstoreMutationUpdateInstoreQrCodeMaterialArgs = {
  payload?: InputMaybe<UpdateInstoreQrCodeMaterialInputObject>;
};

export enum InstoreOrderingMenuItemMappingType {
  /** COMBO_MENU_ITEM */
  ComboMenuItem = 'COMBO_MENU_ITEM',
  /** MENU_ITEM */
  MenuItem = 'MENU_ITEM',
  /** MENU_ITEM_TAG */
  MenuItemTag = 'MENU_ITEM_TAG',
  /** NOT_MAPPED */
  None = 'NONE'
}

export enum InstoreOrderingMenuItemSnapshotMappingType {
  /** COMBO_MENU_ITEM */
  ComboMenuItem = 'COMBO_MENU_ITEM',
  /** MENU_ITEM */
  MenuItem = 'MENU_ITEM',
  /** MENU_ITEM_TAG */
  MenuItemTag = 'MENU_ITEM_TAG',
  /** NOT_MAPPED */
  None = 'NONE'
}

export enum InstoreOrderingModifierGroupSnapshotMappingType {
  /** COMBO_ITEM_CATEGORY */
  ComboItemCategory = 'COMBO_ITEM_CATEGORY',
  /** NONE */
  None = 'NONE',
  /** TAG_GROUP */
  TagGroup = 'TAG_GROUP',
  /** VIRTUAL_TAG_GROUP */
  VirtualTagGroup = 'VIRTUAL_TAG_GROUP'
}

export type InstoreOrderingSessionOutput = {
  __typename?: 'InstoreOrderingSessionOutput';
  /** For iOS only, iOS will compare amount when receiving payment to see if the amount is correct */
  acceptedOrdersValidatedData?: Maybe<AcceptedOrdersValidatedDataOutput>;
  cart?: Maybe<OnlineOrderCartOutput>;
  cgNumber?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['UTCDateTime']['output']>;
  entryCode?: Maybe<Scalars['String']['output']>;
  expiredAt?: Maybe<Scalars['UTCDateTime']['output']>;
  finishedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  groupOrder?: Maybe<SessionGroupOrderOutput>;
  mealTimeDiningStartAt: Scalars['DateTime']['output'];
  mealTimeLastDiningAt?: Maybe<Scalars['DateTime']['output']>;
  mealTimeLastOrderingAt?: Maybe<Scalars['DateTime']['output']>;
  onSitePaymentCompleted?: Maybe<Scalars['Boolean']['output']>;
  onSitePaymentRequired?: Maybe<Scalars['Boolean']['output']>;
  onlinePaymentAdmitted?: Maybe<Scalars['Boolean']['output']>;
  onlinePaymentRefundReason?: Maybe<OnlinePaymentRefundReason>;
  /** Only show orders created within 1 year */
  onlineStoreOrders?: Maybe<Array<Maybe<SessionOnlineStoreOrderOutput>>>;
  /** Deprecated schema, not used by iPad anymore */
  orders?: Maybe<Array<Maybe<SessionIchefOnlineOrderOutput>>>;
  /** Only show orders created within 1 year */
  ordersAggregatedAmountSummary?: Maybe<AmountSummaryOutput>;
  /** 帳單明細畫面，用來顯示已付款的訂單，會包含 group order 與 order */
  paidOrders?: Maybe<Array<Maybe<PaidOrderUnionType>>>;
  payment?: Maybe<OnlineRestaurantGroupOrderPaymentType>;
  paymentTiming?: Maybe<PaymentTimingEnum>;
  /** Frontend: session 的交易完成狀態頁中會需要它來判斷 pay session 時是否有填統編跟載具 */
  sendPayload?: Maybe<Scalars['Dictionary']['output']>;
  shortUrl?: Maybe<Scalars['String']['output']>;
  status?: Maybe<InstoreOrderingSessionStatus>;
  tableName?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};


export type InstoreOrderingSessionOutputOnlineStoreOrdersArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  orderStatus?: InputMaybe<Array<InputMaybe<State>>>;
};


export type InstoreOrderingSessionOutputOrdersArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Array<InputMaybe<Status>>>;
};


export type InstoreOrderingSessionOutputOrdersAggregatedAmountSummaryArgs = {
  orderStatus?: InputMaybe<Array<InputMaybe<State>>>;
};

/**
 *
 *     Main flow is in ICHEFOnlineOrderSessionStateMachine.
 *
 */
export enum InstoreOrderingSessionStatus {
  Created = 'CREATED',
  Finished = 'FINISHED',
  OnlinePaymentIpadAdmitError = 'ONLINE_PAYMENT_IPAD_ADMIT_ERROR',
  PaidOnline = 'PAID_ONLINE',
  PaidOnSite = 'PAID_ON_SITE',
  PartialPaidOnSite = 'PARTIAL_PAID_ON_SITE',
  TotalAcceptedAmountInconsistent = 'TOTAL_ACCEPTED_AMOUNT_INCONSISTENT',
  WaitingOnlinePayment = 'WAITING_ONLINE_PAYMENT'
}

export enum InstoreQrCodeMaterialColorEnum {
  Black = 'BLACK',
  Green = 'GREEN',
  Orange = 'ORANGE',
  Purple = 'PURPLE',
  Yellow = 'YELLOW'
}

export type InstoreQrCodeMaterialObjectType = {
  __typename?: 'InstoreQrCodeMaterialObjectType';
  color?: Maybe<InstoreQrCodeMaterialColorEnum>;
  logoUrl?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type?: Maybe<QrCodeMaterialTypeEnum>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type InstoreQuery = {
  __typename?: 'InstoreQuery';
  instoreInformation?: Maybe<InstoreInformationObjectType>;
  instoreQrCodeMaterial?: Maybe<InstoreQrCodeMaterialObjectType>;
};

export type IntegrationMenuMutation = {
  __typename?: 'IntegrationMenuMutation';
  foodpanda?: Maybe<FoodpandaMenuMutation>;
  grabfood?: Maybe<GrabfoodMenuMutation>;
  onlineOrdering?: Maybe<OnlineOrderingMenuMutation>;
  onlineRestaurant?: Maybe<OnlineRestaurantMenuMutation>;
  triggerWrapSettingFileDevTool?: Maybe<TriggerWrapSettingFileDevToolMutation>;
  ubereats?: Maybe<UbereatsMenuMutation>;
  ubereatsV2?: Maybe<UbereatsV2MenuMutation>;
};


export type IntegrationMenuMutationOnlineOrderingArgs = {
  platformType: PlatformTypes;
};

export type IntegrationMenuQuery = {
  __typename?: 'IntegrationMenuQuery';
  foodpanda?: Maybe<FoodpandaMenuQuery>;
  grabfood?: Maybe<GrabfoodMenuQuery>;
  onlineOrdering?: Maybe<OnlineOrderingMenuQuery>;
  onlineRestaurant?: Maybe<OnlineRestaurantMenuQuery>;
  statistics?: Maybe<StatisticsMenuQuery>;
  ubereats?: Maybe<UbereatsMenuQuery>;
  ubereatsV2?: Maybe<UbereatsV2MenuQuery>;
};


export type IntegrationMenuQueryOnlineOrderingArgs = {
  platformType: PlatformTypes;
};

export enum InterfaceType {
  OnlineStore = 'ONLINE_STORE',
  Pos = 'POS'
}

export type InvalidMobileError = {
  __typename?: 'InvalidMobileError';
  message?: Maybe<Scalars['String']['output']>;
};

export type InventoryCategoryInput = {
  name: Scalars['String']['input'];
  sortingIndex?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type InventoryCategoryOutput = {
  __typename?: 'InventoryCategoryOutput';
  createdAt?: Maybe<Scalars['UTCDateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  isDeleted?: Maybe<Scalars['Boolean']['output']>;
  items?: Maybe<Array<Maybe<InventoryItemOutput>>>;
  name: Scalars['String']['output'];
  restaurant: RestaurantType;
  sortingIndex: Scalars['Int']['output'];
  /** Used as an unique ID of the record.Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};


export type InventoryCategoryOutputItemsArgs = {
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
};

export enum InventoryEventCgType {
  /** DELIVERY */
  Delivery = 'DELIVERY',
  /** DINE_IN */
  DineIn = 'DINE_IN',
  /** TAKE_OUT */
  Takeout = 'TAKEOUT'
}

export enum InventoryEventCgTypeEnum {
  Delivery = 'DELIVERY',
  DineIn = 'DINE_IN',
  TakeOut = 'TAKE_OUT'
}

export enum InventoryEventGeneratedBy {
  /** CLIENT_CG_AUTO */
  ClientCgAuto = 'CLIENT_CG_AUTO',
  /** CLIENT_IPAD_MANUALLY */
  ClientIpadManually = 'CLIENT_IPAD_MANUALLY'
}

export enum InventoryEventGeneratedByEnum {
  ClientCgAuto = 'CLIENT_CG_AUTO',
  ClientIpadManually = 'CLIENT_IPAD_MANUALLY'
}

export type InventoryEventObject = {
  __typename?: 'InventoryEventObject';
  cgIdentity?: Maybe<Scalars['String']['output']>;
  cgNumber?: Maybe<Scalars['Int']['output']>;
  cgType?: Maybe<InventoryEventCgType>;
  cgUuid?: Maybe<Scalars['UUID']['output']>;
  generatedBy: InventoryEventGeneratedBy;
  inventoryLogs?: Maybe<Array<Maybe<InventoryLogObject>>>;
  lastEvent?: Maybe<InventoryEventObject>;
  lastEventUuid?: Maybe<Scalars['UUID']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  restaurantUuid: Scalars['UUID']['output'];
  timestamp?: Maybe<Scalars['Float']['output']>;
  totalAmountDifference?: Maybe<Scalars['String']['output']>;
  type: InventoryEventType;
  userName?: Maybe<Scalars['String']['output']>;
  userUuid?: Maybe<Scalars['UUID']['output']>;
  uuid: Scalars['UUID']['output'];
};

export enum InventoryEventType {
  /** CONSUMPTION */
  Consumption = 'CONSUMPTION',
  /** COUNT */
  Count = 'COUNT',
  /** PURCHASE */
  Purchase = 'PURCHASE',
  /** RETURN */
  Return = 'RETURN',
  /** SCRAPPED */
  Scrapped = 'SCRAPPED'
}

export enum InventoryEventTypeEnum {
  Consumption = 'CONSUMPTION',
  Count = 'COUNT',
  Purchase = 'PURCHASE',
  Return = 'RETURN',
  Scrapped = 'SCRAPPED'
}

export type InventoryItemInput = {
  defaultPrice?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  safetyStock?: InputMaybe<Scalars['String']['input']>;
  sortingIndex?: InputMaybe<Scalars['Int']['input']>;
  unitName?: InputMaybe<Scalars['String']['input']>;
  uuid: Scalars['UUID']['input'];
};

export type InventoryItemOutput = {
  __typename?: 'InventoryItemOutput';
  category: InventoryCategoryOutput;
  createdAt?: Maybe<Scalars['UTCDateTime']['output']>;
  defaultPrice?: Maybe<Scalars['String']['output']>;
  disabledBySystemAt?: Maybe<Scalars['UTCDateTime']['output']>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  isDeleted?: Maybe<Scalars['Boolean']['output']>;
  menuiteminventoryconsumptionSet: Array<MenuItemInventoryConsumptionType>;
  menuitemtaginventoryconsumptionSet: Array<MenuItemTagInventoryConsumptionType>;
  name: Scalars['String']['output'];
  note?: Maybe<Scalars['String']['output']>;
  restaurant: RestaurantType;
  safetyStock?: Maybe<Scalars['String']['output']>;
  sortingIndex: Scalars['Int']['output'];
  unitName?: Maybe<Scalars['String']['output']>;
  /** Used as an unique ID of the record.Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export type InventoryItemUsageOutput = {
  __typename?: 'InventoryItemUsageOutput';
  isExceedLimit?: Maybe<Scalars['Boolean']['output']>;
  isExceedWarningLimit?: Maybe<Scalars['Boolean']['output']>;
  isReachLimit?: Maybe<Scalars['Boolean']['output']>;
  quotaLeft?: Maybe<Scalars['Int']['output']>;
};

export type InventoryLogInput = {
  amountDifference?: InputMaybe<Scalars['String']['input']>;
  amountDifferenceTaxed?: InputMaybe<Scalars['String']['input']>;
  inStockQuantity?: InputMaybe<Scalars['String']['input']>;
  inventoryCategory: InventoryCategoryInput;
  inventoryItem: InventoryItemInput;
  note?: InputMaybe<Scalars['String']['input']>;
  quantityDifference?: InputMaybe<Scalars['String']['input']>;
  unitPrice?: InputMaybe<Scalars['String']['input']>;
  unitPriceTaxed?: InputMaybe<Scalars['String']['input']>;
  uuid: Scalars['UUID']['input'];
};

export type InventoryLogObject = {
  __typename?: 'InventoryLogObject';
  amountDifference?: Maybe<Scalars['String']['output']>;
  amountDifferenceTaxed?: Maybe<Scalars['String']['output']>;
  categorySettingSnapShot: CategorySettingSnapShotObject;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  inStockQuantity?: Maybe<Scalars['String']['output']>;
  itemSettingSnapShot: ItemSettingSnapShotObject;
  itemSettingUuid: Scalars['UUID']['output'];
  note?: Maybe<Scalars['String']['output']>;
  quantityDifference?: Maybe<Scalars['String']['output']>;
  unitPrice?: Maybe<Scalars['String']['output']>;
  unitPriceTaxed?: Maybe<Scalars['String']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type InventoryLogsReport = {
  __typename?: 'InventoryLogsReport';
  categoryReport?: Maybe<PageableCategoryGroupReportObject>;
  eventReport?: Maybe<PageableEventGroupReportObject>;
  itemGroupReport?: Maybe<PageableItemGroupReportObject>;
  latestItemReport?: Maybe<PageableLatestItemReportObject>;
  rawReport?: Maybe<PageableRawLogReportObject>;
};


export type InventoryLogsReportCategoryReportArgs = {
  ascending?: InputMaybe<Scalars['Boolean']['input']>;
  orderBy?: InputMaybe<CategoryGroupReportObjectEnumType>;
  page?: InputMaybe<Scalars['Int']['input']>;
  queryFilter?: InputMaybe<InventoryQueryFilters>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


export type InventoryLogsReportEventReportArgs = {
  ascending?: InputMaybe<Scalars['Boolean']['input']>;
  orderBy?: InputMaybe<EventGroupReportObjectEnumType>;
  page?: InputMaybe<Scalars['Int']['input']>;
  queryFilter?: InputMaybe<InventoryQueryFilters>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


export type InventoryLogsReportItemGroupReportArgs = {
  ascending?: InputMaybe<Scalars['Boolean']['input']>;
  orderBy?: InputMaybe<ItemGroupReportObjectEnumType>;
  page?: InputMaybe<Scalars['Int']['input']>;
  queryFilter?: InputMaybe<InventoryQueryFilters>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


export type InventoryLogsReportLatestItemReportArgs = {
  ascending?: InputMaybe<Scalars['Boolean']['input']>;
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
  orderBy?: InputMaybe<LatestItemReportObjectEnumType>;
  page?: InputMaybe<Scalars['Int']['input']>;
  queryFilter?: InputMaybe<InventoryQueryFilters>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


export type InventoryLogsReportRawReportArgs = {
  ascending?: InputMaybe<Scalars['Boolean']['input']>;
  orderBy?: InputMaybe<RawLogReportObjectEnumType>;
  page?: InputMaybe<Scalars['Int']['input']>;
  queryFilter?: InputMaybe<InventoryQueryFilters>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export type InventoryMutation = {
  __typename?: 'InventoryMutation';
  createCategory?: Maybe<InventoryCategoryOutput>;
  createItem?: Maybe<InventoryItemOutput>;
  deleteCategory?: Maybe<InventoryCategoryOutput>;
  deleteItem?: Maybe<InventoryItemOutput>;
  reorderInventory?: Maybe<Array<Maybe<InventoryCategoryOutput>>>;
  updateCategory?: Maybe<InventoryCategoryOutput>;
  updateItem?: Maybe<InventoryItemOutput>;
};


export type InventoryMutationCreateCategoryArgs = {
  input?: InputMaybe<CreateCategoryInput>;
};


export type InventoryMutationCreateItemArgs = {
  input?: InputMaybe<CreateItemInput>;
};


export type InventoryMutationDeleteCategoryArgs = {
  input?: InputMaybe<DeleteCategoryInput>;
};


export type InventoryMutationDeleteItemArgs = {
  input?: InputMaybe<DeletedItemInput>;
};


export type InventoryMutationReorderInventoryArgs = {
  input?: InputMaybe<Array<InputMaybe<ReorderInventoryInput>>>;
};


export type InventoryMutationUpdateCategoryArgs = {
  input?: InputMaybe<UpdateCategoryInput>;
};


export type InventoryMutationUpdateItemArgs = {
  input?: InputMaybe<UpdateItemInput>;
};

export enum InventoryOrderByEnum {
  CreatedAtAsc = 'CREATED_AT_ASC',
  SortingIndexAsc = 'SORTING_INDEX_ASC'
}

export type InventoryQuery = {
  __typename?: 'InventoryQuery';
  categories?: Maybe<Array<Maybe<InventoryCategoryOutput>>>;
  category?: Maybe<InventoryCategoryOutput>;
  disabledBySystemItemsCount?: Maybe<Scalars['Int']['output']>;
  disabledByUserItemsCount?: Maybe<Scalars['Int']['output']>;
  inUseItemsCount?: Maybe<Scalars['Int']['output']>;
  item?: Maybe<InventoryItemOutput>;
  items?: Maybe<Array<Maybe<InventoryItemOutput>>>;
  itemsCount?: Maybe<Scalars['Int']['output']>;
};


export type InventoryQueryCategoriesArgs = {
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
  orderByField?: InputMaybe<InventoryOrderByEnum>;
};


export type InventoryQueryCategoryArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type InventoryQueryDisabledBySystemItemsCountArgs = {
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
};


export type InventoryQueryDisabledByUserItemsCountArgs = {
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
};


export type InventoryQueryItemArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type InventoryQueryItemsArgs = {
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
  systemDisabledOnly?: InputMaybe<Scalars['Boolean']['input']>;
};


export type InventoryQueryItemsCountArgs = {
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
};

/** queryfliter base on cloud.apps.inventory_log.models.InventoryLog */
export type InventoryQueryFilters = {
  /** UUID of categories */
  categories?: InputMaybe<SelectStringFilterQueryType>;
  date?: InputMaybe<DatetimeRangeFilterType>;
  event?: InputMaybe<TextFilterQueryType>;
  eventCgNumber?: InputMaybe<TextFilterQueryType>;
  /** Event CG Type */
  eventCgType?: InputMaybe<SelectCgTypeEnumFilterQueryType>;
  /** Event Generated by */
  eventGeneratedBy?: InputMaybe<SelectGeneratedByEnumFilterQueryType>;
  /** UUID of items */
  items?: InputMaybe<SelectStringFilterQueryType>;
};

export type InvitationHasBeenCanceledError = {
  __typename?: 'InvitationHasBeenCanceledError';
  message?: Maybe<Scalars['String']['output']>;
};

export enum InviteBranchFailedReason {
  BranchRejected = 'BRANCH_REJECTED',
  UserBeenDeleted = 'USER_BEEN_DELETED'
}

export type InviteBranchOutput = {
  __typename?: 'InviteBranchOutput';
  invitingHqBranchUuids?: Maybe<Array<Maybe<Scalars['UUID']['output']>>>;
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type InviteBranchPayload = {
  invitingHqBranchUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};

export type InvitingHqBranchOutput = {
  __typename?: 'InvitingHQBranchOutput';
  associatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  branchLoginId?: Maybe<Scalars['String']['output']>;
  contract: Scalars['String']['output'];
  contractUrl?: Maybe<Scalars['String']['output']>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  type?: Maybe<HqBranchModules>;
  uuid: Scalars['String']['output'];
};

export type Invoice = {
  __typename?: 'Invoice';
  buyerTaxInfoCompanyName?: Maybe<Scalars['String']['output']>;
  buyerTaxInfoCustomerAddress?: Maybe<Scalars['String']['output']>;
  buyerTaxInfoCustomerName?: Maybe<Scalars['String']['output']>;
  buyerTaxInfoTaxId?: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  invoiceCancelledDate?: Maybe<Scalars['DateTime']['output']>;
  invoiceIssuedDate?: Maybe<Scalars['DateTime']['output']>;
  invoiceNumber: Scalars['String']['output'];
  invoiceUuid: Scalars['UUID']['output'];
  isCancelled: Scalars['Boolean']['output'];
  isReceipt: Scalars['Boolean']['output'];
  memberMobile?: Maybe<Scalars['String']['output']>;
  memberUuid?: Maybe<Scalars['UUID']['output']>;
  operatedAt: Scalars['DateTime']['output'];
  pointeventviewSet: Array<PointEvent>;
  restaurantId: Scalars['Int']['output'];
  rounding?: Maybe<Scalars['Float']['output']>;
  salesAmountExcludeTax?: Maybe<Scalars['Float']['output']>;
  salesAmountIncludeTax?: Maybe<Scalars['Float']['output']>;
  serviceCharge?: Maybe<Scalars['Float']['output']>;
  taxAmount?: Maybe<Scalars['Float']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
  updatedAt: Scalars['DateTime']['output'];
};

export type InvoiceContent = {
  __typename?: 'InvoiceContent';
  buyerTaxNumber?: Maybe<Scalars['String']['output']>;
  cancelledAmount?: Maybe<Scalars['String']['output']>;
  checkoutDiscountAmount?: Maybe<Scalars['String']['output']>;
  checkoutModules?: Maybe<Scalars['String']['output']>;
  gainPoints?: Maybe<Scalars['Int']['output']>;
  invoiceNumber?: Maybe<Scalars['String']['output']>;
  issuedAmount?: Maybe<Scalars['String']['output']>;
  itemInfoAfterDiscount?: Maybe<Scalars['String']['output']>;
  itemInfoPreDiscount?: Maybe<Scalars['String']['output']>;
  myDetail?: Maybe<RegionDetail>;
  oriInvoiceNumber?: Maybe<Scalars['String']['output']>;
  preRoundingAmount?: Maybe<Scalars['String']['output']>;
  roundedAmount?: Maybe<Scalars['String']['output']>;
  rounding?: Maybe<Scalars['String']['output']>;
  sellerTaxNumber?: Maybe<Scalars['String']['output']>;
  serviceFeeAfterDiscount?: Maybe<Scalars['String']['output']>;
  serviceFeePreDiscount?: Maybe<Scalars['String']['output']>;
  sgDetail?: Maybe<RegionDetail>;
  twDetail?: Maybe<InvoiceTwDetail>;
  usedPoints?: Maybe<Scalars['Int']['output']>;
  validIssuedAmount?: Maybe<Scalars['String']['output']>;
};

export type InvoiceCountByRangeOutput = {
  __typename?: 'InvoiceCountByRangeOutput';
  count?: Maybe<Scalars['Int']['output']>;
  endAt?: Maybe<Scalars['DateTime']['output']>;
  startAt?: Maybe<Scalars['DateTime']['output']>;
};

export type InvoiceEventReportObject = {
  __typename?: 'InvoiceEventReportObject';
  eventTime?: Maybe<Scalars['DateTime']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  eventUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  invoice?: Maybe<InvoiceContent>;
  oriEventTime?: Maybe<Scalars['DateTime']['output']>;
  oriEventUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  payment?: Maybe<PaymentEventReportObject>;
  result?: Maybe<Scalars['String']['output']>;
};

export type InvoiceEventReportPagingObjectType = {
  __typename?: 'InvoiceEventReportPagingObjectType';
  average?: Maybe<InvoiceEventReportObject>;
  nodes?: Maybe<Array<Maybe<InvoiceEventReportObject>>>;
  pageInfo: PageInformation;
  sum?: Maybe<InvoiceEventReportObject>;
};

export type InvoiceHaveNotUploadedError = {
  __typename?: 'InvoiceHaveNotUploadedError';
  message?: Maybe<Scalars['String']['output']>;
};

export type InvoiceInventoryQuery = {
  __typename?: 'InvoiceInventoryQuery';
  receipts?: Maybe<Array<Maybe<ReceiptsOutput>>>;
};


export type InvoiceInventoryQueryReceiptsArgs = {
  iCHEFAppId?: InputMaybe<Scalars['String']['input']>;
  needCount?: InputMaybe<Scalars['Int']['input']>;
};

export type InvoiceObject = {
  __typename?: 'InvoiceObject';
  cancelledInvoicesCount?: Maybe<Scalars['String']['output']>;
  cancelledInvoicesDiscountAmount?: Maybe<Scalars['String']['output']>;
  cancelledInvoicesNumberRange?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  cancelledInvoicesRevenueAmount?: Maybe<Scalars['String']['output']>;
  invoicesCount?: Maybe<Scalars['String']['output']>;
  invoicesDiscountAmount?: Maybe<Scalars['String']['output']>;
  invoicesNumberRange?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  invoicesRevenueAmount?: Maybe<Scalars['String']['output']>;
  pastCancelledInvoicesCount?: Maybe<Scalars['String']['output']>;
  pastCancelledInvoicesNumberRange?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  pastCancelledInvoicesRevenueAmount?: Maybe<Scalars['String']['output']>;
};

export type InvoiceReportQuery = {
  __typename?: 'InvoiceReportQuery';
  states?: Maybe<InvoiceStateReportPagingObjectType>;
};


export type InvoiceReportQueryStatesArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  queryFilter?: InputMaybe<ReportBaseQueryFilters>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export type InvoiceSelectQueryObject = {
  /** e.g. 2017-12-17 */
  endDate?: InputMaybe<Scalars['String']['input']>;
  /** 0-24 */
  endHour?: InputMaybe<Scalars['Int']['input']>;
  /** People in customer order */
  groupAmountMax?: InputMaybe<Scalars['Int']['input']>;
  /** People in customer order */
  groupAmountMin?: InputMaybe<Scalars['Int']['input']>;
  /** ['dine-in','takeout','waitline'] */
  serviceType?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  /** e.g. 2017-12-16 */
  startDate?: InputMaybe<Scalars['String']['input']>;
  /** 0-23 */
  startHour?: InputMaybe<Scalars['Int']['input']>;
  /** List of UUID of targeting modules */
  targetModules?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};

export type InvoiceStateReportPagingObjectType = {
  __typename?: 'InvoiceStateReportPagingObjectType';
  average?: Maybe<InvoiceEventReportObject>;
  nodes?: Maybe<Array<Maybe<InvoiceEventReportObject>>>;
  pageInfo: PageInformation;
  sum?: Maybe<InvoiceEventReportObject>;
};

export type InvoiceTwDetail = {
  __typename?: 'InvoiceTWDetail';
  buyerTaxNumber?: Maybe<Scalars['String']['output']>;
  donateNumber?: Maybe<Scalars['String']['output']>;
  eInvoiceCarrier?: Maybe<Scalars['String']['output']>;
  saleAmountTaxable?: Maybe<Scalars['String']['output']>;
  saleAmountTaxfree?: Maybe<Scalars['String']['output']>;
  saleAmountZerotax?: Maybe<Scalars['String']['output']>;
  sellerTaxNumber?: Maybe<Scalars['String']['output']>;
  taxAmount?: Maybe<Scalars['String']['output']>;
};

export enum InvoiceTrackStatusEnum {
  Available = 'AVAILABLE',
  Imported = 'IMPORTED',
  InvalidAlpha = 'INVALID_ALPHA'
}

export type ItemBranchSales = {
  __typename?: 'ItemBranchSales';
  restaurant?: Maybe<RestaurantInfoInSalesDetailReport>;
  salesAmount?: Maybe<Scalars['Decimal']['output']>;
  salesAmountPercentage?: Maybe<Scalars['Decimal']['output']>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  salesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
  totalSalesCount?: Maybe<Scalars['Int']['output']>;
  totalSalesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
};

export enum ItemCommentVisibility {
  Hidden = 'HIDDEN',
  Optional = 'OPTIONAL'
}

export enum ItemCommentVisibilityQueryEnum {
  Hidden = 'HIDDEN',
  HiddenAndDisabled = 'HIDDEN_AND_DISABLED',
  Optional = 'OPTIONAL'
}

export type ItemDetailReportOutput = {
  __typename?: 'ItemDetailReportOutput';
  averageSellingPrice?: Maybe<Scalars['Decimal']['output']>;
  categoryName?: Maybe<Scalars['String']['output']>;
  deletedDate?: Maybe<Scalars['Date']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  restaurant?: Maybe<RestaurantInfoInSalesDetailReport>;
  salesAmount?: Maybe<Scalars['Decimal']['output']>;
  salesBranches?: Maybe<Array<Maybe<ItemBranchSales>>>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  salesDistributions?: Maybe<Array<Maybe<ItemSalesDistribution>>>;
  totalSalesCount?: Maybe<Scalars['Int']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type ItemDetailReportQueryPayload = {
  /** If it's Branch Item, FE should provide empty list.If it's HQ Item, FE should provide wanted branch UUIDs. Empty list means all branches.If users come from a URL with item_uuid directly, FE should provide empty list. */
  branches?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  endDate: Scalars['Date']['input'];
  endTime: Scalars['Time']['input'];
  serviceTypes?: InputMaybe<Array<InputMaybe<ServiceTypes>>>;
  startDate: Scalars['Date']['input'];
  startTime: Scalars['Time']['input'];
  /** Item UUID */
  uuid: Scalars['UUID']['input'];
};

export type ItemGroupReportObject = {
  __typename?: 'ItemGroupReportObject';
  amountDifference?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  averagePrice?: Maybe<Scalars['String']['output']>;
  categoryName?: Maybe<Scalars['String']['output']>;
  categoryUuid?: Maybe<Scalars['String']['output']>;
  consumptionAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  consumptionQuantity?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  countingAmount?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  countingDifference?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  countingQuantity?: Maybe<Scalars['String']['output']>;
  inStockAmount?: Maybe<Scalars['String']['output']>;
  inStockQuantity?: Maybe<Scalars['String']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  itemUnit?: Maybe<Scalars['String']['output']>;
  itemUuid?: Maybe<Scalars['String']['output']>;
  purchaseAmount?: Maybe<Scalars['String']['output']>;
  purchasePrice?: Maybe<Scalars['String']['output']>;
  purchaseQuantity?: Maybe<Scalars['String']['output']>;
  quantityDifference?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  returnAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  returnPrice?: Maybe<Scalars['String']['output']>;
  returnQuantity?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  scrappedAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  scrappedQuantity?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  usageAmount?: Maybe<Scalars['ReverseNumberSignDecimalStr']['output']>;
  usageQuantity?: Maybe<Scalars['ReverseNumberSignDecimalStr']['output']>;
};

export enum ItemGroupReportObjectEnumType {
  Amountdifference = 'AMOUNTDIFFERENCE',
  AveragePrice = 'AVERAGE_PRICE',
  CategoryName = 'CATEGORY_NAME',
  CategoryUuid = 'CATEGORY_UUID',
  ConsumptionAmount = 'CONSUMPTION_AMOUNT',
  ConsumptionQuantity = 'CONSUMPTION_QUANTITY',
  CountingAmount = 'COUNTING_AMOUNT',
  CountingDifference = 'COUNTING_DIFFERENCE',
  CountingQuantity = 'COUNTING_QUANTITY',
  InStockAmount = 'IN_STOCK_AMOUNT',
  InStockQuantity = 'IN_STOCK_QUANTITY',
  Itemunit = 'ITEMUNIT',
  ItemName = 'ITEM_NAME',
  ItemUuid = 'ITEM_UUID',
  PurchaseAmount = 'PURCHASE_AMOUNT',
  PurchasePrice = 'PURCHASE_PRICE',
  PurchaseQuantity = 'PURCHASE_QUANTITY',
  Quantitydifference = 'QUANTITYDIFFERENCE',
  ReturnAmount = 'RETURN_AMOUNT',
  ReturnPrice = 'RETURN_PRICE',
  ReturnQuantity = 'RETURN_QUANTITY',
  ScrappedAmount = 'SCRAPPED_AMOUNT',
  ScrappedQuantity = 'SCRAPPED_QUANTITY',
  UsageAmount = 'USAGE_AMOUNT',
  UsageQuantity = 'USAGE_QUANTITY'
}

export type ItemInShopAndCartType = Node & {
  __typename?: 'ItemInShopAndCartType';
  category: CategoryType;
  description: Scalars['String']['output'];
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  image: Scalars['String']['output'];
  imageUrl?: Maybe<Scalars['String']['output']>;
  minOrderQuantity: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  perIncrementQuantity?: Maybe<Scalars['Int']['output']>;
  quantityInCart?: Maybe<Scalars['Int']['output']>;
  refrigeration: ItemRefrigeration;
  salePrice?: Maybe<Scalars['Decimal']['output']>;
  sku: Scalars['String']['output'];
  sort: Scalars['Int']['output'];
  stockQuantity?: Maybe<Scalars['Int']['output']>;
  subTotal?: Maybe<Scalars['Decimal']['output']>;
  supplier: SupplierForBranchType;
  taxType: ItemTaxType;
  unitDescription: Scalars['String']['output'];
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type ItemInShopAndCartTypeConnection = {
  __typename?: 'ItemInShopAndCartTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<ItemInShopAndCartTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `ItemInShopAndCartType` and its cursor. */
export type ItemInShopAndCartTypeEdge = {
  __typename?: 'ItemInShopAndCartTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<ItemInShopAndCartType>;
};

/** item setting in shop */
export type ItemInShopInput = {
  salePrice: Scalars['Decimal']['input'];
  status: ProductStatusType;
};

export type ItemInShopType = {
  __typename?: 'ItemInShopType';
  salePrice?: Maybe<Scalars['Decimal']['output']>;
  shop: ShopType;
  status?: Maybe<ProductStatusType>;
  uuid: Scalars['UUID']['output'];
};

export enum ItemOrTagGroupEnumType {
  MenuItemTagInItemType = 'MENU_ITEM_TAG_IN_ITEM_TYPE',
  TagGroupInItemType = 'TAG_GROUP_IN_ITEM_TYPE'
}

export enum ItemRefrigeration {
  /** FROZEN */
  Frozen = 'FROZEN',
  /** NORMAL_TEMPERATURE */
  NormalTemperature = 'NORMAL_TEMPERATURE',
  /** REFRIGERATOR */
  Refrigerator = 'REFRIGERATOR'
}

export type ItemSalesDistribution = {
  __typename?: 'ItemSalesDistribution';
  categoryName?: Maybe<Scalars['String']['output']>;
  isDeleted?: Maybe<Scalars['Boolean']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  itemType?: Maybe<MenuItemTypeEnum>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  salesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type ItemSalesUnderCategoryForCombo = {
  __typename?: 'ItemSalesUnderCategoryForCombo';
  isDeleted?: Maybe<Scalars['Boolean']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  salesCount?: Maybe<Scalars['Int']['output']>;
  salesCountPercentage?: Maybe<Scalars['Decimal']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type ItemSettingSnapShotObject = {
  __typename?: 'ItemSettingSnapShotObject';
  defaultPrice?: Maybe<Scalars['Float']['output']>;
  id: Scalars['ID']['output'];
  inventorylogSet: Array<InventoryLogObject>;
  name: Scalars['String']['output'];
  note?: Maybe<Scalars['String']['output']>;
  safetyStock?: Maybe<Scalars['Float']['output']>;
  sortingIndex: Scalars['Int']['output'];
  unitName?: Maybe<Scalars['String']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type ItemTagRelationUnionType = MenuItemTagInItemType | TagGroupInItemType;

export type ItemTagRelationshipPayload = {
  followingSeparatorCount?: InputMaybe<Scalars['Int']['input']>;
  menuItemTagUuid?: InputMaybe<Scalars['UUID']['input']>;
  subTagList?: InputMaybe<Array<InputMaybe<SubTagInItemPayload>>>;
  tagGroupUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type ItemTagRelationshipType = {
  __typename?: 'ItemTagRelationshipType';
  customSortingIndex?: Maybe<Scalars['Int']['output']>;
  defaultSortingIndex?: Maybe<Scalars['Int']['output']>;
  followingSeparatorCount?: Maybe<Scalars['Int']['output']>;
  /** UUID of related MenuItemTags */
  menuItemTagUuid?: Maybe<Scalars['String']['output']>;
  /** UUID of related MenuItemTags */
  menuItemUuid?: Maybe<Scalars['String']['output']>;
  tagLikeObject?: Maybe<ItemTagRelationUnionType>;
};

export enum ItemTaxType {
  /** TF */
  Tf = 'TF',
  /** TX */
  Tx = 'TX',
  /** TZ */
  Tz = 'TZ'
}

export type ItemType = Node & {
  __typename?: 'ItemType';
  category: CategoryType;
  description: Scalars['String']['output'];
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  image: Scalars['String']['output'];
  imageUrl?: Maybe<Scalars['String']['output']>;
  importPrice?: Maybe<Scalars['Decimal']['output']>;
  itemInShops: Array<ItemInShopType>;
  minOrderQuantity: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  orderIncrementalQuantity: Scalars['Int']['output'];
  refrigeration: ItemRefrigeration;
  sku: Scalars['String']['output'];
  sort: Scalars['Int']['output'];
  stockQuantity?: Maybe<Scalars['Int']['output']>;
  stockThresholdQuantity?: Maybe<Scalars['Int']['output']>;
  supplier?: Maybe<SupplierType>;
  taxType: ItemTaxType;
  unitDescription: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
};

export type ItemTypeConnection = {
  __typename?: 'ItemTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<ItemTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `ItemType` and its cursor. */
export type ItemTypeEdge = {
  __typename?: 'ItemTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<ItemType>;
};

export enum ItemTypeOfMenuSyncedDetail {
  ComboItem = 'COMBO_ITEM',
  ContinuousPrinter = 'CONTINUOUS_PRINTER',
  KitchenPrintRule = 'KITCHEN_PRINT_RULE',
  NonContinuousLabelPrintRule = 'NON_CONTINUOUS_LABEL_PRINT_RULE',
  NonContinuousPrinter = 'NON_CONTINUOUS_PRINTER',
  SingleItem = 'SINGLE_ITEM',
  SingleTag = 'SINGLE_TAG',
  TagGroup = 'TAG_GROUP',
  TagPrintRule = 'TAG_PRINT_RULE'
}

export type KgiMposLogContent = {
  actionCode?: InputMaybe<Scalars['String']['input']>;
  message?: InputMaybe<Scalars['String']['input']>;
  responseCode?: InputMaybe<Scalars['String']['input']>;
  timestamp?: InputMaybe<Scalars['Float']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type KgiMposLogMutation = {
  __typename?: 'KgiMposLogMutation';
  logMessage?: Maybe<LogMessage>;
};


export type KgiMposLogMutationLogMessageArgs = {
  contents?: InputMaybe<Array<InputMaybe<KgiMposLogContent>>>;
  invoiceUuid: Scalars['UUID']['input'];
  referenceNo: Scalars['UUID']['input'];
  restaurantUuid: Scalars['UUID']['input'];
};

export type LinePaySetting = {
  __typename?: 'LINEPaySetting';
  channelId?: Maybe<Scalars['String']['output']>;
  channelSecret?: Maybe<Scalars['String']['output']>;
  lineStoreId?: Maybe<Scalars['String']['output']>;
};

export type LinePaySettings = {
  __typename?: 'LINEPaySettings';
  offlinePayments?: Maybe<Array<Maybe<LinePaySetting>>>;
  onlinePayments?: Maybe<Array<Maybe<LinePaySetting>>>;
};

export type LinePaymentOutput = {
  __typename?: 'LINEPaymentOutput';
  canManuallyConfirm?: Maybe<Scalars['Boolean']['output']>;
  channelId?: Maybe<Scalars['String']['output']>;
  channelSecret?: Maybe<Scalars['String']['output']>;
  isManualConfirmAuthenticated?: Maybe<Scalars['Boolean']['output']>;
};

export type LandingPageSettingInput = {
  brandName: Scalars['String']['input'];
  memberLandingPageImagePath: Scalars['String']['input'];
};

export type LatestItemReportObject = {
  __typename?: 'LatestItemReportObject';
  categoryName?: Maybe<Scalars['String']['output']>;
  categoryUuid?: Maybe<Scalars['String']['output']>;
  cgIdentity?: Maybe<Scalars['String']['output']>;
  cgNumber?: Maybe<Scalars['Int']['output']>;
  cgType?: Maybe<InventoryEventCgTypeEnum>;
  cgUuid?: Maybe<Scalars['UUID']['output']>;
  eventDatetime?: Maybe<Scalars['String']['output']>;
  eventGeneratedBy?: Maybe<InventoryEventGeneratedByEnum>;
  eventType?: Maybe<InventoryEventTypeEnum>;
  eventUuid?: Maybe<Scalars['String']['output']>;
  inStockQuantity?: Maybe<Scalars['String']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  itemUuid?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  unitName?: Maybe<Scalars['String']['output']>;
  userName?: Maybe<Scalars['String']['output']>;
};

export enum LatestItemReportObjectEnumType {
  CategoryName = 'CATEGORY_NAME',
  CategoryUuid = 'CATEGORY_UUID',
  CgIdentity = 'CG_IDENTITY',
  CgNumber = 'CG_NUMBER',
  CgType = 'CG_TYPE',
  CgUuid = 'CG_UUID',
  EventDatetime = 'EVENT_DATETIME',
  EventGeneratedBy = 'EVENT_GENERATED_BY',
  EventType = 'EVENT_TYPE',
  EventUuid = 'EVENT_UUID',
  InStockQuantity = 'IN_STOCK_QUANTITY',
  ItemName = 'ITEM_NAME',
  ItemUuid = 'ITEM_UUID',
  Note = 'NOTE',
  UnitName = 'UNIT_NAME',
  UserName = 'USER_NAME'
}

export type LatestTermsOfServiceOutput = {
  __typename?: 'LatestTermsOfServiceOutput';
  contentEn?: Maybe<Scalars['String']['output']>;
  contentZh?: Maybe<Scalars['String']['output']>;
  isSigned?: Maybe<Scalars['Boolean']['output']>;
  version?: Maybe<Scalars['String']['output']>;
};

/** Deprecated on 2021-01-27: use common PaymentOuery for common resource usage. */
export type LegacyPaymentOutput = {
  __typename?: 'LegacyPaymentOutput';
  name: Scalars['String']['output'];
  type: Scalars['String']['output'];
  uuid: Scalars['String']['output'];
};

export type LineAppConfigurationObjectType = {
  __typename?: 'LineAppConfigurationObjectType';
  liffId?: Maybe<Scalars['String']['output']>;
  messageToken?: Maybe<Scalars['String']['output']>;
  qrCodeUrl?: Maybe<Scalars['String']['output']>;
  sendMessageSetting?: Maybe<LineSendMessageSetting>;
};

export type LineAudienceObjectType = {
  __typename?: 'LineAudienceObjectType';
  messageTokenOnSending?: Maybe<Scalars['String']['output']>;
};

export type LineOaMessageUsageObjectType = {
  __typename?: 'LineOAMessageUsageObjectType';
  targetLimit?: Maybe<Scalars['Int']['output']>;
  totalUsage?: Maybe<Scalars['Int']['output']>;
};

export type LineOaSettings = {
  liffId?: InputMaybe<Scalars['String']['input']>;
  messageToken?: InputMaybe<Scalars['String']['input']>;
  qrCodeUrl?: InputMaybe<Scalars['String']['input']>;
};

export type LinePayOutput = {
  __typename?: 'LinePayOutput';
  paymentUrl?: Maybe<Scalars['String']['output']>;
  returnCode?: Maybe<Scalars['String']['output']>;
};

export type LineQrCodeMaterialObjectType = {
  __typename?: 'LineQrCodeMaterialObjectType';
  color?: Maybe<QrCodeMaterialColorEnum>;
  logoUrl?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type?: Maybe<QrCodeMaterialTypeEnum>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type LineSendMessageSetting = {
  __typename?: 'LineSendMessageSetting';
  cancelledOrderBy?: Maybe<Array<Maybe<CancelledBy>>>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  orderStatus?: Maybe<Array<Maybe<State>>>;
  reservationOrderReminderEnabled?: Maybe<Scalars['Boolean']['output']>;
};

export type LocationAttributesOutput = {
  __typename?: 'LocationAttributesOutput';
  isReserveWithGoogleOn?: Maybe<Scalars['Boolean']['output']>;
  menuUrl?: Maybe<Scalars['String']['output']>;
  orderUrl?: Maybe<Scalars['String']['output']>;
  reservationUrl?: Maybe<Scalars['String']['output']>;
};

export type LocationCategoryListOutput = {
  __typename?: 'LocationCategoryListOutput';
  categories?: Maybe<Array<Maybe<LocationCategoryOutput>>>;
};

export type LocationCategoryOutput = {
  __typename?: 'LocationCategoryOutput';
  categoryId?: Maybe<Scalars['String']['output']>;
  categoryName?: Maybe<Scalars['String']['output']>;
};

export type LocationInformationOutput = {
  __typename?: 'LocationInformationOutput';
  address?: Maybe<Scalars['String']['output']>;
  addressWithoutPostalCode?: Maybe<Scalars['String']['output']>;
  categoryId?: Maybe<Scalars['String']['output']>;
  categoryName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  lat?: Maybe<Scalars['Decimal']['output']>;
  lng?: Maybe<Scalars['Decimal']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  openingHours?: Maybe<Array<Maybe<OpeningHourOutput>>>;
  phone?: Maybe<Scalars['String']['output']>;
  websiteUrl?: Maybe<Scalars['String']['output']>;
};

export type LocationListOutputV1 = {
  __typename?: 'LocationListOutputV1';
  locations?: Maybe<Array<Maybe<LocationOutput>>>;
};

export type LocationOutput = {
  __typename?: 'LocationOutput';
  address?: Maybe<Scalars['String']['output']>;
  locationId?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  placeId?: Maybe<Scalars['String']['output']>;
  requestAdminUrl?: Maybe<Scalars['String']['output']>;
};

export type LogMessage = {
  __typename?: 'LogMessage';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type LoginIdNotExistsError = {
  __typename?: 'LoginIdNotExistsError';
  message?: Maybe<Scalars['String']['output']>;
};

export enum LoginStoreType {
  Hq = 'HQ',
  SingleOrBranch = 'SINGLE_OR_BRANCH',
  Unknown = 'UNKNOWN'
}

export type LogsMutation = {
  __typename?: 'LogsMutation';
  createInventory?: Maybe<CreateInventoryOutput>;
  globalPaymentMposLog?: Maybe<GlobalPaymentLogMutation>;
  taishinEdcPaymentLog?: Maybe<TaishinEdcPaymentLogMutation>;
};


export type LogsMutationCreateInventoryArgs = {
  event: EventInput;
  inventoryData: Array<InputMaybe<InventoryLogInput>>;
  restaurantUuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type LogsMutationGlobalPaymentMposLogArgs = {
  dataType: Scalars['String']['input'];
  invoiceUuid: Scalars['UUID']['input'];
  logDict: Scalars['Dictionary']['input'];
};


export type LogsMutationTaishinEdcPaymentLogArgs = {
  invoiceUuid: Scalars['UUID']['input'];
  transactionDict: Scalars['Dictionary']['input'];
};

export type LogsQuery = {
  __typename?: 'LogsQuery';
  eventList?: Maybe<PageableInventoryEventObject>;
  latestRecordEventList?: Maybe<PageableInventoryEventObject>;
};


export type LogsQueryEventListArgs = {
  cursor?: InputMaybe<Scalars['UUID']['input']>;
  cursorIncluded?: InputMaybe<Scalars['Boolean']['input']>;
  page?: InputMaybe<Scalars['Int']['input']>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


export type LogsQueryLatestRecordEventListArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  settings?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export type LoyaltyInfoOutput = {
  __typename?: 'LoyaltyInfoOutput';
  invoiceOperationUuid?: Maybe<Scalars['UUID']['output']>;
  invoiceType?: Maybe<Scalars['String']['output']>;
  loyaltyPoints?: Maybe<Scalars['Int']['output']>;
};

export type LoyaltyProgramSettingOutput = {
  __typename?: 'LoyaltyProgramSettingOutput';
  collectDescription: Scalars['String']['output'];
  enabled: Scalars['Boolean']['output'];
  errorType?: Maybe<Scalars['String']['output']>;
  fansPageId: Scalars['String']['output'];
  fansPageName: Scalars['String']['output'];
  fansPagePictureUrl: Scalars['String']['output'];
  fbUserId: Scalars['String']['output'];
  fbUserName: Scalars['String']['output'];
  isPrintingQrCode: Scalars['Boolean']['output'];
  personalPhotoUrl: Scalars['String']['output'];
  printingWhileFoodpanda: Scalars['Boolean']['output'];
  printingWhileOnSite: Scalars['Boolean']['output'];
  printingWhileOnlineRestaurant: Scalars['Boolean']['output'];
  printingWhileUbereats: Scalars['Boolean']['output'];
  redeemDescription: Scalars['String']['output'];
};

export type ManualModifyPointInput = {
  /** CrmMember who have this PointEvent */
  memberUuid: Scalars['UUID']['input'];
  pointEvents: Array<ManualPointEventInput>;
  /** iCHEFUser who run this operation */
  userUuid: Scalars['UUID']['input'];
};

export type ManualPointEventInput = {
  delta: Scalars['Int']['input'];
};

export type MappingMenuInput = {
  iCHEFUuid?: InputMaybe<Scalars['UUID']['input']>;
  type?: InputMaybe<IchefMappingTypes>;
  ubereatsUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type MappingMenuOutput = {
  __typename?: 'MappingMenuOutput';
  ubereatsUuid?: Maybe<Scalars['UUID']['output']>;
};

export type MarkManuallyPrintedInvoiceMutation = {
  __typename?: 'MarkManuallyPrintedInvoiceMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export enum MealPreparationTimeAvgEnum {
  From_15To_30 = 'FROM_15_TO_30',
  From_30To_45 = 'FROM_30_TO_45',
  From_45To_60 = 'FROM_45_TO_60',
  LessThan_15 = 'LESS_THAN_15'
}

export type MealTimeLimitObjectType = {
  __typename?: 'MealTimeLimitObjectType';
  minutes?: Maybe<Scalars['Int']['output']>;
  weekdays?: Maybe<Array<Maybe<Weekday>>>;
};

export type MealTimeLimitsInput = {
  minutes: Scalars['Int']['input'];
  weekdays: Array<InputMaybe<Weekday>>;
};

export type MediaItemListOutput = {
  __typename?: 'MediaItemListOutput';
  items?: Maybe<Array<Maybe<MediaItemOutput>>>;
};

export type MediaItemOutput = {
  __typename?: 'MediaItemOutput';
  name?: Maybe<Scalars['String']['output']>;
  thumbUrl?: Maybe<Scalars['String']['output']>;
  url?: Maybe<Scalars['String']['output']>;
};

export type Member = {
  __typename?: 'Member';
  excel?: Maybe<Scalars['String']['output']>;
  flydove?: Maybe<Flydove>;
};

export type MemberCouponDiscountOutput = {
  __typename?: 'MemberCouponDiscountOutput';
  name?: Maybe<Scalars['String']['output']>;
  periodEnd?: Maybe<Scalars['String']['output']>;
  periodStart?: Maybe<Scalars['String']['output']>;
  /** Origin data, format: '10,18', ',18' or '10, */
  timeLimit?: Maybe<Scalars['String']['output']>;
  /** End hour, derived from time_limit */
  timeLimitEnd?: Maybe<Scalars['Int']['output']>;
  /** Start hour, derived from time_limit */
  timeLimitStart?: Maybe<Scalars['Int']['output']>;
  useTimeLimit?: Maybe<Scalars['Boolean']['output']>;
  /** Origin data, format: '1,0,0,1,0,0,1' */
  weekday?: Maybe<Scalars['String']['output']>;
  /** Derived from weekday, format: [monday, friday] */
  weekdays?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type MemberCouponHistoryOutput = {
  __typename?: 'MemberCouponHistoryOutput';
  collectedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  couponUuid?: Maybe<Scalars['UUID']['output']>;
  discount?: Maybe<MemberCouponDiscountOutput>;
  discountName?: Maybe<Scalars['String']['output']>;
  status?: Maybe<MemberCouponStatusType>;
  usedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  usedPlatform?: Maybe<PlatformTypes>;
};

export enum MemberCouponStatusType {
  Available = 'AVAILABLE',
  HasBeenRemoved = 'HAS_BEEN_REMOVED',
  IsEnded = 'IS_ENDED',
  Used = 'USED'
}

export type MemberModuleErrorUnionType = BranchAlreadyUnderMemberSharingError | HqInviteBranchWithInvalidQuotaError;

export type MemberModuleFieldError = {
  __typename?: 'MemberModuleFieldError';
  error?: Maybe<MemberModuleErrorUnionType>;
};

export type MemberModuleOutput = {
  __typename?: 'MemberModuleOutput';
  associatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  branchLoginId?: Maybe<Scalars['String']['output']>;
  contractUrl?: Maybe<Scalars['String']['output']>;
  isMergeMemberFail?: Maybe<Scalars['Boolean']['output']>;
  mergeMemberAt?: Maybe<Scalars['UTCDateTime']['output']>;
  status?: Maybe<BranchWithInvitingStatusTypes>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type MemberQueryFilter = {
  address?: InputMaybe<TextFilterQueryType>;
  age?: InputMaybe<NumberRangeFilterQueryType>;
  averageCycle?: InputMaybe<NumberRangeFilterQueryType>;
  averageSpending?: InputMaybe<NumberRangeFilterQueryType>;
  birth?: InputMaybe<BirthFilterQueryType>;
  email?: InputMaybe<TextFilterQueryType>;
  gender?: InputMaybe<SelectStringFilterQueryType>;
  lastVisit?: InputMaybe<NumberRangeFilterQueryType>;
  memberPoints?: InputMaybe<NumberRangeFilterQueryType>;
  memberType?: InputMaybe<SelectFloatFilterQueryType>;
  mobile?: InputMaybe<TextFilterQueryType>;
  name?: InputMaybe<TextFilterQueryType>;
  note?: InputMaybe<TextFilterQueryType>;
  tel?: InputMaybe<TextFilterQueryType>;
  totalVisit?: InputMaybe<NumberRangeFilterQueryType>;
};

export enum MemberTypes {
  Customer = 'customer',
  Member = 'member'
}

export type MenuCategoriesReportPayload = {
  branches?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  endDate: Scalars['Date']['input'];
  endTime: Scalars['Time']['input'];
  serviceTypes?: InputMaybe<Array<InputMaybe<ServiceTypes>>>;
  startDate: Scalars['Date']['input'];
  startTime: Scalars['Time']['input'];
};

export type MenuComboItemsReportPayload = {
  branches?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  endDate: Scalars['Date']['input'];
  endTime: Scalars['Time']['input'];
  serviceTypes?: InputMaybe<Array<InputMaybe<ServiceTypes>>>;
  startDate: Scalars['Date']['input'];
  startTime: Scalars['Time']['input'];
};

export type MenuItemCategoryReorderInputType = {
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid: Scalars['String']['input'];
};

export type MenuItemCategoryType = {
  __typename?: 'MenuItemCategoryType';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  /** ID of this item in external ERP system. */
  externalId?: Maybe<Scalars['String']['output']>;
  isFromHq?: Maybe<Scalars['Boolean']['output']>;
  isIncomplete?: Maybe<Scalars['Boolean']['output']>;
  menuItems?: Maybe<Array<Maybe<MenuItemType>>>;
  /** Name of the record, max_length = 191. */
  name: Scalars['String']['output'];
  restaurant: RestaurantType;
  /** Default DB query sorted by this field. Used to sort records, starting at 0. */
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  /** Used as an unique ID of the record. Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['String']['output'];
};


export type MenuItemCategoryTypeMenuItemsArgs = {
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MenuItemInventoryConsumptionMutation = {
  consumption?: InputMaybe<Scalars['String']['input']>;
  inventoryItemUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type MenuItemInventoryConsumptionType = {
  __typename?: 'MenuItemInventoryConsumptionType';
  consumption?: Maybe<Scalars['String']['output']>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  inventoryItem?: Maybe<InventoryItemOutput>;
  /** UUID of realted model by attr inventory_item */
  inventoryItemUuid?: Maybe<Scalars['String']['output']>;
  menuItem: MenuItemType;
  restaurant: RestaurantType;
  /** Used as an unique ID of the record. Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export enum MenuItemRecommendationSection {
  MenuPage = 'MENU_PAGE'
}

export type MenuItemTagConfigInputType = {
  autoExpandTags?: InputMaybe<Scalars['Boolean']['input']>;
  columnLayout?: InputMaybe<ColumnLayoutType>;
};

export type MenuItemTagConfigType = {
  __typename?: 'MenuItemTagConfigType';
  autoExpandTags?: Maybe<Scalars['Boolean']['output']>;
  columnLayout?: Maybe<ColumnLayoutType>;
};

export type MenuItemTagInItemType = {
  __typename?: 'MenuItemTagInItemType';
  attributeType?: Maybe<Scalars['String']['output']>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  graphqlType?: Maybe<ItemOrTagGroupEnumType>;
  menuItemTagName?: Maybe<Scalars['String']['output']>;
  menuItemTagUuid?: Maybe<Scalars['UUID']['output']>;
  price?: Maybe<Scalars['String']['output']>;
};

export type MenuItemTagInventoryConsumptionMutation = {
  consumption?: InputMaybe<Scalars['String']['input']>;
  inventoryItemUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type MenuItemTagInventoryConsumptionType = {
  __typename?: 'MenuItemTagInventoryConsumptionType';
  consumption?: Maybe<Scalars['String']['output']>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  id: Scalars['ID']['output'];
  inventoryItem?: Maybe<InventoryItemOutput>;
  /** UUID of realted model by attr inventory_item */
  inventoryItemUuid?: Maybe<Scalars['String']['output']>;
  menuItemTag: MenuItemTagType;
  restaurant: RestaurantType;
  /** Used as an unique ID of the record. Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

/** MenuItemTagSortingType Enum:By spec, `DEFAULT` to be 'sorted by tag sort field', `CUSTOM` meant to be 'sorted by relation sort field'. */
export enum MenuItemTagSortingType {
  Custom = 'CUSTOM',
  Default = 'DEFAULT'
}

export type MenuItemTagType = {
  __typename?: 'MenuItemTagType';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  /** ID of this item in external ERP system. */
  externalId?: Maybe<Scalars['String']['output']>;
  foodpandaMenuItem: Array<FoodpandaMenuItemOutput>;
  foodpandaTagControl?: Maybe<FoodpandaTagControlType>;
  grabfoodMenuItem: Array<GrabfoodMenuItemOutput>;
  grabfoodTagControl?: Maybe<GrabfoodTagControlType>;
  instoreOrderingMenuItem: Array<OnlineOrderingMenuItemOutput>;
  inventoryConsumptionList?: Maybe<Array<Maybe<MenuItemTagInventoryConsumptionType>>>;
  isFromHq?: Maybe<Scalars['Boolean']['output']>;
  itemTagRelationships: Array<ItemTagRelationshipType>;
  /** UUID list of realted MenuItems */
  menuItemUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  menuItems?: Maybe<Array<Maybe<MenuItemType>>>;
  menuItemsUuidsMappedWithOnlineOrdering?: Maybe<MenuItemUuidsMappedWithOnlineOrdering>;
  menuitemtaginventoryconsumptionSet: Array<MenuItemTagInventoryConsumptionType>;
  /** Name of the record, max_length = 191. */
  name: Scalars['String']['output'];
  onlineRestaurantMenuItem: Array<OnlineRestaurantMenuItemOutput>;
  onlineRestaurantTagControl?: Maybe<TagControlType>;
  /**  (Decimal string for API; Float type in DB) */
  price?: Maybe<Scalars['String']['output']>;
  restaurant: RestaurantType;
  /** Used to sort records, starting at 0. */
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  /**
   * Used as Enum: `common`, `add_price`, `minus_price`, or `comment`.
   * All restaurants have one and only one default tag for each type `add_price`, `minus_price`,
   *  and `comment`. What user added manually is in `common` attribute_type.
   */
  type?: Maybe<Scalars['String']['output']>;
  ubereatsMenuItem: Array<UbereatsMenuItemOutput>;
  ubereatsV2MenuItem: Array<UbereatsV2MenuItemOutput>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  /** Used as an unique ID of the record. Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['String']['output'];
};


export type MenuItemTagTypeMenuItemsArgs = {
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
};

export type MenuItemTagValidationPayload = {
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};

export type MenuItemType = {
  __typename?: 'MenuItemType';
  branchesMappedWithPlatforms?: Maybe<Array<Maybe<BranchMappedWithPlatformsType>>>;
  comboItemCategories?: Maybe<Array<Maybe<ComboItemCategoryType>>>;
  comboItemCategory: Array<ComboItemCategoryType>;
  comboItemCategoryUuidsMappedWithOnlineOrdering?: Maybe<ComboItemCategoryUuidsMappedWithOnlineOrderingObjectType>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  croppedInfo?: Maybe<Scalars['Dictionary']['output']>;
  /** Used to enable and make effective customized_tax_type and customized_tax_rate; otherwise `restaurant.tax_type` will be used on iPad. */
  customizedTaxEnabled: Scalars['Boolean']['output'];
  /** Sample value: `0.05` (Decimal string for API; Float type in DB) */
  customizedTaxRate?: Maybe<Scalars['String']['output']>;
  /** Sample value: `TX` */
  customizedTaxType?: Maybe<Scalars['String']['output']>;
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  /** ID of this item in external ERP system. */
  externalId?: Maybe<Scalars['String']['output']>;
  foodpandaMenuItem: Array<FoodpandaMenuItemOutput>;
  grabfoodMenuItem: Array<GrabfoodMenuItemOutput>;
  inCombo: Array<ComboMenuItemType>;
  instoreOrderingMenuItem: Array<OnlineOrderingMenuItemOutput>;
  inventoryConsumptionList?: Maybe<Array<Maybe<MenuItemInventoryConsumptionType>>>;
  isFromHq?: Maybe<Scalars['Boolean']['output']>;
  isIncomplete?: Maybe<Scalars['Boolean']['output']>;
  itemTagRelationshipList?: Maybe<Array<Maybe<ItemTagRelationshipType>>>;
  itemTagRelationships: Array<ItemTagRelationshipType>;
  menuItem: Array<DiscountOutput>;
  menuItemCategory: MenuItemCategoryType;
  /** UUID of related MenuItemCategory */
  menuItemCategoryUuid?: Maybe<Scalars['String']['output']>;
  menuItemTagSortingType?: Maybe<MenuItemTagSortingType>;
  /** UUID list of realted MenuItemTags */
  menuItemTagUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  menuItemTags?: Maybe<Array<Maybe<MenuItemTagType>>>;
  menuItemTagsAndSubTags?: Maybe<Array<Maybe<MenuItemTagType>>>;
  menuiteminventoryconsumptionSet: Array<MenuItemInventoryConsumptionType>;
  /** Name of the record, max_length = 191. */
  name: Scalars['String']['output'];
  onlineRestaurantMenuItem: Array<OnlineRestaurantMenuItemOutput>;
  origin: Array<ComboMenuItemType>;
  originalPicture?: Maybe<OriginalItemPictureOutput>;
  /** UUID of realted model by attr original_picture */
  originalPictureUuid?: Maybe<Scalars['String']['output']>;
  picture?: Maybe<Scalars['String']['output']>;
  /**  (Decimal string for API; Float type in DB) */
  price?: Maybe<Scalars['String']['output']>;
  restaurant: RestaurantType;
  /** Default DB query sorted by this field. Used to sort records, starting at 0. */
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  /** Used as Enum in string: `item` or `combo` */
  type: Scalars['String']['output'];
  ubereatsMenuItem: Array<UbereatsMenuItemOutput>;
  ubereatsV2MenuItem?: Maybe<UbereatsV2MenuItemOutput>;
  uncountedInPos?: Maybe<Scalars['Boolean']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  /** Used as an unique ID of the record. Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['String']['output'];
};

export enum MenuItemTypeEnum {
  Combo = 'COMBO',
  Item = 'ITEM'
}

export type MenuItemUuidsMappedWithOnlineOrdering = {
  __typename?: 'MenuItemUuidsMappedWithOnlineOrdering';
  /** While the menu-item-tag mapped with online-restaurant-menu-item under the <online_restaurant-menu-item which is mapped with menu-item>, the relation of menu-item-tag and menu-item should be kept for mapping rules. */
  onlineRestaurant?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  /** While the menu-item-tag mapped with ubereats-menu-item under the <ubereats-menu-item which is mapped with menu-item>, the relation of menu-item-tag and menu-item should be kept for mapping rules. */
  ubereats?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type MenuItemUuidsNotInRestaurantError = {
  __typename?: 'MenuItemUuidsNotInRestaurantError';
  message?: Maybe<Scalars['String']['output']>;
};

export type MenuItemValidationMutation = {
  __typename?: 'MenuItemValidationMutation';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type MenuItemsReportPayload = {
  branches?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  endDate: Scalars['Date']['input'];
  endTime: Scalars['Time']['input'];
  serviceTypes?: InputMaybe<Array<InputMaybe<ServiceTypes>>>;
  startDate: Scalars['Date']['input'];
  startTime: Scalars['Time']['input'];
};

export type MenuMutation = {
  __typename?: 'MenuMutation';
  checkCanDisableTagGroupInItem?: Maybe<StatusOutput>;
  createMenuItem?: Maybe<MenuItemType>;
  createMenuItemCategory?: Maybe<MenuItemCategoryType>;
  createMenuItemTag?: Maybe<MenuItemTagType>;
  createOrRebuildUncountedMenuItemsInPos?: Maybe<CreateOrRebuildUncountedMenuItemsInPosOutputUnionType>;
  createTagGroup?: Maybe<TagGroupType>;
  deleteMenuItem?: Maybe<MenuItemType>;
  deleteMenuItemCategory?: Maybe<MenuItemCategoryType>;
  deleteMenuItemTag?: Maybe<MenuItemTagType>;
  deleteTagGroup?: Maybe<TagGroupType>;
  duplicateMenuItem?: Maybe<MenuItemType>;
  duplicateMenuItemTag?: Maybe<MenuItemTagType>;
  duplicateTagGroup?: Maybe<TagGroupType>;
  integration?: Maybe<IntegrationMenuMutation>;
  reorderMenuItemCategories?: Maybe<Array<Maybe<MenuItemCategoryType>>>;
  reorderMenuItemTags?: Maybe<Array<Maybe<MenuItemTagType>>>;
  reorderTagGroup?: Maybe<Array<Maybe<TagGroupType>>>;
  updateDisplayMenuItemCountInPos?: Maybe<DisplayMenuItemCountInPosOutputUnionType>;
  updateMenuItem?: Maybe<MenuItemType>;
  updateMenuItemCategory?: Maybe<MenuItemCategoryType>;
  updateMenuItemTag?: Maybe<MenuItemTagType>;
  updateMenuItemTagConfig?: Maybe<MenuItemTagConfigType>;
  updateSoldOutItems?: Maybe<UpdateSoldOutItemMutation>;
  updateTagGroup?: Maybe<TagGroupType>;
  uploadOriginalItemPicture?: Maybe<OriginalItemPictureOutput>;
  validateComboItemCategory?: Maybe<ComboItemCategoryValidationMutation>;
  validateMenuItem?: Maybe<MenuItemValidationMutation>;
  validateMenuItemTag?: Maybe<MenuItemTagType>;
  validateTagGroup?: Maybe<TagGroupType>;
  validateTagGroupWhileDeleteAndReportItemsOnly?: Maybe<TagGroupType>;
  validateTagGroupWhileDisableAndReportItemsOnly?: Maybe<TagGroupType>;
};


export type MenuMutationCheckCanDisableTagGroupInItemArgs = {
  payload: ValidateTagGroupInItemPayload;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type MenuMutationCreateMenuItemArgs = {
  payload: CreateMenuItemPayload;
};


export type MenuMutationCreateMenuItemCategoryArgs = {
  payload: CreateMenuItemCategoryPayload;
};


export type MenuMutationCreateMenuItemTagArgs = {
  payload: CreateMenuItemTagPayload;
};


export type MenuMutationCreateOrRebuildUncountedMenuItemsInPosArgs = {
  menuItemUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};


export type MenuMutationCreateTagGroupArgs = {
  payload: CreateTagGroupPayload;
};


export type MenuMutationDeleteMenuItemArgs = {
  uuid: Scalars['UUID']['input'];
};


export type MenuMutationDeleteMenuItemCategoryArgs = {
  uuid: Scalars['UUID']['input'];
};


export type MenuMutationDeleteMenuItemTagArgs = {
  uuid: Scalars['UUID']['input'];
};


export type MenuMutationDeleteTagGroupArgs = {
  uuid: Scalars['UUID']['input'];
};


export type MenuMutationDuplicateMenuItemArgs = {
  uuid: Scalars['UUID']['input'];
};


export type MenuMutationDuplicateMenuItemTagArgs = {
  uuid: Scalars['UUID']['input'];
};


export type MenuMutationDuplicateTagGroupArgs = {
  uuid: Scalars['UUID']['input'];
};


export type MenuMutationReorderMenuItemCategoriesArgs = {
  payload: Array<InputMaybe<MenuItemCategoryReorderInputType>>;
};


export type MenuMutationReorderMenuItemTagsArgs = {
  payload: Array<InputMaybe<Scalars['String']['input']>>;
};


export type MenuMutationReorderTagGroupArgs = {
  uuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


export type MenuMutationUpdateDisplayMenuItemCountInPosArgs = {
  displayMenuItemCountInPos: Scalars['Boolean']['input'];
};


export type MenuMutationUpdateMenuItemArgs = {
  payload: UpdateMenuItemPayload;
  uuid: Scalars['UUID']['input'];
};


export type MenuMutationUpdateMenuItemCategoryArgs = {
  payload: UpdateMenuItemCategoryPayload;
  uuid: Scalars['UUID']['input'];
};


export type MenuMutationUpdateMenuItemTagArgs = {
  payload: UpdateMenuItemTagPayload;
  uuid: Scalars['UUID']['input'];
};


export type MenuMutationUpdateMenuItemTagConfigArgs = {
  payload?: InputMaybe<MenuItemTagConfigInputType>;
};


export type MenuMutationUpdateSoldOutItemsArgs = {
  soldOutMenuItemTags?: InputMaybe<Array<InputMaybe<UpdateSoldOutItemInputObjectType>>>;
  soldOutMenuItems?: InputMaybe<Array<InputMaybe<UpdateSoldOutItemInputObjectType>>>;
  soldOutPlatforms?: InputMaybe<SoldOutPlatforms>;
};


export type MenuMutationUpdateTagGroupArgs = {
  payload: CreateTagGroupPayload;
  uuid: Scalars['UUID']['input'];
};


export type MenuMutationUploadOriginalItemPictureArgs = {
  picture: Scalars['Upload']['input'];
};


export type MenuMutationValidateComboItemCategoryArgs = {
  payload?: InputMaybe<ComboItemCategoryInput>;
};


export type MenuMutationValidateMenuItemArgs = {
  payload: CreateMenuItemPayload;
};


export type MenuMutationValidateMenuItemTagArgs = {
  payload: MenuItemTagValidationPayload;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type MenuMutationValidateTagGroupArgs = {
  payload: ValidateTagGroupPayload;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type MenuMutationValidateTagGroupWhileDeleteAndReportItemsOnlyArgs = {
  payload: ValidateTagGroupPayload;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type MenuMutationValidateTagGroupWhileDisableAndReportItemsOnlyArgs = {
  payload: ValidateTagGroupPayload;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type MenuNodeSnapshotOutput = {
  __typename?: 'MenuNodeSnapshotOutput';
  ichefUuid?: Maybe<Scalars['UUID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  unitPrice?: Maybe<Scalars['Decimal']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type MenuQuery = {
  __typename?: 'MenuQuery';
  displayMenuItemCountInPos?: Maybe<Scalars['Boolean']['output']>;
  integration?: Maybe<IntegrationMenuQuery>;
  /** Single MenuItem query */
  menuItem?: Maybe<MenuItemType>;
  /** Common entrance of MenuItemCategory & MenuItem things, add keyword for search */
  menuItemCategories?: Maybe<Array<Maybe<MenuItemCategoryType>>>;
  /** Single MenuItemCategory query */
  menuItemCategory?: Maybe<MenuItemCategoryType>;
  /** Single MenuItemTag query */
  menuItemTag?: Maybe<MenuItemTagType>;
  menuItemTagConfig?: Maybe<MenuItemTagConfigType>;
  /** Common entrance of MenuItemTag & MenuItem things, add keyword for search */
  menuItemTags?: Maybe<Array<Maybe<MenuItemTagType>>>;
  /** Multiple MenuItem query */
  menuItems?: Maybe<Array<Maybe<MenuItemType>>>;
  /** deprecated，給 app version 2.290.0 之前的版本使用 */
  soldOutItems?: Maybe<SoldOutItemObjectType>;
  /** 上架商品的停售資訊（有停售過的商品才會在此列表） */
  soldOutItemsWithPlatforms?: Maybe<SoldOutItemsWithPlatformsObjectType>;
  /** TagGroup query, add keyword for search */
  tagGroups?: Maybe<Array<Maybe<TagGroupType>>>;
};


export type MenuQueryMenuItemArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type MenuQueryMenuItemCategoriesArgs = {
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
  keyword?: InputMaybe<Scalars['StripString']['input']>;
  platformType?: InputMaybe<PlatformTypes>;
};


export type MenuQueryMenuItemCategoryArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type MenuQueryMenuItemTagArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type MenuQueryMenuItemTagsArgs = {
  includeDeleted?: InputMaybe<Scalars['Boolean']['input']>;
  keyword?: InputMaybe<Scalars['StripString']['input']>;
};


export type MenuQueryMenuItemsArgs = {
  uuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


export type MenuQueryTagGroupsArgs = {
  keyword?: InputMaybe<Scalars['StripString']['input']>;
  uuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};

export type MenuStatisticsFieldsOutput = {
  __typename?: 'MenuStatisticsFieldsOutput';
  categoryCount?: Maybe<Scalars['Int']['output']>;
  maxCategoryNameLength?: Maybe<Scalars['Int']['output']>;
  maxMenuItemCount?: Maybe<Scalars['Int']['output']>;
  menuItemCount?: Maybe<Scalars['Int']['output']>;
};

export type MenuSyncedDetailOutput = {
  __typename?: 'MenuSyncedDetailOutput';
  categoryName?: Maybe<Scalars['String']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  itemType?: Maybe<ItemTypeOfMenuSyncedDetail>;
  itemUuid?: Maybe<Scalars['UUID']['output']>;
};

export type MenuSyncedDetailsOutput = {
  __typename?: 'MenuSyncedDetailsOutput';
  createdPairs?: Maybe<Array<Maybe<MenuSyncedDetailOutput>>>;
  isUpdatedOrDeleted?: Maybe<Scalars['Boolean']['output']>;
};

export type MenuSyncedNotificationOutput = {
  __typename?: 'MenuSyncedNotificationOutput';
  isGstTaxIncludedUpdated?: Maybe<Scalars['Boolean']['output']>;
  isServiceChargeUpdated?: Maybe<Scalars['Boolean']['output']>;
  latestSyncFinishedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  menuSyncedDetails?: Maybe<MenuSyncedDetailsOutput>;
};

export type MobileAlreadyExistsError = {
  __typename?: 'MobileAlreadyExistsError';
  message?: Maybe<Scalars['String']['output']>;
};

export type MobileVerificationCodeCheckInput = {
  mobile: Scalars['String']['input'];
  verificationCode: Scalars['String']['input'];
};

export type MobileVerificationCodeCheckOutput = {
  __typename?: 'MobileVerificationCodeCheckOutput';
  verificationCode?: Maybe<Scalars['String']['output']>;
};

export type ModulesFieldErrorUnionType = CoreModuleFieldError | MemberModuleFieldError;

export type Mutation = {
  __typename?: 'Mutation';
  accountRecovery?: Maybe<AccountRecoveryMutation>;
  branchPurchasingShop?: Maybe<ShopMutation>;
  hq?: Maybe<BranchSideMutation>;
  /** Mutation of current restaurant */
  restaurant?: Maybe<MutationRestaurant>;
  updateRestaurant?: Maybe<RestaurantType>;
  /** Settings of current user */
  user?: Maybe<UserMutation>;
};


export type MutationBranchPurchasingShopArgs = {
  branchUuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type MutationHqArgs = {
  hqUuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type MutationUpdateRestaurantArgs = {
  payload?: InputMaybe<UpdateRestaurantPayload>;
};

/** Mutation of current restaurant */
export type MutationRestaurant = {
  __typename?: 'MutationRestaurant';
  branchPurchasing?: Maybe<BranchPurchasingMutation>;
  brand?: Maybe<BrandMutation>;
  contractLog?: Maybe<ChangedLogMutation>;
  crm?: Maybe<CrmMemberMutation>;
  customerBehavior?: Maybe<CustomerBehaviorMutation>;
  hq?: Maybe<HqMutation>;
  kgiMposLog?: Maybe<KgiMposLogMutation>;
  logs?: Maybe<LogsMutation>;
  notification?: Maybe<NotificationMutation>;
  onlineOrdering?: Maybe<OnlineOrderMutation>;
  /** backup latest payload */
  opaqueStorage?: Maybe<StatusOutput>;
  paymentGateways?: Maybe<PaymentGatewaysMutation>;
  reservation?: Maybe<ReservationMutation>;
  servicePolicy?: Maybe<ServicePolicyMutation>;
  settings?: Maybe<SettingsMutation>;
  termsOfService?: Maybe<TermsOfServiceMutation>;
  twInvoice?: Maybe<TwInvoiceMutation>;
  webUserPreferences?: Maybe<WebUserPreferencesOutput>;
};


/** Mutation of current restaurant */
export type MutationRestaurantOpaqueStorageArgs = {
  opaqueStorageType: OpaqueStorageEnum;
  payload: Scalars['String']['input'];
  restaurantUuid: Scalars['UUID']['input'];
  timestamp: Scalars['Float']['input'];
};


/** Mutation of current restaurant */
export type MutationRestaurantWebUserPreferencesArgs = {
  webUserPreference: WebUserPreferencesInput;
};

export type NapoleonLinksQuery = {
  __typename?: 'NapoleonLinksQuery';
  contract?: Maybe<Scalars['String']['output']>;
  easyWalletApply?: Maybe<Scalars['String']['output']>;
  realRenewal?: Maybe<Scalars['String']['output']>;
  renewal?: Maybe<Scalars['String']['output']>;
  serviceApply?: Maybe<Scalars['String']['output']>;
  shopping?: Maybe<Scalars['String']['output']>;
  upgrade?: Maybe<Scalars['String']['output']>;
};

export type NapoleonQuery = {
  __typename?: 'NapoleonQuery';
  customerTransactions?: Maybe<Array<Maybe<CustomerTransactionOutput>>>;
  linePaySettings?: Maybe<LinePaySettings>;
  links?: Maybe<NapoleonLinksQuery>;
  pxPayPlusSettings?: Maybe<PxPayPlusSettingsOutput>;
  storeInfo?: Maybe<NapoleonStoreInfoQuery>;
  stripeSettings?: Maybe<StripeSettings>;
};

export type NapoleonStoreInfoQuery = {
  __typename?: 'NapoleonStoreInfoQuery';
  address?: Maybe<Scalars['String']['output']>;
  formattedAddress?: Maybe<Scalars['String']['output']>;
  lat?: Maybe<Scalars['String']['output']>;
  long?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
};

export enum NewebApplyStatusEnum {
  Active = 'ACTIVE',
  AppliedFailed = 'APPLIED_FAILED',
  Applying = 'APPLYING',
  ExistingRestaurantApplying = 'EXISTING_RESTAURANT_APPLYING',
  NoApply = 'NO_APPLY',
  NoSnapshot = 'NO_SNAPSHOT'
}

export type NewebCreditCardPaymentOutput = {
  __typename?: 'NewebCreditCardPaymentOutput';
  merchantId?: Maybe<Scalars['String']['output']>;
};

export type NoRestaurantPolicyError = {
  __typename?: 'NoRestaurantPolicyError';
  message?: Maybe<Scalars['String']['output']>;
};

export type NoShowReservation = {
  __typename?: 'NoShowReservation';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

/** An object with an ID */
export type Node = {
  /** The ID of the object. */
  id: Scalars['ID']['output'];
};

export type NonePayloadErrorOutput = {
  __typename?: 'NonePayloadErrorOutput';
  message?: Maybe<Scalars['String']['output']>;
};

export type NotificationMutation = {
  __typename?: 'NotificationMutation';
  acknowledgeFirebaseNotification?: Maybe<AcknowledgeFirebaseNotificationOutput>;
};


export type NotificationMutationAcknowledgeFirebaseNotificationArgs = {
  iPadReceiveAt?: InputMaybe<Scalars['Float']['input']>;
  referencePath?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['String']['input']>;
};

export type NumberRangeFilterQueryType = {
  max?: InputMaybe<Scalars['Float']['input']>;
  min?: InputMaybe<Scalars['Float']['input']>;
  /** Don't modify if you're not using customized filter */
  type?: InputMaybe<Scalars['String']['input']>;
};

export type NumberRangeFilterQueryTypeWithDateRange = {
  endDateStr?: InputMaybe<Scalars['String']['input']>;
  max?: InputMaybe<Scalars['Float']['input']>;
  min?: InputMaybe<Scalars['Float']['input']>;
  startDateStr?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type OkOutput = {
  __typename?: 'OkOutput';
  message?: Maybe<Scalars['String']['output']>;
};

export type OneClickSyncAllMenuToOnlineOrderingMutation = {
  __typename?: 'OneClickSyncAllMenuToOnlineOrderingMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type OneTimeCodeInformationOutput = {
  __typename?: 'OneTimeCodeInformationOutput';
  loginStoreType?: Maybe<LoginStoreType>;
  loginUrl?: Maybe<Scalars['String']['output']>;
};

export type OnlineOrderCartOutput = {
  __typename?: 'OnlineOrderCartOutput';
  amountSummary?: Maybe<AmountSummaryOutput>;
  cartItems?: Maybe<Array<Maybe<SelectedMenuItemOutput>>>;
  diners?: Maybe<Array<Maybe<CartDinerOutput>>>;
};

export type OnlineOrderList = {
  __typename?: 'OnlineOrderList';
  orders?: Maybe<Array<Maybe<IchefOnlineOrderType>>>;
  totalOrdersCount?: Maybe<Scalars['Int']['output']>;
  updateTimeStartFrom?: Maybe<Scalars['Float']['output']>;
};

export type OnlineOrderMutation = {
  __typename?: 'OnlineOrderMutation';
  combineSession?: Maybe<CombineSessionUnionType>;
  confirmDeniedOrder?: Maybe<ConfirmDeniedOrderOutput>;
  createInstoreSession?: Maybe<CreateSessionUnionType>;
  devToolCleanOrders?: Maybe<DevToolCleanOrders>;
  devToolSendOnlineRestaurantOrder?: Maybe<DevToolSendOnlineRestaurantOrderMutation>;
  devToolSetupOnlineRestaurant?: Maybe<Array<Maybe<OnlineRestaurantMenuCategoriesSnapshotOutput>>>;
  finishInstoreOrderingSessions?: Maybe<UpdateInstoreOrderingSessionOutput>;
  resendEReceiptMail?: Maybe<ResendEReceiptMailUnionType>;
  updateInstoreOrderingSession?: Maybe<UpdateInstoreOrderingSessionOutput>;
  updateOrderStatus?: Maybe<OrderStatusUpdateOutput>;
};


export type OnlineOrderMutationCombineSessionArgs = {
  fromSessionUuid: Scalars['UUID']['input'];
  toSessionUuid: Scalars['UUID']['input'];
};


export type OnlineOrderMutationConfirmDeniedOrderArgs = {
  orderUuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type OnlineOrderMutationCreateInstoreSessionArgs = {
  tableName: Scalars['String']['input'];
};


export type OnlineOrderMutationDevToolSendOnlineRestaurantOrderArgs = {
  cart?: InputMaybe<CartInput>;
};


export type OnlineOrderMutationFinishInstoreOrderingSessionsArgs = {
  uuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


export type OnlineOrderMutationResendEReceiptMailArgs = {
  emailAddress: Scalars['String']['input'];
  ichefOnlineOrderUuid: Scalars['UUID']['input'];
};


export type OnlineOrderMutationUpdateInstoreOrderingSessionArgs = {
  onSitePaymentCompleted?: InputMaybe<Scalars['Boolean']['input']>;
  onSitePaymentRequired?: InputMaybe<Scalars['Boolean']['input']>;
  onlinePaymentAdmitted?: InputMaybe<Scalars['Boolean']['input']>;
  onlinePaymentRefundReason?: InputMaybe<OnlinePaymentRefundReason>;
  tableName?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type OnlineOrderMutationUpdateOrderStatusArgs = {
  cgNumber?: InputMaybe<Scalars['Int']['input']>;
  detail?: InputMaybe<Scalars['String']['input']>;
  orderUuid?: InputMaybe<Scalars['UUID']['input']>;
  reason?: InputMaybe<Scalars['String']['input']>;
  reasonKey?: InputMaybe<ReasonKeyEnum>;
  status?: InputMaybe<Status>;
};

export enum OnlineOrderPaymentStatus {
  Cancelled = 'CANCELLED',
  Denied = 'DENIED',
  Paid = 'PAID',
  Pending = 'PENDING',
  Refund = 'REFUND',
  WaitingPay = 'WAITING_PAY'
}

export type OnlineOrderQuery = {
  __typename?: 'OnlineOrderQuery';
  instoreOrderingSession?: Maybe<InstoreOrderingSessionOutput>;
  /** Online orders */
  onlineOrders?: Maybe<OnlineOrderList>;
};


export type OnlineOrderQueryInstoreOrderingSessionArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type OnlineOrderQueryOnlineOrdersArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  status?: InputMaybe<Array<InputMaybe<Status>>>;
  updateTimeStartFrom?: InputMaybe<Scalars['Float']['input']>;
  uuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};

export type OnlineOrderingHiddenTagsAndTagGroupsPayload = {
  hiddenTagGroupUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  hiddenTagUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};

export type OnlineOrderingIntegrationMutation = {
  __typename?: 'OnlineOrderingIntegrationMutation';
  foodpanda?: Maybe<FoodpandaMutation>;
  instore?: Maybe<InstoreMutation>;
  onlineRestaurant?: Maybe<OnlineRestaurantMutation>;
  setFoodpandaIntegration?: Maybe<FoodpandaIntegrationOutput>;
  setGrabfoodIntegration?: Maybe<GrabfoodIntegrationOutput>;
  setOnlineStoreFoodieSetting?: Maybe<SetOnlineStoreFoodieSettingMutation>;
  setOnlineStoreThemeSetting?: Maybe<SetOnlineStoreThemeSettingOutput>;
  setUbereatsIntegration?: Maybe<UbereatsIntegrationOutput>;
  ubereats?: Maybe<UbereatsMutation>;
};


export type OnlineOrderingIntegrationMutationSetFoodpandaIntegrationArgs = {
  payload?: InputMaybe<SetFoodpandaIntegrationInput>;
};


export type OnlineOrderingIntegrationMutationSetGrabfoodIntegrationArgs = {
  payload?: InputMaybe<SetGrabfoodIntegrationInput>;
};


export type OnlineOrderingIntegrationMutationSetOnlineStoreFoodieSettingArgs = {
  payload?: InputMaybe<SetFoodieSettingPayload>;
};


export type OnlineOrderingIntegrationMutationSetOnlineStoreThemeSettingArgs = {
  payload?: InputMaybe<SetOnlineStoreThemeSettingPayload>;
};


export type OnlineOrderingIntegrationMutationSetUbereatsIntegrationArgs = {
  payload?: InputMaybe<SetUbereatsIntegrationInput>;
};

export type OnlineOrderingIntegrationQuery = {
  __typename?: 'OnlineOrderingIntegrationQuery';
  foodpanda?: Maybe<FoodpandaIntegrationOutput>;
  grabfood?: Maybe<GrabfoodIntegrationOutput>;
  instore?: Maybe<InstoreQuery>;
  onlineRestaurant?: Maybe<OnlineRestaurantQuery>;
  onlineStoreFoodieSetting?: Maybe<OnlineStoreFoodieSettingOutput>;
  onlineStoreThemeSetting?: Maybe<OnlineStoreThemeSettingOutput>;
  ubereats?: Maybe<UbereatsIntegrationOutput>;
  ubereatsStoreList?: Maybe<Array<Maybe<UbereatsStoreObjectType>>>;
};


export type OnlineOrderingIntegrationQueryUbereatsArgs = {
  version?: InputMaybe<UbereatsSetupMenuVersionTypes>;
};

export type OnlineOrderingMenuCategoriesSnapshotOutput = {
  __typename?: 'OnlineOrderingMenuCategoriesSnapshotOutput';
  menuItemsSnapshot: Array<OnlineOrderingMenuItemSnapshotOutput>;
  name: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
};

export type OnlineOrderingMenuCategoryOutput = {
  __typename?: 'OnlineOrderingMenuCategoryOutput';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  menuItems: Array<OnlineOrderingMenuItemOutput>;
  /** Name of the record, max_length = 191. */
  name: Scalars['String']['output'];
  /** Used to sort records, starting at 0. */
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
};

export type OnlineOrderingMenuItemCategoryReorderInputType = {
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid: Scalars['String']['input'];
};

export type OnlineOrderingMenuItemOutput = {
  __typename?: 'OnlineOrderingMenuItemOutput';
  category?: Maybe<OnlineOrderingMenuCategoryOutput>;
  comboMenuItem?: Maybe<ComboMenuItemType>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  croppedInfo?: Maybe<Scalars['Dictionary']['output']>;
  customizedName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  /** Whether menu item of the same iCHEF UUID exists in online restaurant */
  existInOnlineRestaurant?: Maybe<Scalars['Boolean']['output']>;
  ichefUuid: Scalars['UUID']['output'];
  isListedOnInstoreOrdering?: Maybe<Scalars['Boolean']['output']>;
  isListedOnPreorder?: Maybe<Scalars['Boolean']['output']>;
  mappingType: InstoreOrderingMenuItemMappingType;
  menuItem?: Maybe<MenuItemType>;
  menuItemTag?: Maybe<MenuItemTagType>;
  menuItemType?: Maybe<Scalars['String']['output']>;
  modifierGroups: Array<OnlineOrderingModifierGroupOutput>;
  originalName?: Maybe<Scalars['String']['output']>;
  originalPicture?: Maybe<OriginalItemPictureOutput>;
  originalPrice?: Maybe<Scalars['String']['output']>;
  pictureFilename: Scalars['String']['output'];
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
  visible: Scalars['Boolean']['output'];
};

export type OnlineOrderingMenuItemRecommendationQuery = {
  __typename?: 'OnlineOrderingMenuItemRecommendationQuery';
  /** 商品自動推薦設定 - 菜單頁（內掃和預先點餐共用功能開關以及排除商品列表） */
  menuPage?: Maybe<OnlineOrderingMenuPageRecommendationQuery>;
};

export type OnlineOrderingMenuItemSnapshotOutput = {
  __typename?: 'OnlineOrderingMenuItemSnapshotOutput';
  description?: Maybe<Scalars['String']['output']>;
  ichefUuid: Scalars['UUID']['output'];
  isSoldOut?: Maybe<Scalars['Boolean']['output']>;
  mappingType: InstoreOrderingMenuItemSnapshotMappingType;
  menuItemType?: Maybe<Scalars['String']['output']>;
  modifierGroupsSnapshot: Array<OnlineOrderingModifierGroupSnapshotOutput>;
  /** Name of the record, max_length = 191. */
  name: Scalars['String']['output'];
  pictureFilename: Scalars['String']['output'];
  price?: Maybe<Scalars['Float']['output']>;
  recommendedScore?: Maybe<Scalars['Float']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type OnlineOrderingMenuMutation = {
  __typename?: 'OnlineOrderingMenuMutation';
  autoSyncMenu?: Maybe<AutoSyncMenuToOnlineOrderingMutation>;
  batchDelete?: Maybe<DeleteOnlineOrderingMenuMutation>;
  createMenuCategory?: Maybe<OnlineOrderingMenuCategoryOutput>;
  importMenuItemToCategory?: Maybe<ImportMenuItemToCategoryMutation>;
  oneClickSyncAllMenu?: Maybe<OneClickSyncAllMenuToOnlineOrderingMutation>;
  reorderMenuCategories?: Maybe<ReorderMenuCategoriesMutations>;
  setHiddenTagsAndTagGroups?: Maybe<SetOnlineOrderingHiddenTagsAndGroupsMutation>;
  updateMenuCategory?: Maybe<OnlineOrderingMenuCategoryOutput>;
  updateMenuItem?: Maybe<OnlineOrderingMenuItemOutput>;
  /** 商品自動推薦設定 - 菜單頁 */
  updateMenuPageRecommendation: UpdateOnlineOrderingMenuPageRecommendationUnionType;
  validateTagsAndTagGroups?: Maybe<ValidateOnlineOrderingHiddenTagsAndGroupsMutation>;
};


export type OnlineOrderingMenuMutationBatchDeleteArgs = {
  categoryUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


export type OnlineOrderingMenuMutationCreateMenuCategoryArgs = {
  payload?: InputMaybe<CreateOnlineOrderingMenuCategoryPayload>;
};


export type OnlineOrderingMenuMutationImportMenuItemToCategoryArgs = {
  ichefMenuItemUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  uuid: Scalars['UUID']['input'];
};


export type OnlineOrderingMenuMutationOneClickSyncAllMenuArgs = {
  fromPlatformType?: InputMaybe<PlatformTypes>;
};


export type OnlineOrderingMenuMutationReorderMenuCategoriesArgs = {
  payload: Array<InputMaybe<OnlineOrderingMenuItemCategoryReorderInputType>>;
};


export type OnlineOrderingMenuMutationSetHiddenTagsAndTagGroupsArgs = {
  payload: OnlineOrderingHiddenTagsAndTagGroupsPayload;
};


export type OnlineOrderingMenuMutationUpdateMenuCategoryArgs = {
  payload?: InputMaybe<UpdateOnlineOrderingMenuCategoryPayload>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type OnlineOrderingMenuMutationUpdateMenuItemArgs = {
  payload?: InputMaybe<UpdateOnlineOrderingMenuItemPayload>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type OnlineOrderingMenuMutationUpdateMenuPageRecommendationArgs = {
  excludedMenuItemUuids: Array<Scalars['UUID']['input']>;
  recommendationMode: RecommendationModeEnum;
};

export type OnlineOrderingMenuPageRecommendationQuery = {
  __typename?: 'OnlineOrderingMenuPageRecommendationQuery';
  /** 菜單頁 - 排除商品列表，資料來源為後台雲餐菜單設定頁 */
  excludedMenuItems: Array<OnlineOrderingMenuItemOutput>;
  /** 菜單頁 - 推薦功能開關 */
  recommendationMode: RecommendationModeEnum;
  /** 菜單頁 - 推薦商品列表 */
  recommendedMenuItemSnapshots: Array<OnlineOrderingMenuItemSnapshotOutput>;
};


export type OnlineOrderingMenuPageRecommendationQueryRecommendedMenuItemSnapshotsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};

export type OnlineOrderingMenuQuery = {
  __typename?: 'OnlineOrderingMenuQuery';
  categories?: Maybe<Array<Maybe<OnlineOrderingMenuCategoryOutput>>>;
  hiddenTagGroupUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  hiddenTagUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  menuItem?: Maybe<OnlineOrderingMenuItemOutput>;
  menuItemRecommendation?: Maybe<OnlineOrderingMenuItemRecommendationQuery>;
};


export type OnlineOrderingMenuQueryCategoriesArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type OnlineOrderingMenuQueryMenuItemArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type OnlineOrderingModifierGroupOutput = {
  __typename?: 'OnlineOrderingModifierGroupOutput';
  allowRepeatableSelection?: Maybe<Scalars['Boolean']['output']>;
  comboItemCategory?: Maybe<ComboItemCategoryType>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  customizedName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  ichefUuid: Scalars['UUID']['output'];
  mappingType?: Maybe<IchefModifierGroupMappingTypes>;
  maximumSelection?: Maybe<Scalars['Int']['output']>;
  minimumSelection?: Maybe<Scalars['Int']['output']>;
  modifierOptions: Array<OnlineOrderingMenuItemOutput>;
  originalName?: Maybe<Scalars['String']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
  visible: Scalars['Boolean']['output'];
};

export type OnlineOrderingModifierGroupSnapshotOutput = {
  __typename?: 'OnlineOrderingModifierGroupSnapshotOutput';
  allowRepeatableSelection: Scalars['Boolean']['output'];
  description?: Maybe<Scalars['String']['output']>;
  ichefUuid: Scalars['UUID']['output'];
  mappingType: InstoreOrderingModifierGroupSnapshotMappingType;
  maximumSelection?: Maybe<Scalars['Int']['output']>;
  minimumSelection: Scalars['Int']['output'];
  modifierOptionsSnapshot: Array<OnlineOrderingMenuItemSnapshotOutput>;
  name: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
};

export enum OnlinePaymentRefundReason {
  AppError = 'APP_ERROR',
  OrderEdited = 'ORDER_EDITED',
  PartialPaid = 'PARTIAL_PAID',
  TotalPaid = 'TOTAL_PAID'
}

export type OnlineRestaurantCancelledGroupOrderType = {
  __typename?: 'OnlineRestaurantCancelledGroupOrderType';
  cancelledBy?: Maybe<Scalars['String']['output']>;
  detail?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  reasonKey?: Maybe<ReasonKeyEnum>;
};

export type OnlineRestaurantCancelledOrderType = {
  __typename?: 'OnlineRestaurantCancelledOrderType';
  cancelledBy?: Maybe<Scalars['String']['output']>;
  detail?: Maybe<Scalars['String']['output']>;
  reason?: Maybe<Scalars['String']['output']>;
  reasonKey?: Maybe<ReasonKeyEnum>;
};

export type OnlineRestaurantEaterOutput = {
  __typename?: 'OnlineRestaurantEaterOutput';
  deliveryAddress?: Maybe<Scalars['String']['output']>;
  deliveryFloor?: Maybe<Scalars['String']['output']>;
  deviceCode?: Maybe<Scalars['String']['output']>;
  tableName?: Maybe<Scalars['String']['output']>;
  taiwanCorporateTaxId?: Maybe<Scalars['String']['output']>;
};

export type OnlineRestaurantGroupOrderPaymentType = {
  __typename?: 'OnlineRestaurantGroupOrderPaymentType';
  amount?: Maybe<Scalars['String']['output']>;
  applePay?: Maybe<ApplePayOutput>;
  creditCard?: Maybe<CreditCardOutput>;
  deliveryFeeAmount?: Maybe<Scalars['String']['output']>;
  deliveryFeeDiscountAmount?: Maybe<Scalars['String']['output']>;
  deliveryFeeRuleUuid?: Maybe<Scalars['UUID']['output']>;
  googlePay?: Maybe<GooglePayOutput>;
  linePay?: Maybe<LinePayOutput>;
  method?: Maybe<PaymentMethods>;
  moduleName: Scalars['String']['output'];
  moduleType?: Maybe<Scalars['String']['output']>;
  moduleUuid: Scalars['UUID']['output'];
  oriTotalAmount?: Maybe<Scalars['String']['output']>;
  paymentOption?: Maybe<PaymentOptionEnum>;
  pxPayPlus?: Maybe<PxPayPlusOutput>;
  serviceCharge?: Maybe<Scalars['String']['output']>;
  serviceChargePercentage?: Maybe<Scalars['String']['output']>;
  status?: Maybe<OnlineOrderPaymentStatus>;
  stripePay?: Maybe<StripePayOutput>;
  taxAmount?: Maybe<Scalars['String']['output']>;
  taxType: Scalars['String']['output'];
  totalAmountBeforePoints?: Maybe<Scalars['String']['output']>;
  totalDiscountAmount?: Maybe<Scalars['String']['output']>;
  transactionData?: Maybe<Scalars['Dictionary']['output']>;
  transactionUuid?: Maybe<Scalars['UUID']['output']>;
};

export type OnlineRestaurantHiddenTagsAndTagGroupsPayload = {
  hiddenTagGroupUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  hiddenTagUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};

export type OnlineRestaurantInformationObjectType = {
  __typename?: 'OnlineRestaurantInformationObjectType';
  address?: Maybe<Scalars['String']['output']>;
  addressNote?: Maybe<Scalars['String']['output']>;
  availableReservationOrderDays?: Maybe<Scalars['Int']['output']>;
  checkoutAnnouncement?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  deviceCodeEnabled?: Maybe<Scalars['Boolean']['output']>;
  /** 免洗餐具選項，僅有在雲餐外帶外送中使用 */
  disposableTablewareVisibility?: Maybe<DisposableTablewareVisibility>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  foodieMode?: Maybe<FoodieMode>;
  ipadOrderDisplay?: Maybe<IpadOrderDisplayEnum>;
  isAllowReservationOrder?: Maybe<Scalars['Boolean']['output']>;
  isDeliveryInstantOrderAvailable?: Maybe<Scalars['Boolean']['output']>;
  isLineOaActivated?: Maybe<Scalars['Boolean']['output']>;
  isOpening?: Maybe<Scalars['Boolean']['output']>;
  isTakeoutInstantOrderAvailable?: Maybe<Scalars['Boolean']['output']>;
  isTakeoutReservationOrderAvailable?: Maybe<Scalars['Boolean']['output']>;
  /** 餐點備註。 在單店的「文字註記」被停用時，此欄位會顯示 HIDDEN_AND_DISABLED （總店的「文字註記」設定不影響此欄位） */
  itemCommentVisibility?: Maybe<ItemCommentVisibilityQueryEnum>;
  lat?: Maybe<Scalars['Decimal']['output']>;
  lineOaSetting?: Maybe<LineAppConfigurationObjectType>;
  lng?: Maybe<Scalars['Decimal']['output']>;
  mealPreparationTimeAvg?: Maybe<MealPreparationTimeAvgEnum>;
  menuItemSnapshotCount?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  newebApplyingStatus?: Maybe<NewebApplyStatusEnum>;
  onlinePointDescription?: Maybe<Scalars['String']['output']>;
  onlineRestaurantUrl?: Maybe<Scalars['String']['output']>;
  openingHoursPeriods?: Maybe<Array<Maybe<OpeningHoursPeriodObjectType>>>;
  operationType?: Maybe<OperationTypeEnum>;
  orderCommentDescription?: Maybe<Scalars['String']['output']>;
  /** 訂單備註 */
  orderCommentVisibility?: Maybe<OrderCommentVisibility>;
  phone?: Maybe<Scalars['String']['output']>;
  pictureS3Paths?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  promotionAnnouncement?: Maybe<Scalars['String']['output']>;
  publicId?: Maybe<Scalars['String']['output']>;
  reservationOrderEnabled?: Maybe<Scalars['Boolean']['output']>;
  reservationOrderHoursPeriods?: Maybe<Array<Maybe<OpeningHoursPeriodObjectType>>>;
  reservationOrderIntervalMinutes?: Maybe<ReservationOrderIntervalMinutesEnum>;
  reservationOrderType?: Maybe<ReservationOrderTypeEnum>;
  restaurantAnnouncement?: Maybe<Scalars['String']['output']>;
  restaurantAnnouncementDefaultExpanded?: Maybe<Scalars['Boolean']['output']>;
  showPublicWebsite?: Maybe<Scalars['Boolean']['output']>;
  taiwanCorporateTaxIdEnabled?: Maybe<Scalars['Boolean']['output']>;
  uncheckedOrderAlert?: Maybe<UncheckedOrderAlertEnum>;
};

export type OnlineRestaurantLocationInput = {
  address?: InputMaybe<Scalars['String']['input']>;
  addressNote?: InputMaybe<Scalars['String']['input']>;
  lat?: InputMaybe<Scalars['Decimal']['input']>;
  lng?: InputMaybe<Scalars['Decimal']['input']>;
};

export type OnlineRestaurantLocationMutation = {
  __typename?: 'OnlineRestaurantLocationMutation';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type OnlineRestaurantMenuCategoriesSnapshotOutput = {
  __typename?: 'OnlineRestaurantMenuCategoriesSnapshotOutput';
  menuItemSnapshot: Array<OnlineRestaurantMenuItemSnapshotOutput>;
  name: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
};

export type OnlineRestaurantMenuCategoryOutput = {
  __typename?: 'OnlineRestaurantMenuCategoryOutput';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  ichefUuid: Scalars['String']['output'];
  menuItems: Array<OnlineRestaurantMenuItemOutput>;
  /** Name of the record, max_length = 191. */
  name: Scalars['String']['output'];
  /** Used to sort records, starting at 0. */
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
};

export type OnlineRestaurantMenuItemCategoryReorderInputType = {
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid: Scalars['String']['input'];
};

export enum OnlineRestaurantMenuItemMappingType {
  /** COMBO_MENU_ITEM */
  ComboMenuItem = 'COMBO_MENU_ITEM',
  /** MENU_ITEM */
  MenuItem = 'MENU_ITEM',
  /** MENU_ITEM_TAG */
  MenuItemTag = 'MENU_ITEM_TAG',
  /** NOT_MAPPED */
  None = 'NONE'
}

export type OnlineRestaurantMenuItemOutput = {
  __typename?: 'OnlineRestaurantMenuItemOutput';
  category?: Maybe<OnlineRestaurantMenuCategoryOutput>;
  comboMenuItem?: Maybe<ComboMenuItemType>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  croppedInfo?: Maybe<Scalars['Dictionary']['output']>;
  customizedName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  /** Whether menu item of the same iCHEF UUID exists in instore ordering */
  existInInstoreOrdering?: Maybe<Scalars['Boolean']['output']>;
  ichefUuid: Scalars['String']['output'];
  mappingType: OnlineRestaurantMenuItemMappingType;
  menuItem?: Maybe<MenuItemType>;
  menuItemTag?: Maybe<MenuItemTagType>;
  menuItemType?: Maybe<Scalars['String']['output']>;
  modifierGroups: Array<OnlineRestaurantModifierGroupOutput>;
  originalName?: Maybe<Scalars['String']['output']>;
  originalPicture?: Maybe<OriginalItemPictureOutput>;
  originalPrice?: Maybe<Scalars['String']['output']>;
  pictureFilename?: Maybe<Scalars['String']['output']>;
  /** Used to sort records, starting at 0. */
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
  visible: Scalars['Boolean']['output'];
};

export type OnlineRestaurantMenuItemRecommendationQuery = {
  __typename?: 'OnlineRestaurantMenuItemRecommendationQuery';
  /** 商品自動推薦設定 - 菜單頁 */
  menuPage?: Maybe<OnlineRestaurantMenuPageRecommendationQuery>;
};

export type OnlineRestaurantMenuItemSnapshotOutput = {
  __typename?: 'OnlineRestaurantMenuItemSnapshotOutput';
  description?: Maybe<Scalars['String']['output']>;
  ichefUuid: Scalars['String']['output'];
  isSoldOut?: Maybe<Scalars['Boolean']['output']>;
  menuItemType?: Maybe<Scalars['String']['output']>;
  modifierGroupSnapshot: Array<OnlineRestaurantModifierGroupSnapshotOutput>;
  /** Name of the record, max_length = 191. */
  name: Scalars['String']['output'];
  pictureFilename?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['Float']['output']>;
  recommendedScore?: Maybe<Scalars['Float']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type OnlineRestaurantMenuMutation = {
  __typename?: 'OnlineRestaurantMenuMutation';
  autoSyncMenu?: Maybe<AutoSyncMenuToOnlineRestaurantMutation>;
  createMenuCategory?: Maybe<OnlineRestaurantMenuCategoryOutput>;
  deleteMenu?: Maybe<DeleteOnlineRestaurantMenuMutation>;
  importMenuItemToCategory?: Maybe<Array<Maybe<OnlineRestaurantMenuCategoryOutput>>>;
  oneClickSyncAllMenu?: Maybe<Array<Maybe<OnlineRestaurantMenuCategoryOutput>>>;
  reorderMenuCategories?: Maybe<Array<Maybe<OnlineRestaurantMenuCategoryOutput>>>;
  setHiddenTagsAndTagGroups?: Maybe<SetOnlineRestaurantHiddenTagsAndTagGroupsMutation>;
  updateMenuCategory?: Maybe<OnlineRestaurantMenuCategoryOutput>;
  updateMenuItem?: Maybe<OnlineRestaurantMenuItemOutput>;
  /** 商品自動推薦設定 - 菜單頁 */
  updateMenuPageRecommendation: UpdateOnlineRestaurantMenuPageRecommendationUnionType;
};


export type OnlineRestaurantMenuMutationCreateMenuCategoryArgs = {
  payload?: InputMaybe<CreateOnlineRestaurantMenuCategoryPayload>;
};


export type OnlineRestaurantMenuMutationDeleteMenuArgs = {
  categoryUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


export type OnlineRestaurantMenuMutationImportMenuItemToCategoryArgs = {
  ichefMenuItemUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  uuid: Scalars['UUID']['input'];
};


export type OnlineRestaurantMenuMutationReorderMenuCategoriesArgs = {
  payload: Array<InputMaybe<OnlineRestaurantMenuItemCategoryReorderInputType>>;
};


export type OnlineRestaurantMenuMutationSetHiddenTagsAndTagGroupsArgs = {
  payload: OnlineRestaurantHiddenTagsAndTagGroupsPayload;
};


export type OnlineRestaurantMenuMutationUpdateMenuCategoryArgs = {
  payload?: InputMaybe<UpdateOnlineRestaurantMenuCategoryPayload>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type OnlineRestaurantMenuMutationUpdateMenuItemArgs = {
  payload?: InputMaybe<UpdateOnlineRestaurantMenuItemPayload>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type OnlineRestaurantMenuMutationUpdateMenuPageRecommendationArgs = {
  excludedMenuItemUuids: Array<Scalars['UUID']['input']>;
  recommendationMode: RecommendationModeEnum;
};

export type OnlineRestaurantMenuPageRecommendationQuery = {
  __typename?: 'OnlineRestaurantMenuPageRecommendationQuery';
  /** 菜單頁 - 排除商品列表，資料來源為後台雲餐菜單設定頁 */
  excludedMenuItems: Array<OnlineRestaurantMenuItemOutput>;
  /** 菜單頁 - 推薦功能開關 */
  recommendationMode: RecommendationModeEnum;
  /** 菜單頁 - 推薦商品列表 */
  recommendedMenuItemSnapshots: Array<OnlineRestaurantMenuItemSnapshotOutput>;
};


export type OnlineRestaurantMenuPageRecommendationQueryRecommendedMenuItemSnapshotsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};

export type OnlineRestaurantMenuQuery = {
  __typename?: 'OnlineRestaurantMenuQuery';
  categories?: Maybe<Array<Maybe<OnlineRestaurantMenuCategoryOutput>>>;
  category?: Maybe<OnlineRestaurantMenuCategoryOutput>;
  hiddenTagGroupUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  hiddenTagUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  hiddenTags?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  menuItem?: Maybe<OnlineRestaurantMenuItemOutput>;
  menuItemRecommendation?: Maybe<OnlineRestaurantMenuItemRecommendationQuery>;
};


export type OnlineRestaurantMenuQueryCategoryArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type OnlineRestaurantMenuQueryMenuItemArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type OnlineRestaurantModifierGroupOutput = {
  __typename?: 'OnlineRestaurantModifierGroupOutput';
  allowRepeatableSelection: Scalars['Boolean']['output'];
  comboItemCategory?: Maybe<ComboItemCategoryType>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  customizedName?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  ichefUuid: Scalars['String']['output'];
  mappingType?: Maybe<IchefModifierGroupMappingTypes>;
  maximumSelection?: Maybe<Scalars['Int']['output']>;
  minimumSelection: Scalars['Int']['output'];
  modifierOptions: Array<OnlineRestaurantMenuItemOutput>;
  originalName?: Maybe<Scalars['String']['output']>;
  /** Used to sort records, starting at 0. */
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
  visible: Scalars['Boolean']['output'];
};

export enum OnlineRestaurantModifierGroupSnapshotMappingType {
  /** COMBO_ITEM_CATEGORY */
  ComboItemCategory = 'COMBO_ITEM_CATEGORY',
  /** NONE */
  None = 'NONE',
  /** TAG_GROUP */
  TagGroup = 'TAG_GROUP',
  /** VIRTUAL_TAG_GROUP */
  VirtualTagGroup = 'VIRTUAL_TAG_GROUP'
}

export type OnlineRestaurantModifierGroupSnapshotOutput = {
  __typename?: 'OnlineRestaurantModifierGroupSnapshotOutput';
  allowRepeatableSelection: Scalars['Boolean']['output'];
  description?: Maybe<Scalars['String']['output']>;
  ichefUuid: Scalars['String']['output'];
  mappingType?: Maybe<OnlineRestaurantModifierGroupSnapshotMappingType>;
  maximumSelection?: Maybe<Scalars['Int']['output']>;
  minimumSelection: Scalars['Int']['output'];
  modifierOptionSnapshot: Array<OnlineRestaurantMenuItemSnapshotOutput>;
  name: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
};

export type OnlineRestaurantMutation = {
  __typename?: 'OnlineRestaurantMutation';
  createLineOaQrCodeMaterial?: Maybe<LineQrCodeMaterialObjectType>;
  createOnlineRestaurantInformation?: Maybe<OnlineRestaurantInformationObjectType>;
  createOnlineRestaurantQrCodeMaterial?: Maybe<OnlineRestaurantQrCodeMaterialObjectType>;
  deleteLineOaQrCodeMaterial?: Maybe<DeleteLineOaqrCodeMaterialMutation>;
  deleteOnlineRestaurantQrCodeMaterial?: Maybe<DeleteOnlineRestaurantQrCodeMaterialMutation>;
  duplicateLineOaQrCodeMaterial?: Maybe<LineQrCodeMaterialObjectType>;
  duplicateOnlineRestaurantQrCodeMaterial?: Maybe<LineQrCodeMaterialObjectType>;
  setDeliveryFeeRules?: Maybe<SetDeliveryFeeRulesMutation>;
  setRestaurantLocation?: Maybe<OnlineRestaurantLocationMutation>;
  transformToDisplayedOpeningHoursPeriods?: Maybe<Array<Maybe<DisplayedTimePeriodsObjectType>>>;
  transformToDisplayedReservationOrderHoursPeriods?: Maybe<Array<Maybe<DisplayedTimePeriodsObjectType>>>;
  unbindLineOaOnlineRestaurantInformation?: Maybe<OnlineRestaurantInformationObjectType>;
  updateLineOaQrCodeMaterial?: Maybe<LineQrCodeMaterialObjectType>;
  updateLineOaSendMessageSetting?: Maybe<OnlineRestaurantInformationObjectType>;
  updateOnlineRestaurantInformation?: Maybe<OnlineRestaurantInformationObjectType>;
  updateOnlineRestaurantOnlineOrderingSettings?: Maybe<UpdateOnlineOrderSettingsOutput>;
  updateOnlineRestaurantQrCodeMaterial?: Maybe<OnlineRestaurantQrCodeMaterialObjectType>;
  updateTakeoutSearchMeta?: Maybe<TakeoutSearchMetaObjectType>;
  validateOpeningAndReservationOrderHoursPeriods?: Maybe<ValidateOpeningAndReservationOrderHoursPeriodsMutation>;
};


export type OnlineRestaurantMutationCreateLineOaQrCodeMaterialArgs = {
  payload?: InputMaybe<CreateLineQrCodeMaterialInputObject>;
};


export type OnlineRestaurantMutationCreateOnlineRestaurantInformationArgs = {
  payload?: InputMaybe<CreateOnlineRestaurantInformationInputObject>;
};


export type OnlineRestaurantMutationCreateOnlineRestaurantQrCodeMaterialArgs = {
  payload?: InputMaybe<CreateOnlineRestaurantQrCodeMaterialInputObject>;
};


export type OnlineRestaurantMutationDeleteLineOaQrCodeMaterialArgs = {
  uuid: Scalars['UUID']['input'];
};


export type OnlineRestaurantMutationDeleteOnlineRestaurantQrCodeMaterialArgs = {
  uuid: Scalars['UUID']['input'];
};


export type OnlineRestaurantMutationDuplicateLineOaQrCodeMaterialArgs = {
  uuid: Scalars['UUID']['input'];
};


export type OnlineRestaurantMutationDuplicateOnlineRestaurantQrCodeMaterialArgs = {
  uuid: Scalars['UUID']['input'];
};


export type OnlineRestaurantMutationSetDeliveryFeeRulesArgs = {
  payload: RestaurantDeliveryFeeSettingInput;
};


export type OnlineRestaurantMutationSetRestaurantLocationArgs = {
  payload?: InputMaybe<OnlineRestaurantLocationInput>;
};


export type OnlineRestaurantMutationTransformToDisplayedOpeningHoursPeriodsArgs = {
  openingHoursPeriods?: InputMaybe<Array<InputMaybe<OpeningHoursPeriodInputObject>>>;
};


export type OnlineRestaurantMutationTransformToDisplayedReservationOrderHoursPeriodsArgs = {
  reservationOrderHoursPeriods?: InputMaybe<Array<InputMaybe<OpeningHoursPeriodInputObject>>>;
};


export type OnlineRestaurantMutationUnbindLineOaOnlineRestaurantInformationArgs = {
  uuid: Scalars['UUID']['input'];
};


export type OnlineRestaurantMutationUpdateLineOaQrCodeMaterialArgs = {
  payload?: InputMaybe<UpdateLineQrCodeMaterialInputObject>;
  uuid: Scalars['UUID']['input'];
};


export type OnlineRestaurantMutationUpdateLineOaSendMessageSettingArgs = {
  payload?: InputMaybe<UpdateLineOaSendMessageSettingInputObject>;
};


export type OnlineRestaurantMutationUpdateOnlineRestaurantInformationArgs = {
  payload?: InputMaybe<UpdateOnlineRestaurantInformationInputObject>;
};


export type OnlineRestaurantMutationUpdateOnlineRestaurantOnlineOrderingSettingsArgs = {
  payload?: InputMaybe<UpdateOnlineRestaurantOnlineOrderingSettingsInputObject>;
};


export type OnlineRestaurantMutationUpdateOnlineRestaurantQrCodeMaterialArgs = {
  payload?: InputMaybe<UpdateOnlineRestaurantQrCodeMaterialInputObject>;
  uuid: Scalars['UUID']['input'];
};


export type OnlineRestaurantMutationUpdateTakeoutSearchMetaArgs = {
  payload?: InputMaybe<UpdateTakeoutSearchMetaInputObject>;
};


export type OnlineRestaurantMutationValidateOpeningAndReservationOrderHoursPeriodsArgs = {
  payload?: InputMaybe<ValidateOpeningAndReservationOrderHoursPeriodsInputObject>;
};

export type OnlineRestaurantOnlineOrderDiscountEventObjectType = {
  __typename?: 'OnlineRestaurantOnlineOrderDiscountEventObjectType';
  discountModuleType?: Maybe<Scalars['String']['output']>;
  discountModuleUuid?: Maybe<Scalars['UUID']['output']>;
  discountValue: Scalars['Float']['output'];
  isCoupon: Scalars['Boolean']['output'];
  snapshotName?: Maybe<Scalars['String']['output']>;
  snapshotUuid?: Maybe<Scalars['UUID']['output']>;
};

export type OnlineRestaurantOnlineOrderMemberType = {
  __typename?: 'OnlineRestaurantOnlineOrderMemberType';
  crmMember: FoodieCrmMemberType;
  pointsAtTheMoment?: Maybe<Scalars['Int']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type OnlineRestaurantOnlineOrderPaymentType = {
  __typename?: 'OnlineRestaurantOnlineOrderPaymentType';
  amount?: Maybe<Scalars['String']['output']>;
  applePay?: Maybe<ApplePayOutput>;
  creditCard?: Maybe<CreditCardOutput>;
  deliveryFeeAmount?: Maybe<Scalars['String']['output']>;
  deliveryFeeDiscountAmount?: Maybe<Scalars['String']['output']>;
  deliveryFeeRuleUuid?: Maybe<Scalars['UUID']['output']>;
  googlePay?: Maybe<GooglePayOutput>;
  linePay?: Maybe<LinePayOutput>;
  method?: Maybe<PaymentMethods>;
  moduleName: Scalars['String']['output'];
  moduleType?: Maybe<Scalars['String']['output']>;
  moduleUuid: Scalars['UUID']['output'];
  oriTotalAmount?: Maybe<Scalars['String']['output']>;
  paymentOption?: Maybe<PaymentOptionEnum>;
  pxPayPlus?: Maybe<PxPayPlusOutput>;
  serviceCharge?: Maybe<Scalars['String']['output']>;
  serviceChargePercentage?: Maybe<Scalars['String']['output']>;
  status?: Maybe<OnlineOrderPaymentStatus>;
  stripePay?: Maybe<StripePayOutput>;
  taxAmount?: Maybe<Scalars['String']['output']>;
  taxType: Scalars['String']['output'];
  totalAmountBeforePoints?: Maybe<Scalars['String']['output']>;
  totalDiscountAmount?: Maybe<Scalars['String']['output']>;
  transactionData?: Maybe<Scalars['Dictionary']['output']>;
  transactionUuid?: Maybe<Scalars['UUID']['output']>;
};

export type OnlineRestaurantOnlineOrderPointEventType = {
  __typename?: 'OnlineRestaurantOnlineOrderPointEventType';
  actualDiscountAmount?: Maybe<Scalars['String']['output']>;
  discountAmount?: Maybe<Scalars['String']['output']>;
  pointAdded: Scalars['Int']['output'];
  pointDeducted: Scalars['Int']['output'];
  snapshotName?: Maybe<Scalars['String']['output']>;
  snapshotUuid: Scalars['UUID']['output'];
  uuid: Scalars['UUID']['output'];
};

export type OnlineRestaurantOnlineOrderingSettingsOutputType = {
  __typename?: 'OnlineRestaurantOnlineOrderingSettingsOutputType';
  ipadOrderDisplay?: Maybe<IpadOrderDisplayEnum>;
  isAllowReservationOrder?: Maybe<Scalars['Boolean']['output']>;
  isDeliveryInstantOrderAvailable?: Maybe<Scalars['Boolean']['output']>;
  isOpening?: Maybe<Scalars['Boolean']['output']>;
  isTakeoutInstantOrderAvailable?: Maybe<Scalars['Boolean']['output']>;
  isTakeoutReservationOrderAvailable?: Maybe<Scalars['Boolean']['output']>;
  mealPreparationTimeAvg?: Maybe<MealPreparationTimeAvgEnum>;
  reservationOrderEnabled?: Maybe<Scalars['Boolean']['output']>;
  reservationOrderType?: Maybe<ReservationOrderTypeEnum>;
  uncheckedOrderAlert?: Maybe<UncheckedOrderAlertEnum>;
};

export type OnlineRestaurantQrCodeMaterialObjectType = {
  __typename?: 'OnlineRestaurantQrCodeMaterialObjectType';
  color?: Maybe<QrCodeMaterialColorEnum>;
  logoUrl?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  type?: Maybe<QrCodeMaterialTypeEnum>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type OnlineRestaurantQuery = {
  __typename?: 'OnlineRestaurantQuery';
  deliveryFeeRules?: Maybe<DeliveryFeeRuleSettingObjectType>;
  googleApi?: Maybe<GoogleApiQuery>;
  lineOaMessageUsage?: Maybe<LineOaMessageUsageObjectType>;
  lineQrCodeMaterial?: Maybe<LineQrCodeMaterialObjectType>;
  lineQrCodeMaterials?: Maybe<Array<Maybe<LineQrCodeMaterialObjectType>>>;
  onlineRestaurantInformation?: Maybe<OnlineRestaurantInformationObjectType>;
  onlineRestaurantQrCodeMaterial?: Maybe<OnlineRestaurantQrCodeMaterialObjectType>;
  onlineRestaurantQrCodeMaterials?: Maybe<Array<Maybe<OnlineRestaurantQrCodeMaterialObjectType>>>;
  takeoutSearchMeta?: Maybe<TakeoutSearchMetaObjectType>;
};


export type OnlineRestaurantQueryLineQrCodeMaterialArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type OnlineRestaurantQueryOnlineRestaurantQrCodeMaterialArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type OnlineStoreFoodieSettingOutput = {
  __typename?: 'OnlineStoreFoodieSettingOutput';
  enabled?: Maybe<Scalars['Boolean']['output']>;
  instoreOrderFoodieRequired?: Maybe<Scalars['Boolean']['output']>;
  takeoutAndDeliveryOrderFoodieRequired?: Maybe<Scalars['Boolean']['output']>;
};

export type OnlineStoreLinePaymentOutput = {
  __typename?: 'OnlineStoreLINEPaymentOutput';
  channelId?: Maybe<Scalars['String']['output']>;
  channelSecret?: Maybe<Scalars['String']['output']>;
  lineStoreId?: Maybe<Scalars['String']['output']>;
};

export enum OnlineStoreLayout {
  Grid = 'GRID',
  List = 'LIST'
}

/** 雲餐主題色 */
export enum OnlineStoreTheme {
  /** 櫻花黑 */
  BlackPink = 'BLACK_PINK',
  /** 無畏 */
  Bold = 'BOLD',
  /** 星空黑 */
  DarkGold = 'DARK_GOLD',
  /** 共容 */
  Fusion = 'FUSION',
  /** 回家 */
  Homecoming = 'HOMECOMING',
  /** 深海白 */
  LightBlue = 'LIGHT_BLUE',
  /** 棕木白 */
  LightBrown = 'LIGHT_BROWN',
  /** 壞壞 */
  Playful = 'PLAYFUL',
  /** 探索 */
  Safari = 'SAFARI'
}

export type OnlineStoreThemeSettingOutput = {
  __typename?: 'OnlineStoreThemeSettingOutput';
  layoutName?: Maybe<OnlineStoreLayout>;
  themeName?: Maybe<OnlineStoreTheme>;
};

/**
 * OnlineStripePaymentOutput is the schema of online stripe payment output, the
 * followings are the usage of each field:
 *     - connect_account:
 *     the stripe account of the restaurant which send the request.
 */
export type OnlineStripePaymentOutput = {
  __typename?: 'OnlineStripePaymentOutput';
  connectAccount?: Maybe<Scalars['String']['output']>;
  isDisabledOnInstoreOrdering?: Maybe<Scalars['Boolean']['output']>;
  isDisabledOnOnlineRestaurant?: Maybe<Scalars['Boolean']['output']>;
};

export enum OpaqueStorageEnum {
  InfrequentItem = 'INFREQUENT_ITEM'
}

export type OpaqueStorageQuery = {
  __typename?: 'OpaqueStorageQuery';
  payload: Scalars['String']['output'];
  timestamp: Scalars['Float']['output'];
};

export type OpeningHourInput = {
  end?: InputMaybe<Scalars['String']['input']>;
  start?: InputMaybe<Scalars['String']['input']>;
  weekdays?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type OpeningHourOutput = {
  __typename?: 'OpeningHourOutput';
  end?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['String']['output']>;
  weekdays?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type OpeningHoursPeriodInputObject = {
  end: Scalars['String']['input'];
  start: Scalars['String']['input'];
  weekdays?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type OpeningHoursPeriodObjectType = {
  __typename?: 'OpeningHoursPeriodObjectType';
  end?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['String']['output']>;
  weekdays?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type OpeningPeriodInput = {
  end: Scalars['String']['input'];
  start: Scalars['String']['input'];
};

export type OpeningPeriodObjectType = {
  __typename?: 'OpeningPeriodObjectType';
  end?: Maybe<Scalars['String']['output']>;
  start?: Maybe<Scalars['String']['output']>;
};

export enum OperationTypeEnum {
  Delivery = 'DELIVERY',
  OnlyBrowse = 'ONLY_BROWSE',
  Takeout = 'TAKEOUT',
  TakeoutAndDelivery = 'TAKEOUT_AND_DELIVERY'
}

export enum OrderChangeLogAction {
  /** CANCELLED */
  Cancelled = 'CANCELLED',
  /** EDIT_DELIVERY_FEE */
  EditDeliveryFee = 'EDIT_DELIVERY_FEE',
  /** IN_PROGRESS */
  InProgress = 'IN_PROGRESS',
  /** PENDING */
  Pending = 'PENDING',
  /** SHIPPING */
  Shipping = 'SHIPPING'
}

export type OrderChangeLogType = {
  __typename?: 'OrderChangeLogType';
  action: OrderChangeLogAction;
  loginId?: Maybe<Scalars['String']['output']>;
  params?: Maybe<Scalars['Dictionary']['output']>;
  time?: Maybe<Scalars['UTCDateTime']['output']>;
};

export enum OrderCommentVisibility {
  Hidden = 'HIDDEN',
  Optional = 'OPTIONAL',
  Required = 'REQUIRED'
}

export type OrderDeadlineCreateInput = {
  isoWeekday: Scalars['Int']['input'];
  time: Scalars['Time']['input'];
};

export type OrderDeadlineType = {
  __typename?: 'OrderDeadlineType';
  isoWeekday: Scalars['Int']['output'];
  time?: Maybe<Scalars['Time']['output']>;
};

export type OrderDeliveryRuleInOrderGroupType = {
  __typename?: 'OrderDeliveryRuleInOrderGroupType';
  fee?: Maybe<Scalars['Decimal']['output']>;
  freeChargeAmount?: Maybe<Scalars['Decimal']['output']>;
  freeChargeQuantity?: Maybe<Scalars['Int']['output']>;
  originalUuid: Scalars['UUID']['output'];
  type: OrderDeliveryRuleType;
};

export enum OrderDeliveryRuleType {
  /** CHARGED_BY_HQ_DEFINE */
  ChargedByHqDefine = 'CHARGED_BY_HQ_DEFINE',
  /** CHARGED_BY_ORDER */
  ChargedByOrder = 'CHARGED_BY_ORDER',
  /** CHARGED_BY_QUANTITY */
  ChargedByQuantity = 'CHARGED_BY_QUANTITY',
  /** CHARGED_BY_REFRIGERATIONS */
  ChargedByRefrigerations = 'CHARGED_BY_REFRIGERATIONS',
  /** FREE_OF_CHARGE */
  FreeOfCharge = 'FREE_OF_CHARGE',
  /** ONSITE_SHIPPING_CHARGE */
  OnsiteShippingCharge = 'ONSITE_SHIPPING_CHARGE'
}

export type OrderGroupItemType = {
  __typename?: 'OrderGroupItemType';
  description: Scalars['String']['output'];
  image: Scalars['String']['output'];
  importPrice?: Maybe<Scalars['Decimal']['output']>;
  name: Scalars['String']['output'];
  quantity: Scalars['Int']['output'];
  refrigeration: DeliveryGroupItemsRefrigeration;
  salePrice?: Maybe<Scalars['Decimal']['output']>;
  sku: Scalars['String']['output'];
  taxAmount?: Maybe<Scalars['Decimal']['output']>;
  taxType: DeliveryGroupItemsTaxType;
  totalAmount?: Maybe<Scalars['Decimal']['output']>;
  unitDescription: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
};

export type OrderInDeliveryGroupType = {
  __typename?: 'OrderInDeliveryGroupType';
  branch?: Maybe<BranchSnapshotInOrderType>;
  createdAt?: Maybe<Scalars['UTCDateTime']['output']>;
  note: Scalars['String']['output'];
  orderDisplayId: Scalars['String']['output'];
  status: OrderStatus;
  totalAmount?: Maybe<Scalars['Decimal']['output']>;
  totalDeliveryFee?: Maybe<Scalars['Decimal']['output']>;
  totalItemAmount?: Maybe<Scalars['Decimal']['output']>;
  totalItemCount: Scalars['Int']['output'];
  totalTaxAmount?: Maybe<Scalars['Decimal']['output']>;
  user?: Maybe<BranchUserSnapshotInOrderType>;
  uuid: Scalars['UUID']['output'];
};

export type OrderMembershipOutput = {
  __typename?: 'OrderMembershipOutput';
  crmMember?: Maybe<CrmMembersOutput>;
  uuid: Scalars['UUID']['output'];
};

export type OrderNotUsingEReceiptError = {
  __typename?: 'OrderNotUsingEReceiptError';
  message?: Maybe<Scalars['String']['output']>;
};

export type OrderOutput = {
  __typename?: 'OrderOutput';
  canOrderAgain?: Maybe<Scalars['Boolean']['output']>;
  cancelledOrder?: Maybe<OnlineRestaurantCancelledOrderType>;
  cgNumber?: Maybe<Scalars['Int']['output']>;
  collectableCoupons?: Maybe<Array<Maybe<CouponSnapshotOutput>>>;
  discountEvents: Array<OnlineRestaurantOnlineOrderDiscountEventObjectType>;
  displayId: Scalars['String']['output'];
  eReceipts?: Maybe<Array<Maybe<EReceiptOutput>>>;
  eater?: Maybe<OnlineRestaurantEaterOutput>;
  expectedDeliveryAt?: Maybe<Scalars['Float']['output']>;
  expectedPickupAt?: Maybe<Scalars['Float']['output']>;
  instoreOrderingSession?: Maybe<InstoreOrderingSessionOutput>;
  ipadAcceptedAt?: Maybe<Scalars['DateTime']['output']>;
  isReservationOrder?: Maybe<Scalars['Boolean']['output']>;
  isUsingEReceipt?: Maybe<Scalars['Boolean']['output']>;
  orderMembership?: Maybe<OnlineRestaurantOnlineOrderMemberType>;
  orderSchemaType?: Maybe<OrderSchemaType>;
  orderSnapshot?: Maybe<OrderSnapshotOutput>;
  orderStatus?: Maybe<State>;
  orderedAt?: Maybe<Scalars['Float']['output']>;
  oriTotalAmount?: Maybe<Scalars['Decimal']['output']>;
  payment?: Maybe<OnlineRestaurantOnlineOrderPaymentType>;
  pointEvents: Array<OnlineRestaurantOnlineOrderPointEventType>;
  restaurantUuid: Scalars['UUID']['output'];
  /**
   *
   *         Should use snake_case to access the data, e.g. sendPayload.cart.root_items.
   *         Notice: recommendation_from will not be present in orders created before version 2.309.0.
   *
   */
  sendPayload?: Maybe<Scalars['Dictionary']['output']>;
  serviceType?: Maybe<Type>;
  totalAmount?: Maybe<Scalars['Float']['output']>;
  totalOnlinePoints?: Maybe<Scalars['Int']['output']>;
  totalTax?: Maybe<Scalars['Float']['output']>;
  traceUuid?: Maybe<Scalars['UUID']['output']>;
  uuid: Scalars['UUID']['output'];
};

/** Used for easy to use and debug without digging into Graphene __typename. */
export enum OrderSchemaType {
  Order = 'ORDER',
  SessionGroupOrder = 'SESSION_GROUP_ORDER'
}

export type OrderSnapshotOutput = {
  __typename?: 'OrderSnapshotOutput';
  checkoutModules?: Maybe<Array<Maybe<Scalars['Dictionary']['output']>>>;
  couponUuid?: Maybe<Scalars['UUID']['output']>;
  eater?: Maybe<EaterOutput>;
  orderAmountSummary?: Maybe<AmountSummaryOutput>;
  orderComment?: Maybe<Scalars['String']['output']>;
  orderItems?: Maybe<Array<Maybe<SelectedMenuItemOutput>>>;
  paymentOption?: Maybe<PaymentOptionEnum>;
  referralSource?: Maybe<Scalars['String']['output']>;
  referredAt?: Maybe<Scalars['DateTime']['output']>;
  reservationOrderTime?: Maybe<Scalars['Dictionary']['output']>;
  serviceType?: Maybe<Scalars['String']['output']>;
  shouldIncludeDisposableItems?: Maybe<Scalars['Boolean']['output']>;
  traceUuid?: Maybe<Scalars['UUID']['output']>;
};

export enum OrderStatus {
  /** CANCELLED */
  Cancelled = 'CANCELLED',
  /** IN_PROGRESS */
  InProgress = 'IN_PROGRESS',
  /** PENDING */
  Pending = 'PENDING',
  /** SHIPPING */
  Shipping = 'SHIPPING'
}

export type OrderStatusUpdateOutput = {
  __typename?: 'OrderStatusUpdateOutput';
  errorCode?: Maybe<Scalars['Int']['output']>;
  errorMsg?: Maybe<Scalars['String']['output']>;
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
  order?: Maybe<IchefOnlineOrderType>;
};

export type OrderSupplierForBranchType = {
  __typename?: 'OrderSupplierForBranchType';
  deliveryInNDays: Scalars['Int']['output'];
  displayName: Scalars['String']['output'];
  isHq: Scalars['Boolean']['output'];
  originalUuid: Scalars['UUID']['output'];
  sort: Scalars['Int']['output'];
  uuid: Scalars['UUID']['output'];
};

export type OrderSupplierType = {
  __typename?: 'OrderSupplierType';
  deliveryInNDays: Scalars['Int']['output'];
  displayName: Scalars['String']['output'];
  isHq: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  originalUuid: Scalars['UUID']['output'];
  sort: Scalars['Int']['output'];
  uuid: Scalars['UUID']['output'];
};

export type OrderType = Node & {
  __typename?: 'OrderType';
  branch?: Maybe<BranchSnapshotInOrderType>;
  changelogs: Array<OrderChangeLogType>;
  createdAt?: Maybe<Scalars['UTCDateTime']['output']>;
  deliveryGroups?: Maybe<Array<DeliveryGroupInOrderType>>;
  hqNote: Scalars['String']['output'];
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  note: Scalars['String']['output'];
  orderDisplayId: Scalars['String']['output'];
  status: OrderStatus;
  totalAmount?: Maybe<Scalars['Decimal']['output']>;
  totalDeliveryFee?: Maybe<Scalars['Decimal']['output']>;
  totalItemAmount?: Maybe<Scalars['Decimal']['output']>;
  totalItemCount: Scalars['Int']['output'];
  totalTaxAmount?: Maybe<Scalars['Decimal']['output']>;
  user?: Maybe<BranchUserSnapshotInOrderType>;
  uuid: Scalars['UUID']['output'];
};

export type OrderTypeConnection = {
  __typename?: 'OrderTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<OrderTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `OrderType` and its cursor. */
export type OrderTypeEdge = {
  __typename?: 'OrderTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<OrderType>;
};

export type OrdersMarkCancelled = {
  __typename?: 'OrdersMarkCancelled';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type OrdersMarkInProgress = {
  __typename?: 'OrdersMarkInProgress';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type OrdersMarkShipping = {
  __typename?: 'OrdersMarkShipping';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type OriginalItemPictureOutput = {
  __typename?: 'OriginalItemPictureOutput';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  instoreOrderingMenuItems: Array<OnlineOrderingMenuItemOutput>;
  menuItems: Array<MenuItemType>;
  objectKbSize: Scalars['Int']['output'];
  onlineRestaurantDefaultCropInfo?: Maybe<Scalars['JSONString']['output']>;
  onlineRestaurantDefaultPicture?: Maybe<Scalars['String']['output']>;
  onlineRestaurantMenuItems: Array<OnlineRestaurantMenuItemOutput>;
  picture: Scalars['String']['output'];
  pictureFilename?: Maybe<Scalars['String']['output']>;
  restaurant: RestaurantType;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['UUID']['output'];
};

/** The Relay compliant `PageInfo` type, containing data necessary to paginate this connection. */
export type PageInfo = {
  __typename?: 'PageInfo';
  /** When paginating forwards, the cursor to continue. */
  endCursor?: Maybe<Scalars['String']['output']>;
  /** When paginating forwards, are there more items? */
  hasNextPage: Scalars['Boolean']['output'];
  /** When paginating backwards, are there more items? */
  hasPreviousPage: Scalars['Boolean']['output'];
  /** When paginating backwards, the cursor to continue. */
  startCursor?: Maybe<Scalars['String']['output']>;
};

export type PageInformation = {
  __typename?: 'PageInformation';
  currentPage?: Maybe<Scalars['Int']['output']>;
  pageSize?: Maybe<Scalars['Int']['output']>;
  /** How many items total. */
  totalItemCount?: Maybe<Scalars['Int']['output']>;
  /** How many pages total. */
  totalPageCount?: Maybe<Scalars['Int']['output']>;
};

export type PageableCategoryGroupReportObject = {
  __typename?: 'PageableCategoryGroupReportObject';
  average?: Maybe<CategoryGroupReportObject>;
  nodes?: Maybe<Array<Maybe<CategoryGroupReportObject>>>;
  pageInfo: PageInformation;
  sum?: Maybe<CategoryGroupReportObject>;
};

export type PageableEventGroupReportObject = {
  __typename?: 'PageableEventGroupReportObject';
  average?: Maybe<EventGroupReportObject>;
  nodes?: Maybe<Array<Maybe<EventGroupReportObject>>>;
  pageInfo: PageInformation;
  sum?: Maybe<EventGroupReportObject>;
};

export type PageableInventoryEventObject = {
  __typename?: 'PageableInventoryEventObject';
  nodes?: Maybe<Array<Maybe<InventoryEventObject>>>;
  pageInfo: PageInformation;
};

export type PageableItemGroupReportObject = {
  __typename?: 'PageableItemGroupReportObject';
  average?: Maybe<ItemGroupReportObject>;
  nodes?: Maybe<Array<Maybe<ItemGroupReportObject>>>;
  pageInfo: PageInformation;
  sum?: Maybe<ItemGroupReportObject>;
};

export type PageableLatestItemReportObject = {
  __typename?: 'PageableLatestItemReportObject';
  average?: Maybe<LatestItemReportObject>;
  nodes?: Maybe<Array<Maybe<LatestItemReportObject>>>;
  pageInfo: PageInformation;
  sum?: Maybe<LatestItemReportObject>;
};

export type PageableRawLogReportObject = {
  __typename?: 'PageableRawLogReportObject';
  average?: Maybe<RawLogReportObject>;
  nodes?: Maybe<Array<Maybe<RawLogReportObject>>>;
  pageInfo: PageInformation;
  sum?: Maybe<RawLogReportObject>;
};

export type PaidGroupOrderOutput = {
  __typename?: 'PaidGroupOrderOutput';
  paidAt?: Maybe<Scalars['DateTime']['output']>;
  paymentMethod?: Maybe<PaymentMethodEnum>;
};

export type PaidOrderOutput = {
  __typename?: 'PaidOrderOutput';
  paidAt?: Maybe<Scalars['DateTime']['output']>;
  paymentMethod?: Maybe<PaymentMethodEnum>;
  traceUuid?: Maybe<Scalars['UUID']['output']>;
};

export type PaidOrderUnionType = PaidGroupOrderOutput | PaidOrderOutput;

export type PartialDeleteMembersOkOutput = {
  __typename?: 'PartialDeleteMembersOkOutput';
  deletedMemberCount?: Maybe<Scalars['Int']['output']>;
  undeletableMemberCount?: Maybe<Scalars['Int']['output']>;
};

export enum PaymentChannelGrapheneEnum {
  InstoreOrdering = 'INSTORE_ORDERING',
  OnlineRestaurant = 'ONLINE_RESTAURANT',
  Pos = 'POS',
  Preorder = 'PREORDER'
}

export type PaymentEventReportObject = {
  __typename?: 'PaymentEventReportObject';
  accountActualAmount?: Maybe<Scalars['String']['output']>;
  accountCashAmountSnapshot?: Maybe<Scalars['String']['output']>;
  accountInterimExpense?: Maybe<Scalars['String']['output']>;
  accountOverOrShort?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  accountWithdrawal?: Maybe<Scalars['String']['output']>;
  cancelAmount?: Maybe<Scalars['String']['output']>;
  cashChangeAmount?: Maybe<Scalars['String']['output']>;
  cashCollectedAmount?: Maybe<Scalars['String']['output']>;
  comment?: Maybe<Scalars['String']['output']>;
  creditCardLastDigits?: Maybe<Scalars['String']['output']>;
  creditCardType?: Maybe<Scalars['String']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  history?: Maybe<Scalars['String']['output']>;
  issueAmount?: Maybe<Scalars['String']['output']>;
  moduleName?: Maybe<Scalars['String']['output']>;
  moduleType?: Maybe<Scalars['String']['output']>;
  moduleUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  originalAt?: Maybe<Scalars['DateTime']['output']>;
  originalUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  paymentTransactionAt?: Maybe<Scalars['DateTime']['output']>;
  paymentTransactionUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  requestAt?: Maybe<Scalars['DateTime']['output']>;
  requestUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  result?: Maybe<Scalars['String']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  userName?: Maybe<Scalars['String']['output']>;
  userUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  validAmount?: Maybe<Scalars['String']['output']>;
};

export type PaymentGatewayMutation = {
  __typename?: 'PaymentGatewayMutation';
  cancel?: Maybe<GatewayPaymentOutput>;
  pay?: Maybe<GatewayPaymentOutput>;
};


export type PaymentGatewayMutationCancelArgs = {
  amount?: InputMaybe<Scalars['Float']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  markManually?: InputMaybe<Scalars['Boolean']['input']>;
  posTradeTimestamp?: InputMaybe<Scalars['Float']['input']>;
};


export type PaymentGatewayMutationPayArgs = {
  amount?: InputMaybe<Scalars['Float']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  markManually?: InputMaybe<Scalars['Boolean']['input']>;
  posTradeTimestamp?: InputMaybe<Scalars['Float']['input']>;
};

export type PaymentGatewaysMutation = {
  __typename?: 'PaymentGatewaysMutation';
  paymentGateway?: Maybe<PaymentGatewayMutation>;
};


export type PaymentGatewaysMutationPaymentGatewayArgs = {
  eventUuid?: InputMaybe<Scalars['UUID']['input']>;
  invoiceUuid?: InputMaybe<Scalars['UUID']['input']>;
  paymentUuid?: InputMaybe<Scalars['UUID']['input']>;
  posId?: InputMaybe<Scalars['String']['input']>;
  transactionUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type PaymentGatewaysQuery = {
  __typename?: 'PaymentGatewaysQuery';
  paymentGateway?: Maybe<TransactionQuery>;
};


export type PaymentGatewaysQueryPaymentGatewayArgs = {
  paymentUuid?: InputMaybe<Scalars['UUID']['input']>;
  transactionUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export enum PaymentMethodEnum {
  Online = 'ONLINE',
  OnSite = 'ON_SITE'
}

export enum PaymentMethods {
  CashOnDelivery = 'CASH_ON_DELIVERY',
  CashOnRestaurant = 'CASH_ON_RESTAURANT',
  Online = 'ONLINE'
}

export type PaymentModuleReportObject = {
  __typename?: 'PaymentModuleReportObject';
  accountActualAmount?: Maybe<Scalars['String']['output']>;
  accountOverOrShort?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  cancelAmount?: Maybe<Scalars['String']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  issueAmount?: Maybe<Scalars['String']['output']>;
  moduleName?: Maybe<Scalars['String']['output']>;
  moduleType?: Maybe<Scalars['String']['output']>;
  moduleUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  requestAt?: Maybe<Scalars['DateTime']['output']>;
  requestUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  validAmount?: Maybe<Scalars['String']['output']>;
};

/** These mutations include "instore_ordering" payment. */
export type PaymentMutation = {
  __typename?: 'PaymentMutation';
  createOnlineRestaurantPayment?: Maybe<PaymentOutput>;
  deleteOnlineRestaurantPayment?: Maybe<DeleteOnlineRestaurantPaymentMutation>;
  reorderOnlineRestaurantPayment?: Maybe<Array<Maybe<PaymentOutput>>>;
  updateOnlineRestaurantPayment?: Maybe<PaymentOutput>;
};


/** These mutations include "instore_ordering" payment. */
export type PaymentMutationCreateOnlineRestaurantPaymentArgs = {
  payload: CreateOnlineRestaurantPaymentPayload;
};


/** These mutations include "instore_ordering" payment. */
export type PaymentMutationDeleteOnlineRestaurantPaymentArgs = {
  uuid: Scalars['UUID']['input'];
};


/** These mutations include "instore_ordering" payment. */
export type PaymentMutationReorderOnlineRestaurantPaymentArgs = {
  channel?: InputMaybe<PaymentChannelGrapheneEnum>;
  uuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};


/** These mutations include "instore_ordering" payment. */
export type PaymentMutationUpdateOnlineRestaurantPaymentArgs = {
  payload: UpdateOnlineRestaurantPaymentPayload;
  uuid: Scalars['UUID']['input'];
};

export type PaymentObject = {
  __typename?: 'PaymentObject';
  humanRevenue?: Maybe<Scalars['String']['output']>;
  paymentType?: Maybe<Scalars['String']['output']>;
  shortAmount?: Maybe<Scalars['String']['output']>;
  shortReason?: Maybe<Scalars['String']['output']>;
  systemRevenue?: Maybe<Scalars['String']['output']>;
};

export enum PaymentOptionEnum {
  ApplePay = 'APPLE_PAY',
  CreditCard = 'CREDIT_CARD',
  GooglePay = 'GOOGLE_PAY',
  InstoreOnSite = 'INSTORE_ON_SITE',
  LinePay = 'LINE_PAY',
  OnSite = 'ON_SITE',
  PxPayPlus = 'PX_PAY_PLUS',
  Stripe = 'STRIPE'
}

export type PaymentOutput = {
  __typename?: 'PaymentOutput';
  channel?: Maybe<PaymentChannelGrapheneEnum>;
  isDeleted?: Maybe<Scalars['Boolean']['output']>;
  isDisabled?: Maybe<Scalars['Boolean']['output']>;
  line?: Maybe<LinePaymentOutput>;
  name?: Maybe<Scalars['String']['output']>;
  newebCreditCard?: Maybe<NewebCreditCardPaymentOutput>;
  onlineStoreLine?: Maybe<OnlineStoreLinePaymentOutput>;
  onlineStorePxPayPlus?: Maybe<PxPayPlusPaymentOutput>;
  onlineStripe?: Maybe<OnlineStripePaymentOutput>;
  pxPayPlus?: Maybe<PxPayPlusPaymentOutput>;
  type?: Maybe<PaymentTypeGrapheneEnum>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type PaymentQuery = {
  __typename?: 'PaymentQuery';
  creditCardTypes?: Maybe<Array<Maybe<CreditCardTypeOutput>>>;
  /** @deprecated Since 2021-01-27, use PaymentsFilterOptionsPayload with 'custom' and isDisabled=False. */
  getCustomPaymentForUbereatsIntegration?: Maybe<Array<Maybe<LegacyPaymentOutput>>>;
  payments?: Maybe<Array<Maybe<PaymentOutput>>>;
};


export type PaymentQueryCreditCardTypesArgs = {
  paymentType?: InputMaybe<PaymentTypeGrapheneEnum>;
};


export type PaymentQueryPaymentsArgs = {
  payload?: InputMaybe<PaymentsFilterOptionsPayload>;
};

export type PaymentReportQuery = {
  __typename?: 'PaymentReportQuery';
  module?: Maybe<PaymentModuleReportObject>;
  states?: Maybe<PaymentStateReportObject>;
};


export type PaymentReportQueryModuleArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  queryFilter?: InputMaybe<ReportBaseQueryFilters>;
  size?: InputMaybe<Scalars['Int']['input']>;
};


export type PaymentReportQueryStatesArgs = {
  page?: InputMaybe<Scalars['Int']['input']>;
  queryFilter?: InputMaybe<ReportBaseQueryFilters>;
  size?: InputMaybe<Scalars['Int']['input']>;
};

export type PaymentStateReportObject = {
  __typename?: 'PaymentStateReportObject';
  accountActualAmount?: Maybe<Scalars['String']['output']>;
  accountCashAmountSnapshot?: Maybe<Scalars['String']['output']>;
  accountInterimExpense?: Maybe<Scalars['String']['output']>;
  accountOverOrShort?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  accountWithdrawal?: Maybe<Scalars['String']['output']>;
  cancelAmount?: Maybe<Scalars['String']['output']>;
  eventType?: Maybe<Scalars['String']['output']>;
  history?: Maybe<Scalars['String']['output']>;
  issueAmount?: Maybe<Scalars['String']['output']>;
  moduleName?: Maybe<Scalars['String']['output']>;
  moduleType?: Maybe<Scalars['String']['output']>;
  moduleUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  originalAt?: Maybe<Scalars['DateTime']['output']>;
  originalUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  requestAt?: Maybe<Scalars['DateTime']['output']>;
  requestUuid?: Maybe<Scalars['AllowUnicodeAndDefaultValueUUID']['output']>;
  state?: Maybe<Scalars['String']['output']>;
  validAmount?: Maybe<Scalars['String']['output']>;
};

export enum PaymentTimingEnum {
  Postpay = 'POSTPAY',
  Prepay = 'PREPAY'
}

export enum PaymentTypeGrapheneEnum {
  Cash = 'CASH',
  CreditCard = 'CREDIT_CARD',
  CtbcDirect = 'CTBC_DIRECT',
  CtbcMpos = 'CTBC_MPOS',
  Custom = 'CUSTOM',
  EasyWallet = 'EASY_WALLET',
  GlobalPayments = 'GLOBAL_PAYMENTS',
  InstoreLine = 'INSTORE_LINE',
  InstoreOnSite = 'INSTORE_ON_SITE',
  InstorePxPayPlus = 'INSTORE_PX_PAY_PLUS',
  Jko = 'JKO',
  KgiMpos = 'KGI_MPOS',
  Line = 'LINE',
  MysInvoice = 'MYS_INVOICE',
  NewebCreditCard = 'NEWEB_CREDIT_CARD',
  OnlineRestaurantLine = 'ONLINE_RESTAURANT_LINE',
  OnlineRestaurantPxPayPlus = 'ONLINE_RESTAURANT_PX_PAY_PLUS',
  OnlineStripe = 'ONLINE_STRIPE',
  OnSite = 'ON_SITE',
  PxPayPlus = 'PX_PAY_PLUS',
  TaishinEdc = 'TAISHIN_EDC',
  TwInvoice = 'TW_INVOICE',
  TwLegacyInvoice = 'TW_LEGACY_INVOICE'
}

export type PaymentsFilterOptionsPayload = {
  channel?: InputMaybe<PaymentChannelGrapheneEnum>;
  isDeleted?: InputMaybe<Scalars['Boolean']['input']>;
  isDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  type?: InputMaybe<PaymentTypeGrapheneEnum>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export enum PermissionLogCrmModuleNameEnum {
  BrowseCrm = 'BROWSE_CRM',
  CreateCrm = 'CREATE_CRM',
  CrmImport = 'CRM_IMPORT',
  DeleteCrm = 'DELETE_CRM',
  DeleteCrmWeb = 'DELETE_CRM_WEB',
  ModifyCrm = 'MODIFY_CRM'
}

export enum PermissionLogModuleName {
  /** accept_and_print_online_order */
  AcceptAndPrintOnlineOrder = 'ACCEPT_AND_PRINT_ONLINE_ORDER',
  /** browse_crm */
  BrowseCrm = 'BROWSE_CRM',
  /** cancel_invoice */
  CancelInvoice = 'CANCEL_INVOICE',
  /** cancel_online_order */
  CancelOnlineOrder = 'CANCEL_ONLINE_ORDER',
  /** cancel_order_item */
  CancelOrderItem = 'CANCEL_ORDER_ITEM',
  /** checkout_modules */
  CheckoutModules = 'CHECKOUT_MODULES',
  /** check_out */
  CheckOut = 'CHECK_OUT',
  /** close_account */
  CloseAccount = 'CLOSE_ACCOUNT',
  /** create_crm */
  CreateCrm = 'CREATE_CRM',
  /** crm_import */
  CrmImport = 'CRM_IMPORT',
  /** customer_group_batch_exit */
  CustomerGroupBatchExit = 'CUSTOMER_GROUP_BATCH_EXIT',
  /** daily_account */
  DailyAccount = 'DAILY_ACCOUNT',
  /** delete_crm */
  DeleteCrm = 'DELETE_CRM',
  /** delete_crm_web */
  DeleteCrmWeb = 'DELETE_CRM_WEB',
  /** delete_group */
  DeleteGroup = 'DELETE_GROUP',
  /** delete_infrequent_item */
  DeleteInfrequentItem = 'DELETE_INFREQUENT_ITEM',
  /** discount */
  Discount = 'DISCOUNT',
  /** download_crm */
  DownloadCrm = 'DOWNLOAD_CRM',
  /** edit_virtual_cash_drawer */
  EditVirtualCashDrawer = 'EDIT_VIRTUAL_CASH_DRAWER',
  /** group_to_kitchen */
  GroupToKitchen = 'GROUP_TO_KITCHEN',
  /** infrequent_item */
  InfrequentItem = 'INFREQUENT_ITEM',
  /** instore_auto_accept_order */
  InstoreAutoAcceptOrder = 'INSTORE_AUTO_ACCEPT_ORDER',
  /** instore_auto_print_session_qr_code */
  InstoreAutoPrintSessionQrCode = 'INSTORE_AUTO_PRINT_SESSION_QR_CODE',
  /** issue_credit_note */
  IssueCreditNote = 'ISSUE_CREDIT_NOTE',
  /** manually_confirm_payment */
  ManuallyConfirmPayment = 'MANUALLY_CONFIRM_PAYMENT',
  /** meal_preparation_time */
  MealPreparationTime = 'MEAL_PREPARATION_TIME',
  /** modify_crm */
  ModifyCrm = 'MODIFY_CRM',
  /** modify_reservation */
  ModifyReservation = 'MODIFY_RESERVATION',
  /** modify_sold_out */
  ModifySoldOut = 'MODIFY_SOLD_OUT',
  /** moneybox */
  Moneybox = 'MONEYBOX',
  /** online_restaurant_delivery_order_operation */
  OnlineRestaurantDeliveryOrderOperation = 'ONLINE_RESTAURANT_DELIVERY_ORDER_OPERATION',
  /** online_restaurant_takeout_order_operation */
  OnlineRestaurantTakeoutOrderOperation = 'ONLINE_RESTAURANT_TAKEOUT_ORDER_OPERATION',
  /** open_group */
  OpenGroup = 'OPEN_GROUP',
  /** payment */
  Payment = 'PAYMENT',
  /** read_inventory */
  ReadInventory = 'READ_INVENTORY',
  /** reservation_order_enabled */
  ReservationOrderEnabled = 'RESERVATION_ORDER_ENABLED',
  /** reservation_order_type */
  ReservationOrderType = 'RESERVATION_ORDER_TYPE',
  /** restaurant_is_opening */
  RestaurantIsOpening = 'RESTAURANT_IS_OPENING',
  /** service_charge */
  ServiceCharge = 'SERVICE_CHARGE',
  /** toggle_tw_invoice */
  ToggleTwInvoice = 'TOGGLE_TW_INVOICE',
  /** use_price_tag */
  UsePriceTag = 'USE_PRICE_TAG',
  /** view_closing */
  ViewClosing = 'VIEW_CLOSING',
  /** write_inventory */
  WriteInventory = 'WRITE_INVENTORY'
}

export type PermissionLogReport = {
  __typename?: 'PermissionLogReport';
  crmLog?: Maybe<CrmPermissionLogType>;
  crmLogs?: Maybe<CrmPermissionLogTypeConnection>;
};


export type PermissionLogReportCrmLogArgs = {
  uuid: Scalars['UUID']['input'];
};


export type PermissionLogReportCrmLogsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  createdDateFrom: Scalars['Date']['input'];
  createdDateTo: Scalars['Date']['input'];
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  memberMobileContains?: InputMaybe<Scalars['String']['input']>;
  moduleNameIn: Array<InputMaybe<PermissionLogCrmModuleNameEnum>>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Scalars['String']['input']>;
};

export enum PlatformTypes {
  Foodpanda = 'FOODPANDA',
  Grabfood = 'GRABFOOD',
  Ichef = 'ICHEF',
  IchefInstore = 'ICHEF_INSTORE',
  Pos = 'POS',
  Preorder = 'PREORDER',
  Ubereats = 'UBEREATS'
}

export type PointEvent = {
  __typename?: 'PointEvent';
  actualDiscountValue?: Maybe<Scalars['String']['output']>;
  checkoutSource: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  eventUuid: Scalars['UUID']['output'];
  foodpandaAddedCount: Scalars['Int']['output'];
  foodpandaDeductedCount: Scalars['Int']['output'];
  foodpandaPointsAdded?: Maybe<Scalars['Int']['output']>;
  foodpandaPointsDeducted?: Maybe<Scalars['Int']['output']>;
  grabfoodAddedCount: Scalars['Int']['output'];
  grabfoodDeductedCount: Scalars['Int']['output'];
  grabfoodPointsAdded?: Maybe<Scalars['Int']['output']>;
  grabfoodPointsDeducted?: Maybe<Scalars['Int']['output']>;
  id: Scalars['ID']['output'];
  invoice?: Maybe<Invoice>;
  invoiceType?: Maybe<Scalars['String']['output']>;
  manualRedeemDiscountRate: Scalars['Float']['output'];
  manualRedeemDiscountValue: Scalars['Float']['output'];
  memberPoints: Scalars['Int']['output'];
  module?: Maybe<CheckoutModule>;
  moduleType: Scalars['String']['output'];
  nominalDiscountValue?: Maybe<Scalars['String']['output']>;
  onSiteAddedCount: Scalars['Int']['output'];
  onSiteDeductedCount: Scalars['Int']['output'];
  onSitePointsAdded?: Maybe<Scalars['Int']['output']>;
  onSitePointsDeducted?: Maybe<Scalars['Int']['output']>;
  onlineRestaurantAddedCount: Scalars['Int']['output'];
  onlineRestaurantDeductedCount: Scalars['Int']['output'];
  onlineRestaurantPointsAdded?: Maybe<Scalars['Int']['output']>;
  onlineRestaurantPointsDeducted?: Maybe<Scalars['Int']['output']>;
  operatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  orderOnInvoice: Scalars['Int']['output'];
  pointsAdded?: Maybe<Scalars['Int']['output']>;
  pointsDeducted?: Maybe<Scalars['Int']['output']>;
  restaurantId: Scalars['Int']['output'];
  ubereatsAddedCount: Scalars['Int']['output'];
  ubereatsDeductedCount: Scalars['Int']['output'];
  ubereatsPointsAdded?: Maybe<Scalars['Int']['output']>;
  ubereatsPointsDeducted?: Maybe<Scalars['Int']['output']>;
  updatedAt: Scalars['DateTime']['output'];
};

export type PointEventDisableInput = {
  /** invoice uuid to be revert */
  invoiceUuid: Scalars['UUID']['input'];
  /** define when the user perform this request. */
  issueDate?: InputMaybe<Scalars['DateTime']['input']>;
  /** CrmMember who have this PointEvent */
  memberUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type PointEventHistory = {
  __typename?: 'PointEventHistory';
  nodes?: Maybe<Array<Maybe<PointEventOutput>>>;
  pageInfo: PageInformation;
};

export type PointEventOutput = {
  __typename?: 'PointEventOutput';
  checkoutSource?: Maybe<CheckoutSource>;
  collect?: Maybe<Scalars['Int']['output']>;
  createdAt?: Maybe<Scalars['UTCDateTime']['output']>;
  delta: Scalars['Int']['output'];
  invoiceUuid?: Maybe<Scalars['UUID']['output']>;
  isHq?: Maybe<Scalars['Boolean']['output']>;
  redeem?: Maybe<Scalars['Int']['output']>;
  restaurantName?: Maybe<Scalars['String']['output']>;
  restaurantStoreId?: Maybe<Scalars['String']['output']>;
  restaurantUuid?: Maybe<Scalars['UUID']['output']>;
  sumToRecord: Scalars['Int']['output'];
  type?: Maybe<PointHistoryType>;
};

export type PointEventRefundInput = {
  /** invoice uuid to be revert */
  invoiceUuid: Scalars['UUID']['input'];
  /** define when the user perform this request. */
  issueDate?: InputMaybe<Scalars['DateTime']['input']>;
  /** CrmMember who have this PointEvent */
  memberUuid?: InputMaybe<Scalars['UUID']['input']>;
  /** iCHEFUser who run this operation */
  userUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type PointEventResetInput = {
  memberUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  /** True : reset points of all CrmMembers of this restaurant */
  resetWholeRestaurant?: InputMaybe<Scalars['Boolean']['input']>;
  /** iCHEFUser who run this operation */
  userUuid: Scalars['UUID']['input'];
};

export type PointEventStats = {
  __typename?: 'PointEventStats';
  actualDiscountValue?: Maybe<Scalars['String']['output']>;
  foodpandaPointsAdded?: Maybe<Scalars['String']['output']>;
  foodpandaPointsDeducted?: Maybe<Scalars['String']['output']>;
  grabfoodPointsAdded?: Maybe<Scalars['String']['output']>;
  grabfoodPointsDeducted?: Maybe<Scalars['String']['output']>;
  invoiceCount?: Maybe<Scalars['Int']['output']>;
  invoiceCustomerCount?: Maybe<Scalars['Int']['output']>;
  module?: Maybe<CheckoutModule>;
  nominalDiscountValue?: Maybe<Scalars['String']['output']>;
  onSitePointsAdded?: Maybe<Scalars['String']['output']>;
  onSitePointsDeducted?: Maybe<Scalars['String']['output']>;
  onlineRestaurantPointsAdded?: Maybe<Scalars['String']['output']>;
  onlineRestaurantPointsDeducted?: Maybe<Scalars['String']['output']>;
  pointsAdded?: Maybe<Scalars['Int']['output']>;
  pointsDeducted?: Maybe<Scalars['Int']['output']>;
  ubereatsPointsAdded?: Maybe<Scalars['String']['output']>;
  ubereatsPointsDeducted?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type PointEventStatsSummaryAvg = {
  __typename?: 'PointEventStatsSummaryAvg';
  actualDiscountValue?: Maybe<Scalars['String']['output']>;
  foodpandaPointsAdded?: Maybe<Scalars['String']['output']>;
  foodpandaPointsDeducted?: Maybe<Scalars['String']['output']>;
  grabfoodPointsAdded?: Maybe<Scalars['String']['output']>;
  grabfoodPointsDeducted?: Maybe<Scalars['String']['output']>;
  invoiceCount?: Maybe<Scalars['String']['output']>;
  invoiceCustomerCount?: Maybe<Scalars['String']['output']>;
  nominalDiscountValue?: Maybe<Scalars['String']['output']>;
  onSitePointsAdded?: Maybe<Scalars['String']['output']>;
  onSitePointsDeducted?: Maybe<Scalars['String']['output']>;
  onlineRestaurantPointsAdded?: Maybe<Scalars['String']['output']>;
  onlineRestaurantPointsDeducted?: Maybe<Scalars['String']['output']>;
  pointsAdded?: Maybe<Scalars['String']['output']>;
  pointsDeducted?: Maybe<Scalars['String']['output']>;
  ubereatsPointsAdded?: Maybe<Scalars['String']['output']>;
  ubereatsPointsDeducted?: Maybe<Scalars['String']['output']>;
};

export type PointEventStatsSummarySum = {
  __typename?: 'PointEventStatsSummarySum';
  actualDiscountValue?: Maybe<Scalars['String']['output']>;
  foodpandaPointsAdded?: Maybe<Scalars['String']['output']>;
  foodpandaPointsDeducted?: Maybe<Scalars['String']['output']>;
  grabfoodPointsAdded?: Maybe<Scalars['String']['output']>;
  grabfoodPointsDeducted?: Maybe<Scalars['String']['output']>;
  invoiceCount?: Maybe<Scalars['String']['output']>;
  invoiceCustomerCount?: Maybe<Scalars['String']['output']>;
  nominalDiscountValue?: Maybe<Scalars['String']['output']>;
  onSitePointsAdded?: Maybe<Scalars['String']['output']>;
  onSitePointsDeducted?: Maybe<Scalars['String']['output']>;
  onlineRestaurantPointsAdded?: Maybe<Scalars['String']['output']>;
  onlineRestaurantPointsDeducted?: Maybe<Scalars['String']['output']>;
  pointsAdded?: Maybe<Scalars['String']['output']>;
  pointsDeducted?: Maybe<Scalars['String']['output']>;
  ubereatsPointsAdded?: Maybe<Scalars['String']['output']>;
  ubereatsPointsDeducted?: Maybe<Scalars['String']['output']>;
};

export type PointEventSummaryAvg = {
  __typename?: 'PointEventSummaryAvg';
  actualDiscountValue?: Maybe<Scalars['String']['output']>;
  foodpandaPointsAdded?: Maybe<Scalars['Int']['output']>;
  foodpandaPointsDeducted?: Maybe<Scalars['Int']['output']>;
  grabfoodPointsAdded?: Maybe<Scalars['Int']['output']>;
  grabfoodPointsDeducted?: Maybe<Scalars['Int']['output']>;
  nominalDiscountValue?: Maybe<Scalars['String']['output']>;
  onSitePointsAdded?: Maybe<Scalars['String']['output']>;
  onSitePointsDeducted?: Maybe<Scalars['String']['output']>;
  onlineRestaurantPointsAdded?: Maybe<Scalars['String']['output']>;
  onlineRestaurantPointsDeducted?: Maybe<Scalars['String']['output']>;
  pointsAdded?: Maybe<Scalars['String']['output']>;
  pointsDeducted?: Maybe<Scalars['String']['output']>;
  ubereatsPointsAdded?: Maybe<Scalars['String']['output']>;
  ubereatsPointsDeducted?: Maybe<Scalars['String']['output']>;
};

export type PointEventSummarySum = {
  __typename?: 'PointEventSummarySum';
  actualDiscountValue?: Maybe<Scalars['String']['output']>;
  foodpandaPointsAdded?: Maybe<Scalars['Int']['output']>;
  foodpandaPointsDeducted?: Maybe<Scalars['Int']['output']>;
  grabfoodPointsAdded?: Maybe<Scalars['Int']['output']>;
  grabfoodPointsDeducted?: Maybe<Scalars['Int']['output']>;
  invoiceCount?: Maybe<Scalars['String']['output']>;
  invoiceCustomerCount?: Maybe<Scalars['String']['output']>;
  nominalDiscountValue?: Maybe<Scalars['String']['output']>;
  onSitePointsAdded?: Maybe<Scalars['String']['output']>;
  onSitePointsDeducted?: Maybe<Scalars['String']['output']>;
  onlineRestaurantPointsAdded?: Maybe<Scalars['String']['output']>;
  onlineRestaurantPointsDeducted?: Maybe<Scalars['String']['output']>;
  pointsAdded?: Maybe<Scalars['String']['output']>;
  pointsDeducted?: Maybe<Scalars['String']['output']>;
  ubereatsPointsAdded?: Maybe<Scalars['String']['output']>;
  ubereatsPointsDeducted?: Maybe<Scalars['String']['output']>;
};

export enum PointHistoryType {
  Checkout = 'checkout',
  ImportInit = 'import_init',
  Revert = 'revert'
}

export type PointTransactionOutput = {
  __typename?: 'PointTransactionOutput';
  cancelledAt?: Maybe<Scalars['DateTime']['output']>;
  collectedAt?: Maybe<Scalars['DateTime']['output']>;
  collectedMember?: Maybe<CrmMembersOutput>;
  invoiceUuid?: Maybe<Scalars['UUID']['output']>;
  link?: Maybe<Scalars['String']['output']>;
  pointsDelta?: Maybe<Scalars['Int']['output']>;
};

export enum PreorderAmountThresholdMode {
  ByEachHeadcount = 'BY_EACH_HEADCOUNT',
  ByTotalAmount = 'BY_TOTAL_AMOUNT',
  NotSet = 'NOT_SET'
}

export type PreorderAmountThresholdObjectType = {
  __typename?: 'PreorderAmountThresholdObjectType';
  amount?: Maybe<Scalars['Decimal']['output']>;
  headcountThreshold?: Maybe<Scalars['Int']['output']>;
};

export type PreorderComboMenuItemOutput = {
  __typename?: 'PreorderComboMenuItemOutput';
  name: Scalars['String']['output'];
  tags: Array<Maybe<Scalars['String']['output']>>;
};

export enum PreorderDisabledReason {
  AmountThreshold = 'AMOUNT_THRESHOLD',
  Ipf = 'IPF',
  Menu = 'MENU',
  Payment = 'PAYMENT',
  PaymentTiming = 'PAYMENT_TIMING'
}

export type PreorderInformationObjectType = {
  __typename?: 'PreorderInformationObjectType';
  amountThresholdMode?: Maybe<PreorderAmountThresholdMode>;
  amountThresholds?: Maybe<Array<Maybe<PreorderAmountThresholdObjectType>>>;
  /** Not allowed to change is_accept_preorder if disabled */
  disabledReasons?: Maybe<Array<Maybe<PreorderDisabledReason>>>;
  hasMenu?: Maybe<Scalars['Boolean']['output']>;
  /** Set by restaurant */
  isAcceptPreorder?: Maybe<Scalars['Boolean']['output']>;
  /** If cancel before this days, refund is allowed */
  refundEligibleDays?: Maybe<Scalars['Int']['output']>;
};

export type PreorderInformationPayload = {
  amountThresholdMode?: InputMaybe<PreorderAmountThresholdMode>;
  amountThresholds?: InputMaybe<Array<InputMaybe<AmountThresholdInput>>>;
  isAcceptPreorder?: InputMaybe<Scalars['Boolean']['input']>;
  refundEligibleDays?: InputMaybe<Scalars['Int']['input']>;
};

export type PreorderMenuItemByDiningTimeStartOutput = {
  __typename?: 'PreorderMenuItemByDiningTimeStartOutput';
  diningTimeStart: Scalars['DateTime']['output'];
  menuItems: Array<Maybe<PreorderMenuItemOutput>>;
};

export type PreorderMenuItemOutput = {
  __typename?: 'PreorderMenuItemOutput';
  comboMenuItems: Array<Maybe<PreorderComboMenuItemOutput>>;
  name: Scalars['String']['output'];
  quantity: Scalars['Int']['output'];
  reservations: Array<Maybe<ReservationOutput>>;
  tags: Array<Maybe<Scalars['String']['output']>>;
  type: IchefMenuItemTypes;
};

export type PreorderMenuItemReportOutput = {
  __typename?: 'PreorderMenuItemReportOutput';
  menuItemsByDiningTimeStart: Array<Maybe<PreorderMenuItemByDiningTimeStartOutput>>;
  menuItemsByItem: Array<Maybe<PreorderMenuItemOutput>>;
  summary: PreorderMenuItemReportSummaryOutput;
};

export type PreorderMenuItemReportPayload = {
  endTime: Scalars['DateTime']['input'];
  /** Empty string means no search keyword. */
  searchKeyword: Scalars['String']['input'];
  startTime: Scalars['DateTime']['input'];
};

export type PreorderMenuItemReportSummaryOutput = {
  __typename?: 'PreorderMenuItemReportSummaryOutput';
  totalHeadcount: Scalars['Int']['output'];
  totalMenuItemCount: Scalars['Int']['output'];
  totalReservationCount: Scalars['Int']['output'];
};

export type PreorderOrderDetailType = {
  __typename?: 'PreorderOrderDetailType';
  depositIchefOnlineOrder?: Maybe<IchefOnlineOrderType>;
  ichefOnlineOrder?: Maybe<IchefOnlineOrderType>;
  orderAmountSummary: AmountSummaryOutput;
  preorderStatus: PreorderStatus;
  refundEligibleTime: Scalars['DateTime']['output'];
  revenue: PreorderRevenueOutput;
};

export type PreorderRevenueChangeLogOutput = {
  __typename?: 'PreorderRevenueChangeLogOutput';
  createdAt: Scalars['DateTime']['output'];
  status: PreorderRevenueStatus;
};

export type PreorderRevenueInvoiceOutput = {
  __typename?: 'PreorderRevenueInvoiceOutput';
  invoiceNumber: Scalars['String']['output'];
  isCancelled: Scalars['Boolean']['output'];
};

export type PreorderRevenueOutput = {
  __typename?: 'PreorderRevenueOutput';
  changeLogs: Array<Maybe<PreorderRevenueChangeLogOutput>>;
  invoice?: Maybe<PreorderRevenueInvoiceOutput>;
  status: PreorderRevenueStatus;
};

export type PreorderRevenuePaymentOutput = {
  __typename?: 'PreorderRevenuePaymentOutput';
  cardType?: Maybe<Scalars['String']['output']>;
  creditCardLastFourDigit?: Maybe<Scalars['String']['output']>;
  moduleName: Scalars['String']['output'];
  moduleType: PaymentTypeGrapheneEnum;
};

export type PreorderRevenueReportOutput = {
  __typename?: 'PreorderRevenueReportOutput';
  revenues: Array<Maybe<PreorderRevenueReportRevenueOutput>>;
  summary: PreorderRevenueReportSummaryOutput;
};

export type PreorderRevenueReportPayload = {
  endTime: Scalars['DateTime']['input'];
  /** Empty list means all module. */
  paymentModules: Array<InputMaybe<PaymentTypeGrapheneEnum>>;
  /** Empty list means all status. */
  revenueStatuses: Array<InputMaybe<PreorderRevenueStatus>>;
  /** Empty string means no search keyword. */
  searchKeyword: Scalars['String']['input'];
  startTime: Scalars['DateTime']['input'];
};

export type PreorderRevenueReportRevenueOutput = {
  __typename?: 'PreorderRevenueReportRevenueOutput';
  amount: Scalars['Decimal']['output'];
  createdAt: Scalars['DateTime']['output'];
  invoice?: Maybe<PreorderRevenueInvoiceOutput>;
  payment: PreorderRevenuePaymentOutput;
  reservation: PreorderRevenueReservationOutput;
  status: PreorderRevenueStatus;
  updatedAt: Scalars['DateTime']['output'];
};

export type PreorderRevenueReportSummaryOutput = {
  __typename?: 'PreorderRevenueReportSummaryOutput';
  cancelledRecognizedRevenueAmount: Scalars['Decimal']['output'];
  nonInvoicedRefundAmount: Scalars['Decimal']['output'];
  prepaidRevenueAmount: Scalars['Decimal']['output'];
  recognizedRevenueAmount: Scalars['Decimal']['output'];
};

export type PreorderRevenueReservationOutput = {
  __typename?: 'PreorderRevenueReservationOutput';
  gender: GenderTypes;
  mobile: Scalars['String']['output'];
  name: Scalars['String']['output'];
  status: ReservationStatus;
  uuid: Scalars['UUID']['output'];
};

export enum PreorderRevenueStatus {
  CancelledRecognizedRevenue = 'CANCELLED_RECOGNIZED_REVENUE',
  NonInvoicedRefund = 'NON_INVOICED_REFUND',
  PrepaidRevenue = 'PREPAID_REVENUE',
  RecognizedRevenue = 'RECOGNIZED_REVENUE'
}

/**
 *
 *     預先點餐狀態，綜合考慮訂位以及付款狀態。
 *
 *     PAID: 付款成功
 *     REFUND: 付款成功，但退款
 *     FORFEIT: 付款成功，但訂位CANCEL或NO SHOW，且已超過refund_eligible_time
 *     PENDING: 除付款成功or退款之外的所有付款狀態，都顯示為未付款
 *
 */
export enum PreorderStatus {
  Forfeit = 'FORFEIT',
  Paid = 'PAID',
  Pending = 'PENDING',
  Refund = 'REFUND'
}

export type PrintRuleDoseNotExistError = {
  __typename?: 'PrintRuleDoseNotExistError';
  message?: Maybe<Scalars['String']['output']>;
};

export type ProductAnnouncementCenterQuery = {
  __typename?: 'ProductAnnouncementCenterQuery';
  /** Get graphic production announcement, max 5 items */
  graphicProductAnnouncements?: Maybe<Array<Maybe<GraphicProductAnnouncementObjectType>>>;
  /** Get text production announcements */
  textProductAnnouncements?: Maybe<Array<Maybe<TextProductAnnouncementObjectType>>>;
  /** Get today's revenue report */
  todayRevenueReport?: Maybe<RevenueReportObjectType>;
};


export type ProductAnnouncementCenterQueryGraphicProductAnnouncementsArgs = {
  publishedPlatform?: InputMaybe<PublishedPlatform>;
};


export type ProductAnnouncementCenterQueryTextProductAnnouncementsArgs = {
  publishedPlatform?: InputMaybe<PublishedPlatform>;
};

/** Status of the notification, it should be always PUBLISHED if env is prod. */
export enum ProductAnnouncementStatus {
  Deleted = 'DELETED',
  Draft = 'DRAFT',
  Offline = 'OFFLINE',
  Published = 'PUBLISHED',
  Scheduled = 'SCHEDULED'
}

export type ProductCategoryInput = {
  name: Scalars['String']['input'];
};

export type ProductCreateInput = {
  category: CategoryInput;
  description?: InputMaybe<Scalars['String']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  importPrice: Scalars['Decimal']['input'];
  itemInShop: ItemInShopInput;
  minOrderQuantity: Scalars['Int']['input'];
  name: Scalars['String']['input'];
  orderIncrementalQuantity: Scalars['Int']['input'];
  refrigeration: RefrigerationType;
  sku?: InputMaybe<Scalars['String']['input']>;
  stockQuantity?: InputMaybe<Scalars['Int']['input']>;
  stockThresholdQuantity?: InputMaybe<Scalars['Int']['input']>;
  supplier: SupplierInput;
  taxType: ProductTaxType;
  unitDescription: Scalars['String']['input'];
};

export type ProductFileUpload = {
  __typename?: 'ProductFileUpload';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export enum ProductStatusType {
  ForSell = 'FOR_SELL',
  NotYetForSell = 'NOT_YET_FOR_SELL'
}

export enum ProductTaxType {
  Tf = 'TF',
  Tx = 'TX',
  Tz = 'TZ'
}

export type ProductUpdateInput = {
  category: CategoryInput;
  description?: InputMaybe<Scalars['String']['input']>;
  disableStockSettings?: InputMaybe<Scalars['Boolean']['input']>;
  image?: InputMaybe<Scalars['String']['input']>;
  importPrice: Scalars['Decimal']['input'];
  itemInShop: ItemInShopInput;
  minOrderQuantity: Scalars['Int']['input'];
  name: Scalars['String']['input'];
  orderIncrementalQuantity: Scalars['Int']['input'];
  refrigeration: RefrigerationType;
  sku?: InputMaybe<Scalars['String']['input']>;
  stockQuantityDelta?: InputMaybe<Scalars['Int']['input']>;
  stockThresholdQuantity?: InputMaybe<Scalars['Int']['input']>;
  supplier: SupplierInput;
  taxType: ProductTaxType;
  unitDescription: Scalars['String']['input'];
};

export enum PublishedPlatform {
  Pos = 'POS',
  Web = 'WEB'
}

export type PxPayPlusOutput = {
  __typename?: 'PxPayPlusOutput';
  paymentUrl?: Maybe<Scalars['String']['output']>;
  returnCode?: Maybe<Scalars['String']['output']>;
};

export type PxPayPlusPaymentOutput = {
  __typename?: 'PxPayPlusPaymentOutput';
  merchantCode?: Maybe<Scalars['String']['output']>;
  merchantName?: Maybe<Scalars['String']['output']>;
  secretKey?: Maybe<Scalars['String']['output']>;
};

export type PxPayPlusSettingOutput = {
  __typename?: 'PxPayPlusSettingOutput';
  interfaceType?: Maybe<InterfaceType>;
  merchantCode?: Maybe<Scalars['String']['output']>;
  merchantName?: Maybe<Scalars['String']['output']>;
  status?: Maybe<PxPayPlusSettingsStatusEnum>;
};

export type PxPayPlusSettingsOutput = {
  __typename?: 'PxPayPlusSettingsOutput';
  offlinePayments?: Maybe<Array<Maybe<PxPayPlusSettingOutput>>>;
  onlinePayments?: Maybe<Array<Maybe<PxPayPlusSettingOutput>>>;
};

export enum PxPayPlusSettingsStatusEnum {
  Applying = 'APPLYING',
  Failed = 'FAILED',
  NeedDocuments = 'NEED_DOCUMENTS',
  NotApplied = 'NOT_APPLIED',
  Success = 'SUCCESS'
}

export enum QrCodeMaterialColorEnum {
  Blue = 'BLUE',
  Gray = 'GRAY',
  Green = 'GREEN',
  Red = 'RED',
  Yellow = 'YELLOW'
}

export enum QrCodeMaterialTypeEnum {
  Card = 'CARD',
  Poster = 'POSTER'
}

export type Query = {
  __typename?: 'Query';
  accountRecovery?: Maybe<AccountRecoveryQuery>;
  branchPurchasingShop?: Maybe<ShopQuery>;
  hq?: Maybe<BranchSideQuery>;
  /** Query of current restaurant */
  restaurant?: Maybe<QueryRestaurant>;
  /** information for current user */
  user?: Maybe<QueryUser>;
};


export type QueryBranchPurchasingShopArgs = {
  branchUuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type QueryHqArgs = {
  hqUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type QueryBranchPurchasing = {
  __typename?: 'QueryBranchPurchasing';
  branchUser?: Maybe<BranchUserType>;
  branches?: Maybe<BranchTypeConnection>;
  shops?: Maybe<ShopTypeConnection>;
};


export type QueryBranchPurchasingBranchesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type QueryBranchPurchasingShopsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

/** Query of current restaurant */
export type QueryRestaurant = {
  __typename?: 'QueryRestaurant';
  GSTInfo?: Maybe<GstInfoObject>;
  accountType?: Maybe<AccountTypeEnum>;
  activationStatus?: Maybe<ActivationStatusEnum>;
  allowIntegrations?: Maybe<RestaurantAllowIntegrationQuery>;
  allowedMixedTaxTypesInMenuItem?: Maybe<Scalars['Boolean']['output']>;
  branchPurchasing?: Maybe<BranchPurchasing>;
  brand?: Maybe<Brand>;
  cancellationAccountDate?: Maybe<Scalars['Date']['output']>;
  contract?: Maybe<ContractQuery>;
  crm?: Maybe<CrmQuery>;
  currentIchefAppVersion?: Maybe<Scalars['String']['output']>;
  customerNo?: Maybe<Scalars['String']['output']>;
  eachLimitUsage?: Maybe<EachLimitUsageQuery>;
  foodpandaInvoiceIssuePolicy?: Maybe<FoodpandaInvoiceIssuePolicy>;
  gatekeeper?: Maybe<GatekeeperOutput>;
  headquarter?: Maybe<Headquarter>;
  headquarterSellerId?: Maybe<Scalars['EmptyAsNoneString']['output']>;
  headquarterSellerName?: Maybe<Scalars['EmptyAsNoneString']['output']>;
  hqBranchesReachVersionFlag?: Maybe<HqBranchesReachVersionFlagOutput>;
  hqInfo?: Maybe<HqInfo>;
  iPF?: Maybe<IPfAddOnModuleQuery>;
  isGSTEnabled?: Maybe<Scalars['Boolean']['output']>;
  isHeadquarter?: Maybe<Scalars['Boolean']['output']>;
  isMemberSharingEnabled?: Maybe<Scalars['Boolean']['output']>;
  isTaiwanInvoice?: Maybe<Scalars['DBIntToAPIBoolean']['output']>;
  logs?: Maybe<LogsQuery>;
  multiplePlatformDiscountEnabled?: Maybe<Scalars['Boolean']['output']>;
  multiplePlatformItemDiscountEnabled?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  napoleon?: Maybe<NapoleonQuery>;
  onlineOrdering?: Maybe<OnlineOrderQuery>;
  opaqueStorage?: Maybe<OpaqueStorageQuery>;
  paymentGateways?: Maybe<PaymentGatewaysQuery>;
  productAnnouncementCenter?: Maybe<ProductAnnouncementCenterQuery>;
  region?: Maybe<Scalars['String']['output']>;
  regionTaxTypes?: Maybe<Array<Maybe<TaxTypeRateType>>>;
  reports?: Maybe<ReportsQuery>;
  reservation?: Maybe<ReservationQuery>;
  resourceProcessingStatus?: Maybe<ResourceProcessingStatusQuery>;
  sellerAddress?: Maybe<Scalars['EmptyAsNoneString']['output']>;
  sellerId?: Maybe<Scalars['EmptyAsNoneString']['output']>;
  sellerName?: Maybe<Scalars['EmptyAsNoneString']['output']>;
  serviceCharge?: Maybe<ServiceChargeObject>;
  servicePolicy?: Maybe<ServicePolicyQuery>;
  /** Settings of current restaurant */
  settings?: Maybe<SettingsQuery>;
  storeId?: Maybe<Scalars['String']['output']>;
  taxInfo?: Maybe<TaxInfoObjectType>;
  taxRate?: Maybe<Scalars['String']['output']>;
  taxType?: Maybe<Scalars['String']['output']>;
  termsOfService?: Maybe<TermsOfServiceQuery>;
  twInvoice?: Maybe<TwInvoiceQuery>;
  twInvoiceContactEmails?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  twInvoiceEnableAdvanced?: Maybe<Scalars['Boolean']['output']>;
  twInvoiceIsDefaultOn?: Maybe<Scalars['Boolean']['output']>;
  twInvoiceIsOptional?: Maybe<Scalars['Boolean']['output']>;
  ubereatsInvoiceIssuePolicy?: Maybe<UbereatsInvoiceIssuePolicy>;
  uuid?: Maybe<Scalars['String']['output']>;
  versionFlags?: Maybe<FeatureVersionFlagOutput>;
  webUserPreferences?: Maybe<WebUserPreferencesOutput>;
};


/** Query of current restaurant */
export type QueryRestaurantOpaqueStorageArgs = {
  opaqueStorageType?: InputMaybe<OpaqueStorageEnum>;
};

export type QueryUser = {
  __typename?: 'QueryUser';
  account?: Maybe<Scalars['String']['output']>;
  allowIntegrations?: Maybe<UserAllowIntegrationQuery>;
  branchPurchasing?: Maybe<QueryBranchPurchasing>;
  emailForPasswordReset?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['String']['output']>;
};

export type RawLogReportObject = {
  __typename?: 'RawLogReportObject';
  amountDifference?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  averagePrice?: Maybe<Scalars['String']['output']>;
  categoryName?: Maybe<Scalars['String']['output']>;
  categoryUuid?: Maybe<Scalars['String']['output']>;
  cgIdentity?: Maybe<Scalars['String']['output']>;
  cgNumber?: Maybe<Scalars['Int']['output']>;
  cgType?: Maybe<InventoryEventCgTypeEnum>;
  cgUuid?: Maybe<Scalars['UUID']['output']>;
  consumptionAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  consumptionQuantity?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  countingAmount?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  countingDifference?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  countingQuantity?: Maybe<Scalars['String']['output']>;
  eventDatetime?: Maybe<Scalars['UTCDateTime']['output']>;
  eventGeneratedBy?: Maybe<InventoryEventGeneratedByEnum>;
  eventType?: Maybe<InventoryEventTypeEnum>;
  eventUuid?: Maybe<Scalars['UUID']['output']>;
  inStockAmount?: Maybe<Scalars['String']['output']>;
  inStockQuantity?: Maybe<Scalars['String']['output']>;
  itemName?: Maybe<Scalars['String']['output']>;
  itemUnit?: Maybe<Scalars['String']['output']>;
  itemUuid?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  purchaseAmount?: Maybe<Scalars['String']['output']>;
  purchasePrice?: Maybe<Scalars['String']['output']>;
  purchaseQuantity?: Maybe<Scalars['String']['output']>;
  quantityDifference?: Maybe<Scalars['AddPositiveSignDecimalStr']['output']>;
  returnAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  returnPrice?: Maybe<Scalars['String']['output']>;
  returnQuantity?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  scrappedAmount?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  scrappedQuantity?: Maybe<Scalars['AbsoluteValueDecimalStr']['output']>;
  usageAmount?: Maybe<Scalars['ReverseNumberSignDecimalStr']['output']>;
  usageQuantity?: Maybe<Scalars['ReverseNumberSignDecimalStr']['output']>;
  userName?: Maybe<Scalars['String']['output']>;
};

export enum RawLogReportObjectEnumType {
  Amountdifference = 'AMOUNTDIFFERENCE',
  AveragePrice = 'AVERAGE_PRICE',
  CategoryName = 'CATEGORY_NAME',
  CategoryUuid = 'CATEGORY_UUID',
  CgIdentity = 'CG_IDENTITY',
  CgNumber = 'CG_NUMBER',
  CgType = 'CG_TYPE',
  CgUuid = 'CG_UUID',
  ConsumptionAmount = 'CONSUMPTION_AMOUNT',
  ConsumptionQuantity = 'CONSUMPTION_QUANTITY',
  CountingAmount = 'COUNTING_AMOUNT',
  CountingDifference = 'COUNTING_DIFFERENCE',
  CountingQuantity = 'COUNTING_QUANTITY',
  EventDatetime = 'EVENT_DATETIME',
  EventGeneratedBy = 'EVENT_GENERATED_BY',
  EventType = 'EVENT_TYPE',
  EventUuid = 'EVENT_UUID',
  InStockAmount = 'IN_STOCK_AMOUNT',
  InStockQuantity = 'IN_STOCK_QUANTITY',
  Itemunit = 'ITEMUNIT',
  ItemName = 'ITEM_NAME',
  ItemUuid = 'ITEM_UUID',
  Note = 'NOTE',
  PurchaseAmount = 'PURCHASE_AMOUNT',
  PurchasePrice = 'PURCHASE_PRICE',
  PurchaseQuantity = 'PURCHASE_QUANTITY',
  Quantitydifference = 'QUANTITYDIFFERENCE',
  ReturnAmount = 'RETURN_AMOUNT',
  ReturnPrice = 'RETURN_PRICE',
  ReturnQuantity = 'RETURN_QUANTITY',
  ScrappedAmount = 'SCRAPPED_AMOUNT',
  ScrappedQuantity = 'SCRAPPED_QUANTITY',
  UsageAmount = 'USAGE_AMOUNT',
  UsageQuantity = 'USAGE_QUANTITY',
  UserName = 'USER_NAME'
}

export enum ReasonKeyEnum {
  CancelledByCustomer = 'CANCELLED_BY_CUSTOMER',
  CancelledCannotCompleteCustomerNote = 'CANCELLED_CANNOT_COMPLETE_CUSTOMER_NOTE',
  CancelledCouponUnavailable = 'CANCELLED_COUPON_UNAVAILABLE',
  CancelledCustomerCallToCancel = 'CANCELLED_CUSTOMER_CALL_TO_CANCEL',
  CancelledFraudPrank = 'CANCELLED_FRAUD_PRANK',
  CancelledInstoreLastOrderingTimeLimitsReached = 'CANCELLED_INSTORE_LAST_ORDERING_TIME_LIMITS_REACHED',
  CancelledInstoreMealTimeLimitsReached = 'CANCELLED_INSTORE_MEAL_TIME_LIMITS_REACHED',
  CancelledItemsSoldOut = 'CANCELLED_ITEMS_SOLD_OUT',
  CancelledKitchenClosed = 'CANCELLED_KITCHEN_CLOSED',
  CancelledMinimumOfVolumeNotReached = 'CANCELLED_MINIMUM_OF_VOLUME_NOT_REACHED',
  CancelledOtherReason = 'CANCELLED_OTHER_REASON',
  CancelledPointsNotEnough = 'CANCELLED_POINTS_NOT_ENOUGH',
  CancelledRestaurantTooBusy = 'CANCELLED_RESTAURANT_TOO_BUSY',
  ConfirmPaymentFailCauseIchefOnlineOrderCanNotBeingProduced = 'CONFIRM_PAYMENT_FAIL_CAUSE_ICHEF_ONLINE_ORDER_CAN_NOT_BEING_PRODUCED',
  DeniedContainerChargeMappingError = 'DENIED_CONTAINER_CHARGE_MAPPING_ERROR',
  DeniedDeliveryFeeModuleMappingError = 'DENIED_DELIVERY_FEE_MODULE_MAPPING_ERROR',
  DeniedInvalidTaxId = 'DENIED_INVALID_TAX_ID',
  DeniedMappingError = 'DENIED_MAPPING_ERROR',
  DeniedOrderOverdue = 'DENIED_ORDER_OVERDUE',
  DeniedPaymentModuleMappingError = 'DENIED_PAYMENT_MODULE_MAPPING_ERROR'
}

export type ReceiptsOutput = {
  __typename?: 'ReceiptsOutput';
  firstInvoiceNo?: Maybe<Scalars['String']['output']>;
  invoiceAlpha?: Maybe<Scalars['String']['output']>;
  invoiceMonthType?: Maybe<Scalars['String']['output']>;
  invoiceYear?: Maybe<Scalars['String']['output']>;
  lastInvoiceNo?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export enum RecommendationModeEnum {
  Auto = 'AUTO',
  Disabled = 'DISABLED'
}

export type RecycleInvoiceInventoryOutPut = {
  __typename?: 'RecycleInvoiceInventoryOutPut';
  invoiceNumberRange?: Maybe<Scalars['String']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type ReferBusinessInformationObjectType = {
  __typename?: 'ReferBusinessInformationObjectType';
  contactNumber?: Maybe<Scalars['String']['output']>;
  openingHoursPeriods?: Maybe<ReservationWeekdayTimePeriodObjectType>;
  referencePlatform?: Maybe<BusinessInformationReferencePlatform>;
  storeAddress?: Maybe<Scalars['String']['output']>;
  storeName?: Maybe<Scalars['String']['output']>;
};

export enum RefrigerationType {
  Frozen = 'FROZEN',
  NormalTemperature = 'NORMAL_TEMPERATURE',
  Refrigerator = 'REFRIGERATOR'
}

export type RegionDetail = {
  __typename?: 'RegionDetail';
  cancelledReason?: Maybe<Scalars['String']['output']>;
  customerAddress?: Maybe<Scalars['String']['output']>;
  customerName?: Maybe<Scalars['String']['output']>;
  saleAmountTaxable?: Maybe<Scalars['String']['output']>;
  taxAmount?: Maybe<Scalars['String']['output']>;
  taxRate?: Maybe<Scalars['Float']['output']>;
};

export type ReorderInventoryInput = {
  items?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type ReorderMenuCategoriesMutations = {
  __typename?: 'ReorderMenuCategoriesMutations';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ReorderProduct = {
  __typename?: 'ReorderProduct';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type ReorderProductCategory = {
  __typename?: 'ReorderProductCategory';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type ReorderProductUnderCategory = {
  orderedProductUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  productCategoryUuid: Scalars['UUID']['input'];
};

export type ReorderReservationTableGroupAndEntityMutation = {
  __typename?: 'ReorderReservationTableGroupAndEntityMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ReorderReservationTableGroupAndEntityPayload = {
  reservationTableEntityUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  reservationTableGroupUuid: Scalars['UUID']['input'];
};

export type ReorderSupplier = {
  __typename?: 'ReorderSupplier';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type ReportBaseQueryFilters = {
  date?: InputMaybe<DatetimeRangeFilterType>;
  hour?: InputMaybe<HourRangeFilterType>;
};

export type ReportQueryFilters = {
  date?: InputMaybe<DatetimeRangeFilterType>;
};

export type ReportQueryPayload = {
  branches?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  compareDateTimeRanges?: InputMaybe<Array<InputMaybe<DateTimePayload>>>;
  endDate: Scalars['Date']['input'];
  endTime: Scalars['Time']['input'];
  startDate: Scalars['Date']['input'];
  startTime: Scalars['Time']['input'];
  timeRangeType: ReportTimeRangeTypes;
  timeRangeValue: Scalars['Int']['input'];
};

export enum ReportTimeRangeTypes {
  Day = 'DAY',
  Hour = 'HOUR',
  Month = 'MONTH'
}

export type ReportsQuery = {
  __typename?: 'ReportsQuery';
  accountReport?: Maybe<AccountReportQuery>;
  checkoutModuleReport?: Maybe<CheckoutModuleReport>;
  customerBehaviorReport?: Maybe<CustomerBehaviorQuery>;
  discountReport?: Maybe<DiscountReportQuery>;
  headquarterCheckoutModuleReport?: Maybe<CheckoutModuleReport>;
  hqReport?: Maybe<HqReportQuery>;
  inventoryLogReport?: Maybe<InventoryLogsReport>;
  invoiceReport?: Maybe<InvoiceReportQuery>;
  paymentReport?: Maybe<PaymentReportQuery>;
  permissionLogReport?: Maybe<PermissionLogReport>;
  reservationReport?: Maybe<ReservationReportQuery>;
  wifiAnalyseReport?: Maybe<WifiAnalyseReportQuery>;
};


export type ReportsQueryCheckoutModuleReportArgs = {
  reportFilter?: InputMaybe<InvoiceSelectQueryObject>;
};


export type ReportsQueryDiscountReportArgs = {
  payload?: InputMaybe<DiscountReportQueryPayload>;
};


export type ReportsQueryHeadquarterCheckoutModuleReportArgs = {
  branchRestaurantUuid: Scalars['UUID']['input'];
  reportFilter?: InputMaybe<InvoiceSelectQueryObject>;
};

export enum RequestStatusTypes {
  Failed = 'FAILED',
  Pending = 'PENDING',
  Success = 'SUCCESS',
  WaitingCustomer = 'WAITING_CUSTOMER'
}

export enum RequestTypes {
  Cancel = 'CANCEL',
  Check = 'CHECK',
  Confirm = 'CONFIRM',
  Create = 'CREATE',
  Refund = 'REFUND',
  RequestTransaction = 'REQUEST_TRANSACTION'
}

export enum RequiredFieldsCheckPoint {
  CommitCustomerGroup = 'COMMIT_CUSTOMER_GROUP',
  CreateCustomerGroup = 'CREATE_CUSTOMER_GROUP'
}

export type ResendEReceiptMailUnionType = InvoiceHaveNotUploadedError | OkOutput | OrderNotUsingEReceiptError;

export type ReservationBlocklistObjectType = {
  __typename?: 'ReservationBlocklistObjectType';
  createdAt: Scalars['DateTime']['output'];
  mobile: Scalars['String']['output'];
  mobileRegion: Scalars['String']['output'];
};

export type ReservationBlocklistPayload = {
  mobile: Scalars['String']['input'];
  mobileRegion: Scalars['String']['input'];
};

export enum ReservationBlocklistSearchMode {
  Exact = 'EXACT',
  Partial = 'PARTIAL'
}

export type ReservationChangeLogOutput = {
  __typename?: 'ReservationChangeLogOutput';
  changedBy: ReservationChangedBy;
  createdAt: Scalars['String']['output'];
  displayName: Scalars['String']['output'];
  status: ReservationChangeLogStatus;
  userUuid: Scalars['UUID']['output'];
};

export enum ReservationChangeLogStatus {
  Canceled = 'CANCELED',
  Confirmed = 'CONFIRMED',
  Created = 'CREATED',
  Edited = 'EDITED',
  Failed = 'FAILED',
  Notified = 'NOTIFIED',
  NoShow = 'NO_SHOW',
  Seated = 'SEATED',
  WaitingPreorderPayment = 'WAITING_PREORDER_PAYMENT'
}

export enum ReservationChangedBy {
  Customer = 'CUSTOMER',
  Restaurant = 'RESTAURANT',
  System = 'SYSTEM'
}

export type ReservationHeadcountObjectType = {
  __typename?: 'ReservationHeadcountObjectType';
  max?: Maybe<Scalars['Int']['output']>;
  min?: Maybe<Scalars['Int']['output']>;
};

export type ReservationHoursPeriodObjectType = {
  __typename?: 'ReservationHoursPeriodObjectType';
  end?: Maybe<Scalars['String']['output']>;
  mealTimeLimit?: Maybe<Scalars['Int']['output']>;
  start?: Maybe<Scalars['String']['output']>;
};

export type ReservationInformationObjectType = {
  __typename?: 'ReservationInformationObjectType';
  /** Consider both iPF module_status and is_accept_online_reservation */
  canCreateOnlineReservation?: Maybe<Scalars['Boolean']['output']>;
  /** Consider is_accept_online_reservation */
  canUpdateOnlineReservation?: Maybe<Scalars['Boolean']['output']>;
  contactNumber: Scalars['String']['output'];
  coverPictureS3Filenames?: Maybe<Array<Scalars['String']['output']>>;
  customerCommentHint: Scalars['String']['output'];
  customerCommentSettingMode?: Maybe<CustomerCommentSettingMode>;
  gmbBinding?: Maybe<GmbBindingObjectType>;
  /** SPEC: 99 is the max headcount for reservation */
  headcount?: Maybe<ReservationHeadcountObjectType>;
  /** Set by restaurant */
  isAcceptOnlineReservation?: Maybe<Scalars['Boolean']['output']>;
  isActivatedByPos?: Maybe<Scalars['Boolean']['output']>;
  isAllowCurrentDayReservation: Scalars['Boolean']['output'];
  maxAllowReservationDate?: Maybe<Scalars['Date']['output']>;
  maxAllowReservationDays: Scalars['Int']['output'];
  mealTimeLimit?: Maybe<Scalars['Int']['output']>;
  mealTimeLimits?: Maybe<Array<Maybe<MealTimeLimitObjectType>>>;
  minAllowReservationDays: Scalars['Int']['output'];
  minAllowReservationMinutes: Scalars['Int']['output'];
  openingHoursPeriods?: Maybe<ReservationWeekdayTimePeriodObjectType>;
  /** Nano ID used in unique store URL */
  publicId: Scalars['String']['output'];
  reminder: Scalars['String']['output'];
  reminderDefaultExpanded: Scalars['Boolean']['output'];
  reservationHoursPeriods?: Maybe<WeekdayReservationPeriodObjectType>;
  reservationTimeInterval?: Maybe<Scalars['Int']['output']>;
  reservationUrl?: Maybe<Scalars['String']['output']>;
  resultPageReminder: Scalars['String']['output'];
  resultPageReminderLinkText: Scalars['String']['output'];
  resultPageReminderLinkUrl: Scalars['String']['output'];
  resultPageShowReminderLink: Scalars['Boolean']['output'];
  seatReservationTime?: Maybe<Scalars['Int']['output']>;
  showPublicWebsite: Scalars['Boolean']['output'];
  storeAddress: Scalars['String']['output'];
  storeName: Scalars['String']['output'];
};

export type ReservationMutation = {
  __typename?: 'ReservationMutation';
  batchUpdateReservations?: Maybe<BatchUpdateReservations>;
  cancelReservation?: Maybe<CancelReservation>;
  confirmReservation?: Maybe<ConfirmReservation>;
  createReservation?: Maybe<CreateReservation>;
  currentPosData?: Maybe<CurrentPosDataMutation>;
  noShowReservation?: Maybe<NoShowReservation>;
  seatReservation?: Maybe<SeatReservation>;
  updateReservation?: Maybe<UpdateReservation>;
};


export type ReservationMutationBatchUpdateReservationsArgs = {
  payload: BatchUpdateReservationsInput;
  uuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};


export type ReservationMutationCancelReservationArgs = {
  userUuid?: InputMaybe<Scalars['UUID']['input']>;
  uuid: Scalars['UUID']['input'];
};


export type ReservationMutationConfirmReservationArgs = {
  userUuid?: InputMaybe<Scalars['UUID']['input']>;
  uuid: Scalars['UUID']['input'];
};


export type ReservationMutationCreateReservationArgs = {
  ignoreValidation?: InputMaybe<Scalars['Boolean']['input']>;
  payload: CreateOrUpdateReservationInput;
};


export type ReservationMutationNoShowReservationArgs = {
  userUuid?: InputMaybe<Scalars['UUID']['input']>;
  uuid: Scalars['UUID']['input'];
};


export type ReservationMutationSeatReservationArgs = {
  userUuid?: InputMaybe<Scalars['UUID']['input']>;
  uuid: Scalars['UUID']['input'];
};


export type ReservationMutationUpdateReservationArgs = {
  ignoreValidation?: InputMaybe<Scalars['Boolean']['input']>;
  payload: CreateOrUpdateReservationInput;
  uuid: Scalars['UUID']['input'];
};

export type ReservationNode = Node & {
  __typename?: 'ReservationNode';
  adultCount: Scalars['Int']['output'];
  changeLogs: Array<Maybe<ReservationChangeLogOutput>>;
  customerComment: Scalars['String']['output'];
  diningTimeEnd: Scalars['DateTime']['output'];
  diningTimeStart: Scalars['DateTime']['output'];
  email: Scalars['String']['output'];
  gender: GenderTypes;
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  isEnoughCapacity: Scalars['Boolean']['output'];
  isInBlocklist?: Maybe<Scalars['Boolean']['output']>;
  isLate: Scalars['Boolean']['output'];
  isTableEntitiesConflicted: Scalars['Boolean']['output'];
  isTimeConflict: Scalars['Boolean']['output'];
  kidChairCount: Scalars['Int']['output'];
  kidCount: Scalars['Int']['output'];
  mobile: Scalars['String']['output'];
  mobileRegion: Scalars['String']['output'];
  name: Scalars['String']['output'];
  note: Scalars['String']['output'];
  preorder?: Maybe<PreorderOrderDetailType>;
  seatReservationTime?: Maybe<Scalars['Int']['output']>;
  seatedAt?: Maybe<Scalars['DateTime']['output']>;
  source: ReservationSource;
  status: ReservationStatus;
  tableEntityUuids: Array<Scalars['UUID']['output']>;
  uuid: Scalars['UUID']['output'];
  willBeMarkedNoShowAt: Scalars['DateTime']['output'];
};

export type ReservationNodeConnection = {
  __typename?: 'ReservationNodeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<ReservationNodeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `ReservationNode` and its cursor. */
export type ReservationNodeEdge = {
  __typename?: 'ReservationNodeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<ReservationNode>;
};

export enum ReservationOrderIntervalMinutesEnum {
  Fifteen = 'FIFTEEN',
  FortyFive = 'FORTY_FIVE',
  Sixty = 'SIXTY',
  Thirty = 'THIRTY'
}

export enum ReservationOrderTypeEnum {
  AllTimeAvailable = 'ALL_TIME_AVAILABLE',
  NotAvailable = 'NOT_AVAILABLE',
  OpeningTimeOnly = 'OPENING_TIME_ONLY'
}

export type ReservationOutput = {
  __typename?: 'ReservationOutput';
  comment: Scalars['String']['output'];
  createdAt: Scalars['DateTime']['output'];
  diningTimeStart: Scalars['DateTime']['output'];
  gender: GenderTypes;
  mobile: Scalars['String']['output'];
  name: Scalars['String']['output'];
  quantity: Scalars['Int']['output'];
  uuid: Scalars['UUID']['output'];
};

export type ReservationPeriodInput = {
  end: Scalars['String']['input'];
  reservationTimeInterval: Scalars['Int']['input'];
  start: Scalars['String']['input'];
};

export type ReservationPeriodObjectType = {
  __typename?: 'ReservationPeriodObjectType';
  end?: Maybe<Scalars['String']['output']>;
  reservationTimeInterval?: Maybe<Scalars['Int']['output']>;
  start?: Maybe<Scalars['String']['output']>;
};

export type ReservationQuery = {
  __typename?: 'ReservationQuery';
  availableTables?: Maybe<Array<Maybe<AvailableTableType>>>;
  needForfeitReservations?: Maybe<ReservationNodeConnection>;
  /** Considering reservation hours periods, special closing days and special opening days */
  reservationHoursPeriods?: Maybe<Array<Maybe<ReservationHoursPeriodObjectType>>>;
  reservationRates?: Maybe<Array<Maybe<ReservationRateType>>>;
  reservations?: Maybe<ReservationNodeConnection>;
};


export type ReservationQueryAvailableTablesArgs = {
  date: Scalars['Date']['input'];
  excludeReservationUuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type ReservationQueryNeedForfeitReservationsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  diningTimeStartFrom?: InputMaybe<Scalars['DateTime']['input']>;
  diningTimeStartTo?: InputMaybe<Scalars['DateTime']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  searchText?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type ReservationQueryReservationHoursPeriodsArgs = {
  date: Scalars['Date']['input'];
};


export type ReservationQueryReservationRatesArgs = {
  endDate: Scalars['Date']['input'];
  startDate: Scalars['Date']['input'];
};


export type ReservationQueryReservationsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  diningTimeStartFrom?: InputMaybe<Scalars['DateTime']['input']>;
  diningTimeStartTo?: InputMaybe<Scalars['DateTime']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  searchText?: InputMaybe<Scalars['String']['input']>;
  status?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type ReservationRateType = {
  __typename?: 'ReservationRateType';
  date?: Maybe<Scalars['Date']['output']>;
  rate?: Maybe<Scalars['Decimal']['output']>;
};

export type ReservationReportQuery = {
  __typename?: 'ReservationReportQuery';
  preorderMenuItemReport?: Maybe<PreorderMenuItemReportOutput>;
  preorderRevenueReport?: Maybe<PreorderRevenueReportOutput>;
};


export type ReservationReportQueryPreorderMenuItemReportArgs = {
  payload: PreorderMenuItemReportPayload;
};


export type ReservationReportQueryPreorderRevenueReportArgs = {
  payload: PreorderRevenueReportPayload;
};

export type ReservationSettingsMutation = {
  __typename?: 'ReservationSettingsMutation';
  batchUpdateReservationTableEntities?: Maybe<BatchUpdateReservationTableEntities>;
  createBlocklist?: Maybe<CreateReservationBlocklistUnionType>;
  createPreorderInformation?: Maybe<CreatePreorderInformationUnionType>;
  createReservationInformation?: Maybe<CreateReservationInformationMutation>;
  createReservationTableGroup?: Maybe<CreateReservationTableGroupUnionType>;
  createSpecialReservationDay?: Maybe<CreateSpecialReservationDayUnionType>;
  deleteBlocklist?: Maybe<DeleteReservationBlocklistUnionType>;
  deleteReservationTableGroup?: Maybe<DeleteReservationTableGroupUnionType>;
  deleteSpecialReservationDay?: Maybe<DeleteSpecialReservationDayUnionType>;
  reorderReservationTableGroupAndEntity?: Maybe<ReorderReservationTableGroupAndEntityMutation>;
  updateAllowReservationInterval?: Maybe<UpdateAllowReservationIntervalMutation>;
  updateBusinessInformation?: Maybe<UpdateBusinessInformationMutation>;
  updateCustomerComment?: Maybe<UpdateCustomerCommentMutation>;
  updateGmbBindingSetting?: Maybe<UpdateGmbBindingSettingUnionType>;
  updatePreorderInformation?: Maybe<UpdatePreorderInformationUnionType>;
  updateReservationRule?: Maybe<UpdateReservationRuleMutation>;
  updateReservationStatus?: Maybe<UpdateReservationStatusMutation>;
  updateReservationTableGroup?: Maybe<UpdateReservationTableGroupUnionType>;
  updateSpecialReservationDay?: Maybe<UpdateSpecialReservationDayUnionType>;
  validateBusinessInformation?: Maybe<ValidateBusinessInformationMutation>;
};


export type ReservationSettingsMutationBatchUpdateReservationTableEntitiesArgs = {
  payload: UpdateReservationTableEntityPayload;
  reservationTableEntityUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};


export type ReservationSettingsMutationCreateBlocklistArgs = {
  payload: ReservationBlocklistPayload;
};


export type ReservationSettingsMutationCreateReservationInformationArgs = {
  payload: CreateReservationInformationPayload;
};


export type ReservationSettingsMutationCreateReservationTableGroupArgs = {
  payload: CreateReservationTableGroupPayload;
};


export type ReservationSettingsMutationCreateSpecialReservationDayArgs = {
  payload: SpecialReservationDayPayload;
};


export type ReservationSettingsMutationDeleteBlocklistArgs = {
  payload: ReservationBlocklistPayload;
};


export type ReservationSettingsMutationDeleteReservationTableGroupArgs = {
  uuid: Scalars['UUID']['input'];
};


export type ReservationSettingsMutationDeleteSpecialReservationDayArgs = {
  uuid: Scalars['UUID']['input'];
};


export type ReservationSettingsMutationReorderReservationTableGroupAndEntityArgs = {
  payload: Array<InputMaybe<ReorderReservationTableGroupAndEntityPayload>>;
};


export type ReservationSettingsMutationUpdateAllowReservationIntervalArgs = {
  payload: UpdateAllowReservationIntervalPayload;
};


export type ReservationSettingsMutationUpdateBusinessInformationArgs = {
  payload: UpdateBusinessInformationPayload;
};


export type ReservationSettingsMutationUpdateCustomerCommentArgs = {
  payload: UpdateCustomerCommentPayload;
};


export type ReservationSettingsMutationUpdateGmbBindingSettingArgs = {
  isReserveWithGoogleOn: Scalars['Boolean']['input'];
  isUrlLinkedToGmb: Scalars['Boolean']['input'];
};


export type ReservationSettingsMutationUpdatePreorderInformationArgs = {
  payload: PreorderInformationPayload;
};


export type ReservationSettingsMutationUpdateReservationRuleArgs = {
  payload: UpdateReservationRulePayload;
};


export type ReservationSettingsMutationUpdateReservationStatusArgs = {
  payload: UpdateReservationStatusPayload;
};


export type ReservationSettingsMutationUpdateReservationTableGroupArgs = {
  payload: UpdateReservationTableGroupPayload;
  uuid: Scalars['UUID']['input'];
};


export type ReservationSettingsMutationUpdateSpecialReservationDayArgs = {
  payload: SpecialReservationDayPayload;
  uuid: Scalars['UUID']['input'];
};


export type ReservationSettingsMutationValidateBusinessInformationArgs = {
  payload: ValidateBusinessInformationPayload;
};

export type ReservationSettingsQuery = {
  __typename?: 'ReservationSettingsQuery';
  blocklists: Array<Maybe<ReservationBlocklistObjectType>>;
  hasTimeConflictDates?: Maybe<Array<Maybe<Scalars['Date']['output']>>>;
  preorderInformation?: Maybe<PreorderInformationObjectType>;
  referBusinessInformation?: Maybe<ReferBusinessInformationObjectType>;
  reservationInformation?: Maybe<ReservationInformationObjectType>;
  reservationTableGroups?: Maybe<Array<Maybe<ReservationTableGroupObjectType>>>;
  specialClosingDays?: Maybe<Array<Maybe<SpecialClosingDayObjectType>>>;
  specialOpeningDays?: Maybe<Array<Maybe<SpecialOpeningDayObjectType>>>;
  specialReservationDays?: Maybe<Array<Maybe<SpecialReservationDayObjectType>>>;
};


export type ReservationSettingsQueryBlocklistsArgs = {
  searchMobile?: InputMaybe<SearchMobilePayload>;
};


export type ReservationSettingsQueryReservationTableGroupsArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type ReservationSettingsQuerySpecialClosingDaysArgs = {
  includingPastDays?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ReservationSettingsQuerySpecialOpeningDaysArgs = {
  includingPastDays?: InputMaybe<Scalars['Boolean']['input']>;
};


export type ReservationSettingsQuerySpecialReservationDaysArgs = {
  includingPastDays?: InputMaybe<Scalars['Boolean']['input']>;
};

export enum ReservationSource {
  Google = 'GOOGLE',
  OnlineStore = 'ONLINE_STORE',
  Restaurant = 'RESTAURANT'
}

/**
 *
 *     Incomplete status: WAITING_PREORDER_PAYMENT, FAILED
 *     Possible situation for WAITING_PREORDER_PAYMENT:
 *         1. Waiting payment during preorder
 *     Possible situation for FAILED:
 *         1. Payment failed during preorder
 *         2. Cancel payment during preorder
 *
 */
export enum ReservationStatus {
  Canceled = 'CANCELED',
  Confirmed = 'CONFIRMED',
  Created = 'CREATED',
  Failed = 'FAILED',
  Notified = 'NOTIFIED',
  NoShow = 'NO_SHOW',
  Seated = 'SEATED',
  WaitingPreorderPayment = 'WAITING_PREORDER_PAYMENT'
}

export type ReservationTableEntityObjectType = {
  __typename?: 'ReservationTableEntityObjectType';
  floorName?: Maybe<Scalars['String']['output']>;
  isAllowCombination: Scalars['Boolean']['output'];
  isAllowPublicReservation: Scalars['Boolean']['output'];
  maximumReservationSeat?: Maybe<Scalars['Int']['output']>;
  minimumReservationSeat: Scalars['Int']['output'];
  tableName?: Maybe<Scalars['String']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type ReservationTableGroupObjectType = {
  __typename?: 'ReservationTableGroupObjectType';
  isDefault: Scalars['Boolean']['output'];
  isWithReservationSeatSetting: Scalars['Boolean']['output'];
  maximumReservationSeat: Scalars['Int']['output'];
  minimumReservationSeat: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  reservationTableEntities?: Maybe<Array<Maybe<ReservationTableEntityObjectType>>>;
  uuid: Scalars['UUID']['output'];
};

export type ReservationWeekdayTimePeriodObjectType = {
  __typename?: 'ReservationWeekdayTimePeriodObjectType';
  friday?: Maybe<Array<Maybe<OpeningPeriodObjectType>>>;
  monday?: Maybe<Array<Maybe<OpeningPeriodObjectType>>>;
  saturday?: Maybe<Array<Maybe<OpeningPeriodObjectType>>>;
  sunday?: Maybe<Array<Maybe<OpeningPeriodObjectType>>>;
  thursday?: Maybe<Array<Maybe<OpeningPeriodObjectType>>>;
  tuesday?: Maybe<Array<Maybe<OpeningPeriodObjectType>>>;
  wednesday?: Maybe<Array<Maybe<OpeningPeriodObjectType>>>;
};

export type ResetBranchUserPasswordInput = {
  confirmPassword: Scalars['String']['input'];
  mobile: Scalars['String']['input'];
  password: Scalars['String']['input'];
  verificationCode: Scalars['String']['input'];
};

export type ResetPasswordOutput = {
  __typename?: 'ResetPasswordOutput';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type ResetPasswordPayload = {
  oneTimeCode: Scalars['String']['input'];
  password: Scalars['String']['input'];
};

export type ResourceProcessingStatusQuery = {
  __typename?: 'ResourceProcessingStatusQuery';
  resourceStatus?: Maybe<Array<Maybe<ResourceStatus>>>;
};


export type ResourceProcessingStatusQueryResourceStatusArgs = {
  queries?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};

export type ResourceStatus = {
  __typename?: 'ResourceStatus';
  completedAt: Scalars['Float']['output'];
  logs?: Maybe<Scalars['String']['output']>;
  saveAt: Scalars['Float']['output'];
  uploadTaskUuid: Scalars['UUID']['output'];
};

export type RestaurantAllowIntegrationQuery = {
  __typename?: 'RestaurantAllowIntegrationQuery';
  allowSurveySparrow?: Maybe<Scalars['Boolean']['output']>;
};

export enum RestaurantAppEnv {
  /** test */
  A_0 = 'A_0',
  /** rc */
  A_1 = 'A_1',
  /** pilot */
  A_2 = 'A_2',
  /** alpha */
  A_3 = 'A_3',
  /** beta */
  A_4 = 'A_4',
  /** pre_beta */
  A_5 = 'A_5'
}

export enum RestaurantCategories {
  American = 'AMERICAN',
  Bakery = 'BAKERY',
  Brunch = 'BRUNCH',
  Chinese = 'CHINESE',
  Coffee = 'COFFEE',
  Dessert = 'DESSERT',
  Drink = 'DRINK',
  European = 'EUROPEAN',
  ExoticCuisine = 'EXOTIC_CUISINE',
  FastFood = 'FAST_FOOD',
  French = 'FRENCH',
  Healthy = 'HEALTHY',
  HongKong = 'HONG_KONG',
  HotPot = 'HOT_POT',
  Indian = 'INDIAN',
  Italian = 'ITALIAN',
  Japan = 'JAPAN',
  Korean = 'KOREAN',
  MiddleEastern = 'MIDDLE_EASTERN',
  Others = 'OTHERS',
  Singapore = 'SINGAPORE',
  Taiwan = 'TAIWAN',
  Thai = 'THAI',
  Unknown = 'UNKNOWN',
  Vegetarian = 'VEGETARIAN',
  Vietnamese = 'VIETNAMESE'
}

export type RestaurantDeliveryFeeSettingInput = {
  deliveryDescription?: InputMaybe<Scalars['String']['input']>;
  rules?: InputMaybe<Array<InputMaybe<DeliveryRuleInput>>>;
};

export type RestaurantInfoInSalesDetailReport = {
  __typename?: 'RestaurantInfoInSalesDetailReport';
  isHq?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  storeId?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type RestaurantPolicyMutation = {
  __typename?: 'RestaurantPolicyMutation';
  createRestaurantPolicy?: Maybe<CreateRestaurantPolicy>;
  updateRestaurantPolicy?: Maybe<UpdateRestaurantPolicy>;
};


export type RestaurantPolicyMutationCreateRestaurantPolicyArgs = {
  payload: CreateOrUpdateRestaurantPolicyInput;
};


export type RestaurantPolicyMutationUpdateRestaurantPolicyArgs = {
  payload: CreateOrUpdateRestaurantPolicyInput;
};

export type RestaurantPolicyObjectType = {
  __typename?: 'RestaurantPolicyObjectType';
  policyContent?: Maybe<Scalars['String']['output']>;
  policyUrl?: Maybe<Scalars['String']['output']>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
};

export type RestaurantPolicyOutput = NoRestaurantPolicyError | RestaurantPolicyObjectType | UnhandledError;

export type RestaurantPolicyQuery = {
  __typename?: 'RestaurantPolicyQuery';
  privacyPolicy?: Maybe<RestaurantPolicyOutput>;
};

export enum RestaurantPriceRange {
  Between_200_500 = 'BETWEEN_200_500',
  Between_500_1000 = 'BETWEEN_500_1000',
  Over_1000 = 'OVER_1000',
  Under_200 = 'UNDER_200'
}

export enum RestaurantSanitation {
  BodyTemperature = 'BODY_TEMPERATURE',
  DisinfectedPackage = 'DISINFECTED_PACKAGE',
  Disinfection = 'DISINFECTION',
  Gloves = 'GLOVES',
  Mask = 'MASK'
}

export type RestaurantSettingSnapshotOutput = {
  __typename?: 'RestaurantSettingSnapshotOutput';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  id: Scalars['ID']['output'];
  isServiceChargeOpen: Scalars['Boolean']['output'];
  isTwInvoiceEnabled: Scalars['Boolean']['output'];
  restaurant: RestaurantType;
  restaurantTaxRate: Scalars['Float']['output'];
  serviceChargeDisplayName: RestaurantSettingSnapshotServiceChargeDisplayName;
  serviceChargeIndoorRate: Scalars['Float']['output'];
  serviceChargePercentage?: Maybe<Scalars['Int']['output']>;
  settingFileVersion: Scalars['String']['output'];
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  /** Used as an unique ID of the record.Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export enum RestaurantSettingSnapshotServiceChargeDisplayName {
  /** Cleaning Fee */
  CleaningFee = 'CLEANING_FEE',
  /** Service Charge */
  ServiceCharge = 'SERVICE_CHARGE',
  /** Venue Fee */
  VenueFee = 'VENUE_FEE'
}

export type RestaurantType = {
  __typename?: 'RestaurantType';
  address?: Maybe<Scalars['String']['output']>;
  allowedMixedTaxTypesInMenuItem: Scalars['Boolean']['output'];
  appEnv?: Maybe<RestaurantAppEnv>;
  appId: Scalars['String']['output'];
  branchPurchasingBranches: BranchTypeConnection;
  branchPurchasingOrderSuppliers: Array<OrderSupplierType>;
  branchPurchasingProductCategories: CategoryTypeConnection;
  branchPurchasingProductItems: ItemInShopAndCartTypeConnection;
  branchPurchasingShops: ShopTypeConnection;
  branchPurchasingSuppliers: SupplierForBranchTypeConnection;
  capacity?: Maybe<Scalars['Int']['output']>;
  comboitemcategorySet: Array<ComboItemCategoryType>;
  combomenuitemSet: Array<ComboMenuItemType>;
  currentConfiguration?: Maybe<Scalars['String']['output']>;
  currentIchefAppCountryCode?: Maybe<Scalars['String']['output']>;
  currentIchefAppId?: Maybe<Scalars['String']['output']>;
  currentIchefAppLangCode?: Maybe<Scalars['String']['output']>;
  currentIchefAppVersion?: Maybe<Scalars['String']['output']>;
  currentInternationalInvoiceNo?: Maybe<Scalars['Int']['output']>;
  currentInvoiceUpdateTimestamp?: Maybe<Scalars['DateTime']['output']>;
  currentIosVersion?: Maybe<Scalars['String']['output']>;
  customerBuffer?: Maybe<Scalars['Int']['output']>;
  customerNo: Scalars['String']['output'];
  customergroupconfigSet: Array<CustomerGroupConfigOutput>;
  customergroupconfigcustomizedfieldSet: Array<CustomerGroupConfigCustomizedFieldOutput>;
  customergroupsourcetypeSet: Array<CustomerGroupSourceTypeOutput>;
  deviceLicense: Scalars['Int']['output'];
  discountSet: Array<DiscountOutput>;
  facebookLoyaltyProgram?: Maybe<UnverifiedRecordsOutput>;
  fax?: Maybe<Scalars['String']['output']>;
  foodpandaMenuCategories: Array<FoodpandaMenuCategoryOutput>;
  foodpandaMenuItems: Array<FoodpandaMenuItemOutput>;
  foodpandaMenus: Array<FoodpandaMenuOutput>;
  foodpandaModifierGroups: Array<FoodpandaModifierGroupOutput>;
  foodpandaTagControl: Array<FoodpandaTagControlType>;
  grabfoodMenuCategories: Array<GrabfoodMenuCategoryOutput>;
  grabfoodMenuItems: Array<GrabfoodMenuItemOutput>;
  grabfoodMenus: Array<GrabfoodMenuOutput>;
  grabfoodModifierGroups: Array<GrabfoodModifierGroupOutput>;
  grabfoodTagControl: Array<GrabfoodTagControlType>;
  gstInfo?: Maybe<GstInfoObject>;
  headquarter?: Maybe<HeadQuarterType>;
  headquarterCode: Scalars['String']['output'];
  headquarterSellerId?: Maybe<Scalars['EmptyAsNoneString']['output']>;
  headquarterSellerName?: Maybe<Scalars['EmptyAsNoneString']['output']>;
  hq?: Maybe<HqType>;
  ichefauthcategorySet: Array<AuthCategoryDjangoObjectType>;
  instoreOrderingMenuCategories: Array<OnlineOrderingMenuCategoryOutput>;
  instoreOrderingMenuCategoriesSnapshot: Array<OnlineOrderingMenuCategoriesSnapshotOutput>;
  instoreOrderingMenuItems: Array<OnlineOrderingMenuItemOutput>;
  instoreOrderingMenuItemsSnapshot: Array<OnlineOrderingMenuItemSnapshotOutput>;
  instoreOrderingModifierGroups: Array<OnlineOrderingModifierGroupOutput>;
  instoreOrderingModifierGroupsSnapshot: Array<OnlineOrderingModifierGroupSnapshotOutput>;
  inventorycategorySet: Array<InventoryCategoryOutput>;
  inventoryitemSet: Array<InventoryItemOutput>;
  invitingRelationshipsWithHq: Array<InvitingHqBranchOutput>;
  isOnline: Scalars['Boolean']['output'];
  isServiceCharge?: Maybe<Scalars['Int']['output']>;
  isTaiwanInvoice?: Maybe<Scalars['Int']['output']>;
  itemtagrelationshipSet: Array<ItemTagRelationshipType>;
  lat?: Maybe<Scalars['Float']['output']>;
  logo?: Maybe<Scalars['String']['output']>;
  lon?: Maybe<Scalars['Float']['output']>;
  menuitemSet: Array<MenuItemType>;
  menuitemcategorySet: Array<MenuItemCategoryType>;
  menuiteminventoryconsumptionSet: Array<MenuItemInventoryConsumptionType>;
  menuitemtagSet: Array<MenuItemTagType>;
  menuitemtaginventoryconsumptionSet: Array<MenuItemTagInventoryConsumptionType>;
  multiplePlatformDiscountEnabled?: Maybe<Scalars['Boolean']['output']>;
  multiplePlatformItemDiscountEnabled?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  onlineRestaurantMenuCategories: Array<OnlineRestaurantMenuCategoryOutput>;
  onlineRestaurantMenuCategorySnapshot: Array<OnlineRestaurantMenuCategoriesSnapshotOutput>;
  onlineRestaurantMenuItemSnapshot: Array<OnlineRestaurantMenuItemSnapshotOutput>;
  onlineRestaurantMenuItems: Array<OnlineRestaurantMenuItemOutput>;
  onlineRestaurantModifierGroupSnapshot: Array<OnlineRestaurantModifierGroupSnapshotOutput>;
  onlineRestaurantModifierGroups: Array<OnlineRestaurantModifierGroupOutput>;
  onlineRestaurantTagControl: Array<TagControlType>;
  orders: Array<OrderInDeliveryGroupType>;
  originalitempictureSet: Array<OriginalItemPictureOutput>;
  paymentSet: Array<LegacyPaymentOutput>;
  permissionlogSet: CrmPermissionLogTypeConnection;
  phone?: Maybe<Scalars['String']['output']>;
  publicId: Scalars['String']['output'];
  region: Scalars['String']['output'];
  relationshipsWithHq: Array<HqBranchOutput>;
  reservationtableentitySet: Array<ReservationTableEntityObjectType>;
  reservationtablegroupSet: Array<ReservationTableGroupObjectType>;
  restaurantSettingSnapshots: Array<RestaurantSettingSnapshotOutput>;
  sellerAddress?: Maybe<Scalars['String']['output']>;
  sellerId?: Maybe<Scalars['EmptyAsNoneString']['output']>;
  sellerName?: Maybe<Scalars['EmptyAsNoneString']['output']>;
  serviceChargeRate?: Maybe<Scalars['Float']['output']>;
  servicecharge?: Maybe<ServiceChargeObject>;
  status: Scalars['String']['output'];
  storeId: Scalars['String']['output'];
  taxRate?: Maybe<Scalars['String']['output']>;
  taxType: Scalars['String']['output'];
  timeZone: Scalars['String']['output'];
  twInvoiceContactEmails?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  twInvoiceEnableAdvanced: Scalars['Boolean']['output'];
  twInvoiceIsDefaultOn: Scalars['Boolean']['output'];
  twInvoiceIsOptional: Scalars['Boolean']['output'];
  ubereatsMenuCategories: Array<UbereatsMenuCategoriesOutput>;
  ubereatsMenuItem: Array<UbereatsMenuItemOutput>;
  ubereatsMenus: Array<UbereatsMenusOutput>;
  ubereatsModifierGroups: Array<UbereatsModifierGroupOutput>;
  ubereatsV2MenuCategories: Array<UbereatsV2MenuCategoryOutput>;
  ubereatsV2MenuItems: Array<UbereatsV2MenuItemOutput>;
  ubereatsV2Menus: Array<UbereatsV2MenuOutput>;
  ubereatsV2ModifierGroups: Array<UbereatsV2ModifierGroupOutput>;
  uuid: Scalars['String']['output'];
};


export type RestaurantTypeBranchPurchasingBranchesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type RestaurantTypeBranchPurchasingProductCategoriesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type RestaurantTypeBranchPurchasingProductItemsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type RestaurantTypeBranchPurchasingShopsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type RestaurantTypeBranchPurchasingSuppliersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type RestaurantTypePermissionlogSetArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  memberMobileContains?: InputMaybe<Scalars['String']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderBy?: InputMaybe<Scalars['String']['input']>;
};

export type RevenueOutput = {
  __typename?: 'RevenueOutput';
  isExceedLimit?: Maybe<Scalars['Boolean']['output']>;
  isExceedWarningLimit?: Maybe<Scalars['Boolean']['output']>;
  isReachLimit?: Maybe<Scalars['Boolean']['output']>;
  month?: Maybe<Scalars['Int']['output']>;
  updatedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  usagePercentage?: Maybe<Scalars['Int']['output']>;
  year?: Maybe<Scalars['Int']['output']>;
};

export type RevenueReportObjectType = {
  __typename?: 'RevenueReportObjectType';
  /** Paid sales amount of today. The data is same as business_situation api. */
  paidSalesAmount?: Maybe<Scalars['Decimal']['output']>;
  /** Unpaid sales amount of today. POS will calculate and update to firebase. */
  unpaidSalesAmount?: Maybe<Scalars['Decimal']['output']>;
};

export type RootItemsInput = {
  itemComment?: InputMaybe<Scalars['String']['input']>;
  quantity?: InputMaybe<Scalars['Int']['input']>;
  /** 數據追蹤用，null means not from any recommendation section */
  recommendationFrom?: InputMaybe<MenuItemRecommendationSection>;
  selectedModifierGroups?: InputMaybe<Array<InputMaybe<SelectedModifierGroupsInput>>>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type SgeReceipt = {
  __typename?: 'SGEReceipt';
  gstRegisterAddress?: Maybe<Scalars['String']['output']>;
  gstRegisterCompanyName?: Maybe<Scalars['String']['output']>;
  gstRegisterNumber?: Maybe<Scalars['String']['output']>;
  gstRegisterPhone?: Maybe<Scalars['String']['output']>;
  issuedAt?: Maybe<Scalars['DateTime']['output']>;
  receiptOrInvoiceNumber?: Maybe<Scalars['String']['output']>;
};

export type SafetyResetMutation = {
  __typename?: 'SafetyResetMutation';
  recycleInvoiceInventory?: Maybe<Array<Maybe<RecycleInvoiceInventoryOutPut>>>;
  writeOffDevice?: Maybe<WriteOffDeviceOutput>;
};


export type SafetyResetMutationRecycleInvoiceInventoryArgs = {
  invoiceInventoryUuidList?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


export type SafetyResetMutationWriteOffDeviceArgs = {
  deviceAppId?: InputMaybe<Scalars['String']['input']>;
};

export type SalesDataObject = {
  __typename?: 'SalesDataObject';
  avgOrderPrice?: Maybe<Scalars['String']['output']>;
  summaryAmount?: Maybe<Scalars['String']['output']>;
  summaryAmountDeltaRatio?: Maybe<Scalars['String']['output']>;
  summaryAmountPercentage?: Maybe<Scalars['String']['output']>;
  summaryInvoiceCount?: Maybe<Scalars['Int']['output']>;
};

export type SearchMobilePayload = {
  mobile: Scalars['String']['input'];
  mobileRegion?: InputMaybe<Scalars['String']['input']>;
  /** Search mode for reservation blocklists, need to include country code for EXACT search */
  searchMode?: InputMaybe<ReservationBlocklistSearchMode>;
};

export type SeatReservation = {
  __typename?: 'SeatReservation';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

/**
 * so we could using filter values are Enum, e.g.
 * (queryFilter: {eventGeneratedBy: {values: [TAKEOUT, DINEIN]}})
 */
export type SelectCgTypeEnumFilterQueryType = {
  /** enum value */
  type?: InputMaybe<Scalars['String']['input']>;
  values?: InputMaybe<Array<InputMaybe<InventoryEventCgTypeEnum>>>;
};

export type SelectFloatFilterQueryType = {
  /** Don't modify if you're not using customized filter */
  type?: InputMaybe<Scalars['String']['input']>;
  /** number list to query */
  values: Array<InputMaybe<Scalars['Float']['input']>>;
};

/**
 * so we could using filter values are Enum, e.g.
 * (queryFilter: {eventGeneratedBy: {values: [CLIENT_CG_AUTO, CLIENT_IPAD_MANUALLY]}})
 */
export type SelectGeneratedByEnumFilterQueryType = {
  /** enum value */
  type?: InputMaybe<Scalars['String']['input']>;
  values?: InputMaybe<Array<InputMaybe<InventoryEventGeneratedByEnum>>>;
};

export type SelectStringFilterQueryType = {
  /** Don't modify if you're not using customized filter */
  type?: InputMaybe<Scalars['String']['input']>;
  /** text list to query */
  values?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type SelectedMenuItemOutput = {
  __typename?: 'SelectedMenuItemOutput';
  comment?: Maybe<Scalars['String']['output']>;
  createdAt?: Maybe<Scalars['DateTime']['output']>;
  diner?: Maybe<CartDinerOutput>;
  hashedValue?: Maybe<Scalars['String']['output']>;
  menuNodeSnapshot?: Maybe<MenuNodeSnapshotOutput>;
  quantity?: Maybe<Scalars['Int']['output']>;
  /** 數據追蹤用，null means not from any recommendation section */
  recommendationFrom?: Maybe<MenuItemRecommendationSection>;
  selectedModifierGroups?: Maybe<Array<Maybe<SelectedModifierGroupOutput>>>;
  unitAmount?: Maybe<Scalars['Decimal']['output']>;
  unitAmountSummary?: Maybe<AmountSummaryOutput>;
  updatedAt?: Maybe<Scalars['DateTime']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type SelectedModifierGroupOutput = {
  __typename?: 'SelectedModifierGroupOutput';
  menuNodeSnapshot?: Maybe<MenuNodeSnapshotOutput>;
  selectedModifierOptions?: Maybe<Array<Maybe<SelectedModifierOptionOutput>>>;
};

export type SelectedModifierGroupsInput = {
  selectedModifierOptions?: InputMaybe<Array<InputMaybe<SelectedModifierOptionsInput>>>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type SelectedModifierOptionOutput = {
  __typename?: 'SelectedModifierOptionOutput';
  menuNodeSnapshot?: Maybe<MenuNodeSnapshotOutput>;
  selectedModifierGroups?: Maybe<Array<Maybe<SelectedModifierGroupOutput>>>;
};

export type SelectedModifierOptionsInput = {
  selectedModifierGroups?: InputMaybe<Array<InputMaybe<SelectedModifierGroupsInput>>>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type SendResetPasswordEmailMutation = {
  __typename?: 'SendResetPasswordEmailMutation';
  sendToEmail?: Maybe<Scalars['String']['output']>;
};

export type ServiceChargeObject = {
  __typename?: 'ServiceChargeObject';
  indoorRate: Scalars['Float']['output'];
  isOpen: Scalars['Boolean']['output'];
  takeoutRate: Scalars['Float']['output'];
  type: ServiceChargeType;
  uuid: Scalars['String']['output'];
};

export enum ServiceChargeType {
  /** AFTER_DISCOUNT */
  AfterDiscount = 'AFTER_DISCOUNT',
  /** BEFORE_DISCOUNT */
  BeforeDiscount = 'BEFORE_DISCOUNT'
}

export type ServicePolicyMutation = {
  __typename?: 'ServicePolicyMutation';
  signServicePolicy?: Maybe<SignServicePolicyOutput>;
};


export type ServicePolicyMutationSignServicePolicyArgs = {
  input?: InputMaybe<SignServicePolicyInput>;
};

export type ServicePolicyQuery = {
  __typename?: 'ServicePolicyQuery';
  getAllUserSignStatus?: Maybe<Array<Maybe<UserSignStatusOutput>>>;
};


export type ServicePolicyQueryGetAllUserSignStatusArgs = {
  servicePolicyVersion?: InputMaybe<Scalars['String']['input']>;
};

export enum ServiceType {
  Indoor = 'INDOOR',
  Takeout = 'TAKEOUT'
}

export enum ServiceTypes {
  Delivery = 'DELIVERY',
  DineIn = 'DINE_IN',
  TakeOut = 'TAKE_OUT',
  Unknown = 'UNKNOWN',
  WaitingInLine = 'WAITING_IN_LINE'
}

export type SessionGroupOrderOutput = {
  __typename?: 'SessionGroupOrderOutput';
  /** Group order doesn't support order again in 2022Q4 */
  canOrderAgain?: Maybe<Scalars['Boolean']['output']>;
  cancelledOrder?: Maybe<OnlineRestaurantCancelledGroupOrderType>;
  cgNumber?: Maybe<Scalars['Int']['output']>;
  eater?: Maybe<OnlineRestaurantEaterOutput>;
  instoreOrderingSession?: Maybe<InstoreOrderingSessionOutput>;
  isLegacyGroupOrder?: Maybe<Scalars['Boolean']['output']>;
  onlineStoreOrders?: Maybe<Array<Maybe<OrderOutput>>>;
  orderSchemaType?: Maybe<OrderSchemaType>;
  orderSnapshot?: Maybe<OrderSnapshotOutput>;
  orderStatus?: Maybe<State>;
  orderedAt?: Maybe<Scalars['Float']['output']>;
  oriTotalAmount?: Maybe<Scalars['Decimal']['output']>;
  payment?: Maybe<OnlineRestaurantGroupOrderPaymentType>;
  restaurantUuid: Scalars['UUID']['output'];
  serviceFee?: Maybe<Scalars['Decimal']['output']>;
  serviceType?: Maybe<Type>;
  totalAmount?: Maybe<Scalars['Decimal']['output']>;
  totalTax?: Maybe<Scalars['Decimal']['output']>;
  uuid: Scalars['UUID']['output'];
};

/** Due to Graphene circular import issue, here it's re-craved for session usage. */
export type SessionIchefOnlineOrderOutput = {
  __typename?: 'SessionICHEFOnlineOrderOutput';
  uuid: Scalars['UUID']['output'];
};

export type SessionOnlineStoreOrderOutput = {
  __typename?: 'SessionOnlineStoreOrderOutput';
  cancelledOrder?: Maybe<OnlineRestaurantCancelledOrderType>;
  orderSnapshot?: Maybe<OrderSnapshotOutput>;
  orderStatus?: Maybe<State>;
  orderedAt?: Maybe<Scalars['Float']['output']>;
  payment?: Maybe<OnlineRestaurantOnlineOrderPaymentType>;
  traceUuid: Scalars['UUID']['output'];
  uuid: Scalars['UUID']['output'];
};

export type SetDeliveryFeeRulesMutation = {
  __typename?: 'SetDeliveryFeeRulesMutation';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type SetFoodieSettingPayload = {
  enabled: Scalars['Boolean']['input'];
  instoreOrderFoodieRequired?: InputMaybe<Scalars['Boolean']['input']>;
  takeoutAndDeliveryOrderFoodieRequired?: InputMaybe<Scalars['Boolean']['input']>;
};

export type SetFoodpandaHiddenTagsAndGroupsMutation = {
  __typename?: 'SetFoodpandaHiddenTagsAndGroupsMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type SetFoodpandaIntegrationInput = {
  /** Default to null if it's not given. If it's null, `None` value will be saved in FoodpandaIntegration.container_menu_item_uuid. */
  containerMenuItemUuid?: InputMaybe<Scalars['String']['input']>;
  paymentModuleUuid: Scalars['String']['input'];
};

export type SetGmbUrlLinkWithPublicWebsiteDisableError = {
  __typename?: 'SetGmbUrlLinkWithPublicWebsiteDisableError';
  message?: Maybe<Scalars['String']['output']>;
};

export type SetGrabfoodHiddenTagsAndGroupsMutation = {
  __typename?: 'SetGrabfoodHiddenTagsAndGroupsMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type SetGrabfoodIntegrationInput = {
  grabfoodMerchantId: Scalars['String']['input'];
  paymentModuleUuid: Scalars['String']['input'];
};

export type SetOnlineOrderingHiddenTagsAndGroupsMutation = {
  __typename?: 'SetOnlineOrderingHiddenTagsAndGroupsMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type SetOnlineRestaurantHiddenTagsAndTagGroupsMutation = {
  __typename?: 'SetOnlineRestaurantHiddenTagsAndTagGroupsMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type SetOnlineStoreFoodieSettingMutation = {
  __typename?: 'SetOnlineStoreFoodieSettingMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type SetOnlineStoreThemeSettingOutput = NonePayloadErrorOutput | OkOutput;

export type SetOnlineStoreThemeSettingPayload = {
  layoutName?: InputMaybe<OnlineStoreLayout>;
  themeName?: InputMaybe<OnlineStoreTheme>;
};

export type SetUbereatsIntegrationInput = {
  paymentModuleUuid: Scalars['String']['input'];
  version?: InputMaybe<UbereatsSetupMenuVersionTypes>;
};

export type SetUbereatsV2HiddenTagsAndGroupsMutation = {
  __typename?: 'SetUbereatsV2HiddenTagsAndGroupsMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

/** Settings changes of current restaurant */
export type SettingsMutation = {
  __typename?: 'SettingsMutation';
  audience?: Maybe<AudienceMutation>;
  customerGroupConfig?: Maybe<CustomerGroupConfigMutation>;
  discount?: Maybe<DiscountMutation>;
  facebookIntegration?: Maybe<FacebookIntegrationMutation>;
  googleMyBusiness?: Maybe<GmbMutation>;
  inventory?: Maybe<InventoryMutation>;
  /** Menu related GraphQL mutation endpoints */
  menu?: Maybe<MenuMutation>;
  onlineOrderingIntegration?: Maybe<OnlineOrderingIntegrationMutation>;
  payment?: Maybe<PaymentMutation>;
  reservation?: Maybe<ReservationSettingsMutation>;
  restaurantPolicy?: Maybe<RestaurantPolicyMutation>;
  safetyReset?: Maybe<SafetyResetMutation>;
  wifiConfig?: Maybe<WifiConfigMutation>;
};

/** Settings of current restaurant */
export type SettingsQuery = {
  __typename?: 'SettingsQuery';
  audience?: Maybe<AudienceQuery>;
  customerGroupConfig?: Maybe<CustomerGroupConfigQuery>;
  discount?: Maybe<DiscountQuery>;
  facebookIntegration?: Maybe<FacebookIntegrationQuery>;
  googleMyBusiness?: Maybe<GmbQuery>;
  inventory?: Maybe<InventoryQuery>;
  invoiceInventory?: Maybe<InvoiceInventoryQuery>;
  /** Menu related GraphQL endpoints */
  menu?: Maybe<MenuQuery>;
  onlineOrderingIntegration?: Maybe<OnlineOrderingIntegrationQuery>;
  payment?: Maybe<PaymentQuery>;
  reservation?: Maybe<ReservationSettingsQuery>;
  restaurantPolicy?: Maybe<RestaurantPolicyQuery>;
  tableFloors?: Maybe<Array<Maybe<TableFloorType>>>;
  wifiConfig?: Maybe<WifiConfigQuery>;
};

export type SetupLoyaltyProgramInput = {
  collectDescription?: InputMaybe<Scalars['String']['input']>;
  fansPageId?: InputMaybe<Scalars['String']['input']>;
  fansPageName?: InputMaybe<Scalars['String']['input']>;
  fansPagePictureUrl?: InputMaybe<Scalars['String']['input']>;
  fbUserId?: InputMaybe<Scalars['String']['input']>;
  fbUserName?: InputMaybe<Scalars['String']['input']>;
  personalPhotoUrl?: InputMaybe<Scalars['String']['input']>;
  redeemDescription?: InputMaybe<Scalars['String']['input']>;
};

export type ShopMutation = {
  __typename?: 'ShopMutation';
  /** Checkout the shopping cart. */
  checkout?: Maybe<Checkout>;
  /** Modify the shopping cart items including add/update/remove. */
  updateItemOfCart?: Maybe<UpdateItemOfCart>;
  /** Update order information like note */
  updateOrderInformation?: Maybe<UpdateOrderInformation>;
};


export type ShopMutationUpdateItemOfCartArgs = {
  payload: BranchPurchasingCartItemInput;
};


export type ShopMutationUpdateOrderInformationArgs = {
  payload: BranchPurchasingCartInput;
};

export type ShopQuery = {
  __typename?: 'ShopQuery';
  cart?: Maybe<CartType>;
  orders?: Maybe<BranchOrderTypeConnection>;
  productCategories?: Maybe<CategoryTypeConnection>;
  products?: Maybe<ItemInShopAndCartTypeConnection>;
  suppliers?: Maybe<SupplierForBranchTypeConnection>;
};


export type ShopQueryOrdersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  branch_OriginalUuid_In?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  createdDateFrom?: InputMaybe<Scalars['Date']['input']>;
  createdDateTo?: InputMaybe<Scalars['Date']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  isDeliveryFeeUndetermined?: InputMaybe<Scalars['Boolean']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  orderDisplayId_Icontains?: InputMaybe<Scalars['String']['input']>;
  status_In?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type ShopQueryProductCategoriesArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type ShopQueryProductsArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type ShopQuerySuppliersArgs = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Int']['input']>;
  last?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type ShopType = Node & {
  __typename?: 'ShopType';
  bulletin: Scalars['String']['output'];
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  name: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
};

export type ShopTypeConnection = {
  __typename?: 'ShopTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<ShopTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `ShopType` and its cursor. */
export type ShopTypeEdge = {
  __typename?: 'ShopTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<ShopType>;
};

export type ShopUpdateInput = {
  bulletin?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type SignServicePolicyInput = {
  authUserUuid?: InputMaybe<Scalars['UUID']['input']>;
  servicePolicyVersion?: InputMaybe<Scalars['String']['input']>;
  signStatus?: InputMaybe<Scalars['Boolean']['input']>;
  signTime?: InputMaybe<Scalars['String']['input']>;
};

export type SignServicePolicyOutput = {
  __typename?: 'SignServicePolicyOutput';
  authUserUuid?: Maybe<Scalars['UUID']['output']>;
  signStatus?: Maybe<Scalars['Boolean']['output']>;
};

export type SignTermPayload = {
  termName: TermNameEnum;
};

export type SignTermsOfServiceMutation = {
  __typename?: 'SignTermsOfServiceMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type SoldOutItemObjectType = {
  __typename?: 'SoldOutItemObjectType';
  menuItemTagUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  menuItemUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
};

export type SoldOutItemWithPlatformsObjectType = {
  __typename?: 'SoldOutItemWithPlatformsObjectType';
  /** ONLINE_STORE 僅限雲餐平台（外帶外送、內掃、預先點餐） */
  soldOutPlatforms: SoldOutPlatforms;
  uuid: Scalars['String']['output'];
};

export type SoldOutItemsWithPlatformsObjectType = {
  __typename?: 'SoldOutItemsWithPlatformsObjectType';
  /** 停售的註記 */
  menuItemTags: Array<SoldOutItemWithPlatformsObjectType>;
  /** 停售的單點/套餐商品 */
  menuItems: Array<SoldOutItemWithPlatformsObjectType>;
};

export enum SoldOutPlatforms {
  All = 'ALL',
  None = 'NONE',
  OnlineStore = 'ONLINE_STORE'
}

export enum SortingType {
  Custom = 'CUSTOM',
  Default = 'DEFAULT'
}

export enum SourceItemSourceType {
  /** FOODPANDA */
  Foodpanda = 'FOODPANDA',
  /** GRABFOOD */
  Grabfood = 'GRABFOOD',
  /** ICHEF */
  Ichef = 'ICHEF',
  /** UBEREATS */
  Ubereats = 'UBEREATS'
}

export type SourceItemType = {
  __typename?: 'SourceItemType';
  itemData?: Maybe<Scalars['JSONString']['output']>;
  sourceType: SourceItemSourceType;
};

export type SourceRestaurantOutput = {
  __typename?: 'SourceRestaurantOutput';
  isHq?: Maybe<Scalars['Boolean']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  storeId?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type SpecialClosingDayObjectType = {
  __typename?: 'SpecialClosingDayObjectType';
  endDate?: Maybe<Scalars['Date']['output']>;
  startDate?: Maybe<Scalars['Date']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type SpecialOpeningDayObjectType = {
  __typename?: 'SpecialOpeningDayObjectType';
  endDate?: Maybe<Scalars['Date']['output']>;
  hoursPeriods?: Maybe<Array<Maybe<ReservationPeriodObjectType>>>;
  mealTimeLimit?: Maybe<Scalars['Int']['output']>;
  startDate?: Maybe<Scalars['Date']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type SpecialReservationDayCheckFieldsError = {
  __typename?: 'SpecialReservationDayCheckFieldsError';
  endDate?: Maybe<SpecialReservationDayDateFieldsErrorUnionType>;
  hoursPeriods?: Maybe<Array<Maybe<HoursPeriodsCheckFieldsError>>>;
  startDate?: Maybe<SpecialReservationDayDateFieldsErrorUnionType>;
};

export type SpecialReservationDayDateFieldsErrorUnionType = DayRangeOverlapError;

export type SpecialReservationDayObjectType = SpecialClosingDayObjectType | SpecialOpeningDayObjectType;

export type SpecialReservationDayPayload = {
  dayType: SpecialReservationDayType;
  endDate: Scalars['Date']['input'];
  hoursPeriods?: InputMaybe<Array<InputMaybe<ReservationPeriodInput>>>;
  mealTimeLimit?: InputMaybe<Scalars['Int']['input']>;
  startDate: Scalars['Date']['input'];
};

export type SpecialReservationDayTimeFieldsErrorUnionType = TimeRangeOverlapError;

export enum SpecialReservationDayType {
  SpecialClosingDay = 'SPECIAL_CLOSING_DAY',
  SpecialOpeningDay = 'SPECIAL_OPENING_DAY'
}

export enum SpecialTag {
  KaohsiungTaxi = 'KAOHSIUNG_TAXI'
}

export type StartEndDateTimeOutput = {
  __typename?: 'StartEndDateTimeOutput';
  endDate?: Maybe<Scalars['Date']['output']>;
  endTime?: Maybe<Scalars['Time']['output']>;
  startDate?: Maybe<Scalars['Date']['output']>;
  startTime?: Maybe<Scalars['Time']['output']>;
};

export enum State {
  Accepted = 'ACCEPTED',
  Cancelled = 'CANCELLED',
  Created = 'CREATED',
  Denied = 'DENIED',
  Finished = 'FINISHED',
  PaymentFailed = 'PAYMENT_FAILED',
  Pending = 'PENDING',
  WaitingAccept = 'WAITING_ACCEPT',
  WaitingPayment = 'WAITING_PAYMENT'
}

export type StatisticsMenuQuery = {
  __typename?: 'StatisticsMenuQuery';
  foodpanda?: Maybe<MenuStatisticsFieldsOutput>;
  ichef?: Maybe<MenuStatisticsFieldsOutput>;
  onlineRestaurant?: Maybe<MenuStatisticsFieldsOutput>;
};

export enum Status {
  Accepted = 'ACCEPTED',
  Cancelled = 'CANCELLED',
  Created = 'CREATED',
  Denied = 'DENIED',
  Finished = 'FINISHED'
}

export enum StatusEnum {
  Fail = 'FAIL',
  Ok = 'OK'
}

export type StatusOutput = {
  __typename?: 'StatusOutput';
  status?: Maybe<StatusEnum>;
};

export type StoreIdAlreadyInvitedByAnotherHqError = {
  __typename?: 'StoreIdAlreadyInvitedByAnotherHqError';
  message?: Maybe<Scalars['String']['output']>;
};

export type StoreIdAlreadyInvitedError = {
  __typename?: 'StoreIdAlreadyInvitedError';
  branchUuid?: Maybe<Scalars['UUID']['output']>;
  message?: Maybe<Scalars['String']['output']>;
};

export type StoreIdIsHqAccountError = {
  __typename?: 'StoreIdIsHqAccountError';
  message?: Maybe<Scalars['String']['output']>;
};

export type StoreIdNotExistsError = {
  __typename?: 'StoreIdNotExistsError';
  message?: Maybe<Scalars['String']['output']>;
};

export type StoreIdRegionNotMatchError = {
  __typename?: 'StoreIdRegionNotMatchError';
  message?: Maybe<Scalars['String']['output']>;
};

export type StoreInfoQuery = {
  __typename?: 'StoreInfoQuery';
  formattedAddress?: Maybe<Scalars['String']['output']>;
  lat?: Maybe<Scalars['String']['output']>;
  long?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
};

export enum StoreType {
  Branch = 'BRANCH',
  Hq = 'HQ',
  Single = 'SINGLE'
}

export type StripePayOutput = {
  __typename?: 'StripePayOutput';
  paymentUrl?: Maybe<Scalars['String']['output']>;
  returnCode?: Maybe<Scalars['String']['output']>;
  sessionId?: Maybe<Scalars['String']['output']>;
};

export type StripeSettings = {
  __typename?: 'StripeSettings';
  connectAccount?: Maybe<Scalars['String']['output']>;
  status?: Maybe<StripeSettingsStatusEnum>;
};

export enum StripeSettingsStatusEnum {
  Applying = 'APPLYING',
  ApplyLinkInvalid = 'APPLY_LINK_INVALID',
  Auditing = 'AUDITING',
  AuditFailed = 'AUDIT_FAILED',
  Error = 'ERROR',
  NotApplied = 'NOT_APPLIED',
  Success = 'SUCCESS'
}

export type SubTagEnabledInformationType = {
  __typename?: 'SubTagEnabledInformationType';
  menuItemTagEnabled?: Maybe<Scalars['Boolean']['output']>;
  subTagEnabled?: Maybe<Scalars['Boolean']['output']>;
  tagGroupEnabled?: Maybe<Scalars['Boolean']['output']>;
};

export type SubTagInItemEnabledInformationType = {
  __typename?: 'SubTagInItemEnabledInformationType';
  menuItemTagEnabled?: Maybe<Scalars['Boolean']['output']>;
  subTagEnabled?: Maybe<Scalars['Boolean']['output']>;
  subTagInItemEnabled?: Maybe<Scalars['Boolean']['output']>;
  tagGroupEnabled?: Maybe<Scalars['Boolean']['output']>;
};

export type SubTagInItemPayload = {
  enabled: Scalars['Boolean']['input'];
  subTagUuid: Scalars['UUID']['input'];
};

export type SubTagInItemType = {
  __typename?: 'SubTagInItemType';
  computedEnabled?: Maybe<Scalars['Boolean']['output']>;
  enabledInformation?: Maybe<SubTagInItemEnabledInformationType>;
  menuItemTagName?: Maybe<Scalars['String']['output']>;
  menuItemTagUuid?: Maybe<Scalars['UUIDForText']['output']>;
  price?: Maybe<Scalars['String']['output']>;
  subTagUuid?: Maybe<Scalars['UUIDForText']['output']>;
};

export type SubTagPayload = {
  enabled: Scalars['Boolean']['input'];
  menuItemTagUuid: Scalars['UUID']['input'];
};

export type SubTagType = {
  __typename?: 'SubTagType';
  computedEnabled?: Maybe<Scalars['Boolean']['output']>;
  customSortingIndex?: Maybe<Scalars['Int']['output']>;
  defaultSortingIndex?: Maybe<Scalars['Int']['output']>;
  enabledInformation?: Maybe<SubTagEnabledInformationType>;
  isFromHq?: Maybe<Scalars['Boolean']['output']>;
  /** help client side validation */
  menuItemTagUuid?: Maybe<Scalars['UUID']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['String']['output']>;
  subTagUuid?: Maybe<Scalars['UUID']['output']>;
};

export type SuccessInvitationResultOutput = {
  __typename?: 'SuccessInvitationResultOutput';
  branchLoginId?: Maybe<Scalars['String']['output']>;
  branchName?: Maybe<Scalars['String']['output']>;
  branchStoreId?: Maybe<Scalars['String']['output']>;
  modules?: Maybe<Array<Maybe<HqBranchModules>>>;
};

export type SummaryOutput = {
  __typename?: 'SummaryOutput';
  compares?: Maybe<Array<Maybe<SalesDataObject>>>;
  thisPeriod?: Maybe<SalesDataObject>;
};

export type SupplierCreateInput = {
  contactName?: InputMaybe<Scalars['String']['input']>;
  deliveryInNDays: Scalars['Int']['input'];
  deliveryRule: DeliveryRuleCreateInput;
  displayName: Scalars['String']['input'];
  email?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  orderDeadlines?: InputMaybe<Array<InputMaybe<OrderDeadlineCreateInput>>>;
  phone?: InputMaybe<Scalars['String']['input']>;
};

export type SupplierDeliveryRuleType = {
  __typename?: 'SupplierDeliveryRuleType';
  chargedByOrder?: Maybe<ChargedByOrderType>;
  chargedByQuantity?: Maybe<ChargedByQuantityType>;
  chargedByRefrigerations: Array<ChargedByRefrigerationType>;
  type?: Maybe<DeliveryRuleType>;
  uuid: Scalars['UUID']['output'];
};

export type SupplierForBranchType = Node & {
  __typename?: 'SupplierForBranchType';
  deliveryInNDays: Scalars['Int']['output'];
  deliveryRule?: Maybe<SupplierDeliveryRuleType>;
  displayName: Scalars['String']['output'];
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  isHq: Scalars['Boolean']['output'];
  orderDeadlines: Array<OrderDeadlineType>;
  sort: Scalars['Int']['output'];
  uuid: Scalars['UUID']['output'];
};

export type SupplierForBranchTypeConnection = {
  __typename?: 'SupplierForBranchTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<SupplierForBranchTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `SupplierForBranchType` and its cursor. */
export type SupplierForBranchTypeEdge = {
  __typename?: 'SupplierForBranchTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<SupplierForBranchType>;
};

/** input without uuid will create a new one */
export type SupplierInput = {
  displayName?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type SupplierType = Node & {
  __typename?: 'SupplierType';
  contactName: Scalars['String']['output'];
  deliveryInNDays: Scalars['Int']['output'];
  deliveryRule?: Maybe<SupplierDeliveryRuleType>;
  displayName: Scalars['String']['output'];
  email: Scalars['String']['output'];
  /** The ID of the object. */
  id: Scalars['ID']['output'];
  isHq: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  note: Scalars['String']['output'];
  orderDeadlines: Array<OrderDeadlineType>;
  phone: Scalars['String']['output'];
  productCount?: Maybe<Scalars['Int']['output']>;
  sort: Scalars['Int']['output'];
  uuid: Scalars['UUID']['output'];
};

export type SupplierTypeConnection = {
  __typename?: 'SupplierTypeConnection';
  edgeCount?: Maybe<Scalars['Int']['output']>;
  /** Contains the nodes in this connection. */
  edges: Array<Maybe<SupplierTypeEdge>>;
  /** Pagination data for this connection. */
  pageInfo: PageInfo;
  totalCount?: Maybe<Scalars['Int']['output']>;
};

/** A Relay edge containing a `SupplierType` and its cursor. */
export type SupplierTypeEdge = {
  __typename?: 'SupplierTypeEdge';
  /** A cursor for use in pagination */
  cursor: Scalars['String']['output'];
  /** The item at the end of the edge */
  node?: Maybe<SupplierType>;
};

export type SyncMenuEventObject = {
  __typename?: 'SyncMenuEventObject';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  hasPermissionToCancel?: Maybe<Scalars['Boolean']['output']>;
  isFinished?: Maybe<Scalars['Boolean']['output']>;
  syncMenuTasks?: Maybe<Array<Maybe<SyncMenuTaskObject>>>;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  username?: Maybe<Scalars['String']['output']>;
  uuid: Scalars['String']['output'];
};

export type SyncMenuOutput = {
  __typename?: 'SyncMenuOutput';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
  syncMenuEvent?: Maybe<SyncMenuEventObject>;
};

export type SyncMenuTaskObject = {
  __typename?: 'SyncMenuTaskObject';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  hasPermissionToCancel?: Maybe<Scalars['Boolean']['output']>;
  progress?: Maybe<Scalars['Int']['output']>;
  restaurantUuid?: Maybe<Scalars['UUID']['output']>;
  status: SyncMenuTaskStatus;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  uuid: Scalars['String']['output'];
};

export enum SyncMenuTaskStatus {
  /** CANCEL */
  Cancel = 'CANCEL',
  /** FAIL */
  Fail = 'FAIL',
  /** START */
  Start = 'START',
  /** SUCCEED */
  Succeed = 'SUCCEED'
}

export type TableEntityType = {
  __typename?: 'TableEntityType';
  capacity?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  sort?: Maybe<Scalars['Int']['output']>;
  type?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
  x?: Maybe<Scalars['Int']['output']>;
  y?: Maybe<Scalars['Int']['output']>;
};

export type TableFloorType = {
  __typename?: 'TableFloorType';
  name?: Maybe<Scalars['String']['output']>;
  sort?: Maybe<Scalars['Int']['output']>;
  tableEntities?: Maybe<Array<Maybe<TableEntityType>>>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type TableIsInvalidError = {
  __typename?: 'TableIsInvalidError';
  message?: Maybe<Scalars['String']['output']>;
};

export type TagControlType = {
  __typename?: 'TagControlType';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  menuItemTag?: Maybe<MenuItemTagType>;
  restaurant: RestaurantType;
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  /** Used as an unique ID of the record.Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export type TagGroupInItemType = {
  __typename?: 'TagGroupInItemType';
  enabledInTagGroup?: Maybe<Scalars['Boolean']['output']>;
  graphqlType?: Maybe<ItemOrTagGroupEnumType>;
  maximumSelection?: Maybe<Scalars['Int']['output']>;
  minimumSelection?: Maybe<Scalars['Int']['output']>;
  subTagInItems?: Maybe<Array<Maybe<SubTagInItemType>>>;
  tagGroupName?: Maybe<Scalars['String']['output']>;
  tagGroupUuid?: Maybe<Scalars['UUID']['output']>;
};

export type TagGroupType = {
  __typename?: 'TagGroupType';
  branchesMappedWithPlatforms?: Maybe<Array<Maybe<BranchMappedWithPlatformsType>>>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  isFromHq?: Maybe<Scalars['Boolean']['output']>;
  maximumSelection?: Maybe<Scalars['Int']['output']>;
  menuItems?: Maybe<Array<Maybe<MenuItemType>>>;
  minimumSelection?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  sortingType?: Maybe<SortingType>;
  subTags?: Maybe<Array<Maybe<SubTagType>>>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type TaishinEdcPaymentLogMutation = {
  __typename?: 'TaishinEdcPaymentLogMutation';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type TakeoutSearchMetaObjectType = {
  __typename?: 'TakeoutSearchMetaObjectType';
  declareForCov19?: Maybe<Scalars['String']['output']>;
  enabled?: Maybe<Scalars['Boolean']['output']>;
  googleScore?: Maybe<Scalars['String']['output']>;
  lat?: Maybe<Scalars['Float']['output']>;
  lng?: Maybe<Scalars['Float']['output']>;
  noContactPaymentOnSite?: Maybe<Scalars['Boolean']['output']>;
  noContactPaymentOnline?: Maybe<Scalars['Boolean']['output']>;
  noContactPickUp?: Maybe<Scalars['Boolean']['output']>;
  priceRange?: Maybe<RestaurantPriceRange>;
  restaurantCategories?: Maybe<Array<Maybe<RestaurantCategories>>>;
  sanitationInStore?: Maybe<Array<Maybe<RestaurantSanitation>>>;
  shopUrl?: Maybe<Scalars['String']['output']>;
  specialTags?: Maybe<Array<Maybe<SpecialTag>>>;
};

export type TaxInfoObjectType = {
  __typename?: 'TaxInfoObjectType';
  source?: Maybe<TaxInfoSourceEnum>;
  taxId?: Maybe<Scalars['String']['output']>;
  taxName?: Maybe<Scalars['String']['output']>;
};

export enum TaxInfoSourceEnum {
  Ichef = 'ICHEF',
  Napoleon = 'NAPOLEON',
  NotApplicable = 'NOT_APPLICABLE'
}

export type TaxTypeRateType = {
  __typename?: 'TaxTypeRateType';
  name?: Maybe<Scalars['String']['output']>;
  rate?: Maybe<Scalars['String']['output']>;
};

export enum TermNameEnum {
  Foodie = 'FOODIE',
  OnlineRestaurant = 'ONLINE_RESTAURANT',
  OnlineRestaurantPrivacy = 'ONLINE_RESTAURANT_PRIVACY'
}

export type TerminateFoodpandaIntegrationInput = {
  confirmTerminate: Scalars['Boolean']['input'];
  contactName: Scalars['String']['input'];
  contactPhone: Scalars['String']['input'];
  terminateReason: Scalars['String']['input'];
};

export type TerminateFoodpandaIntegrationMutation = {
  __typename?: 'TerminateFoodpandaIntegrationMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type TerminateUbereatsIntegrationMutation = {
  __typename?: 'TerminateUbereatsIntegrationMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type TermsOfServiceMutation = {
  __typename?: 'TermsOfServiceMutation';
  signTerm?: Maybe<SignTermsOfServiceMutation>;
};


export type TermsOfServiceMutationSignTermArgs = {
  payload?: InputMaybe<SignTermPayload>;
};

export type TermsOfServiceQuery = {
  __typename?: 'TermsOfServiceQuery';
  latestTerm?: Maybe<LatestTermsOfServiceOutput>;
};


export type TermsOfServiceQueryLatestTermArgs = {
  termName: TermNameEnum;
};

export type TextFilterQueryType = {
  condition?: InputMaybe<TextFilterTypes>;
  /** Don't modify if you're not using customized filter */
  type?: InputMaybe<Scalars['String']['input']>;
  /** text to query */
  value?: InputMaybe<Scalars['String']['input']>;
};

export enum TextFilterTypes {
  Contains = 'CONTAINS',
  EndsWith = 'ENDS_WITH',
  Equals = 'EQUALS',
  StartsWith = 'STARTS_WITH'
}

export type TextProductAnnouncementObjectType = Node & {
  __typename?: 'TextProductAnnouncementObjectType';
  /** Content of the production announcement. (depends on the language_code) */
  content?: Maybe<Scalars['String']['output']>;
  /** The ID of the text production announcement. */
  id: Scalars['ID']['output'];
  /** Link of the notification (depends on the language_code) */
  link?: Maybe<Scalars['String']['output']>;
  /** The time when the production announcement is published. It should be always in UTC timezone. */
  publishedAt?: Maybe<Scalars['UTCDateTime']['output']>;
  /** Status of the production announcement, it should be always PUBLISHED if env is prod. */
  status?: Maybe<ProductAnnouncementStatus>;
  /** Title of the production announcement (depends on the language_code) */
  title?: Maybe<Scalars['String']['output']>;
};

export type TimePeriodObjectType = {
  __typename?: 'TimePeriodObjectType';
  end?: Maybe<Scalars['String']['output']>;
  sourcePeriodIndexes?: Maybe<Array<Maybe<Scalars['Int']['output']>>>;
  start?: Maybe<Scalars['String']['output']>;
};

export type TimeRangeOverlapError = {
  __typename?: 'TimeRangeOverlapError';
  message?: Maybe<Scalars['String']['output']>;
};

export type TransactionQuery = {
  __typename?: 'TransactionQuery';
  transaction?: Maybe<GatewayPaymentOutput>;
};

export type TriggerWrapSettingFileDevToolMutation = {
  __typename?: 'TriggerWrapSettingFileDevToolMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type TurnkeyImportableInvoiceOutput = {
  __typename?: 'TurnkeyImportableInvoiceOutput';
  firstInvoiceNo?: Maybe<Scalars['String']['output']>;
  invoiceAlpha?: Maybe<Scalars['String']['output']>;
  invoiceMonth?: Maybe<Scalars['String']['output']>;
  invoiceYear?: Maybe<Scalars['String']['output']>;
  lastInvoiceNo?: Maybe<Scalars['String']['output']>;
  sellerId?: Maybe<Scalars['String']['output']>;
  status?: Maybe<InvoiceTrackStatusEnum>;
};

export type TwInvoiceAutomationSettingMutation = {
  __typename?: 'TwInvoiceAutomationSettingMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type TwInvoiceMutation = {
  __typename?: 'TwInvoiceMutation';
  automationSetting?: Maybe<TwInvoiceAutomationSettingMutation>;
  markManuallyPrintedInvoice?: Maybe<MarkManuallyPrintedInvoiceMutation>;
  uploadUnusedInvoice?: Maybe<UploadUnusedInvoiceMutation>;
};


export type TwInvoiceMutationAutomationSettingArgs = {
  payload?: InputMaybe<UpdateAutomationSettingInput>;
};


export type TwInvoiceMutationMarkManuallyPrintedInvoiceArgs = {
  invoiceUuid: Scalars['String']['input'];
};


export type TwInvoiceMutationUploadUnusedInvoiceArgs = {
  payload?: InputMaybe<UploadUnusedInvoiceInput>;
};

export type TwInvoiceQuery = {
  __typename?: 'TwInvoiceQuery';
  authorizationInfo?: Maybe<AuthorizationInfoOutput>;
  automationSetting?: Maybe<AutomationSettingOutput>;
  turnkeyImportableInvoiceList?: Maybe<Array<Maybe<TurnkeyImportableInvoiceOutput>>>;
};

export enum Type {
  DeliveryByRestaurant = 'DELIVERY_BY_RESTAURANT',
  DineIn = 'DINE_IN',
  PickUp = 'PICK_UP'
}

export type UuidFilterQueryTypeWithDateRange = {
  endDateStr?: InputMaybe<Scalars['String']['input']>;
  startDateStr?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  /** text list to query */
  values?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};

export enum UbereatsApplyingStatusEnum {
  Activated = 'ACTIVATED',
  Init = 'INIT',
  Pending = 'PENDING'
}

export type UbereatsIntegrationOutput = {
  __typename?: 'UbereatsIntegrationOutput';
  applyingStatus?: Maybe<UbereatsApplyingStatusEnum>;
  paymentModuleUuid?: Maybe<Scalars['UUID']['output']>;
  restaurantUuid: Scalars['UUID']['output'];
  ubereatsStoreId?: Maybe<Scalars['String']['output']>;
  ubereatsStoreName: Scalars['String']['output'];
  uuid: Scalars['UUID']['output'];
  version: Scalars['String']['output'];
};

export enum UbereatsInvoiceIssuePolicy {
  Disabled = 'DISABLED',
  Enabled = 'ENABLED',
  UbereatsIntegrationNotAvailable = 'UBEREATS_INTEGRATION_NOT_AVAILABLE'
}

export type UbereatsMenuCategoriesOutput = {
  __typename?: 'UbereatsMenuCategoriesOutput';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  menuItems: Array<UbereatsMenuItemOutput>;
  menus: Array<UbereatsMenusOutput>;
  name: Scalars['String']['output'];
  ubereatsId: Scalars['String']['output'];
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  /** Used as an unique ID of the record.Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export enum UbereatsMenuItemMappingStatus {
  /** COMPLETE */
  Complete = 'COMPLETE',
  /** MISSING */
  Missing = 'MISSING',
  /** NOT_ROOT_ITEM */
  None = 'NONE',
  /** PARTIAL */
  Partial = 'PARTIAL'
}

export type UbereatsMenuItemOutput = {
  __typename?: 'UbereatsMenuItemOutput';
  categories: Array<UbereatsMenuCategoriesOutput>;
  comboMenuItem?: Maybe<ComboMenuItemType>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  externalData: Scalars['String']['output'];
  mappingStatus?: Maybe<UbereatsMenuItemMappingStatus>;
  mappingType?: Maybe<IchefMappingTypes>;
  menuItem?: Maybe<MenuItemType>;
  menuItemTag?: Maybe<MenuItemTagType>;
  modifierGroups: Array<UbereatsModifierGroupOutput>;
  name: Scalars['String']['output'];
  price: Scalars['Float']['output'];
  ubereatsId: Scalars['String']['output'];
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  /** Used as an unique ID of the record.Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export type UbereatsMenuMutation = {
  __typename?: 'UbereatsMenuMutation';
  mappingMenu?: Maybe<Array<Maybe<MappingMenuOutput>>>;
  syncMenu?: Maybe<Array<Maybe<UbereatsMenuCategoriesOutput>>>;
};


export type UbereatsMenuMutationMappingMenuArgs = {
  payload?: InputMaybe<Array<InputMaybe<MappingMenuInput>>>;
  rootUbereatsItemUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type UbereatsMenuQuery = {
  __typename?: 'UbereatsMenuQuery';
  items?: Maybe<Array<Maybe<UbereatsMenuItemOutput>>>;
  menus?: Maybe<Array<Maybe<UbereatsMenusOutput>>>;
};


export type UbereatsMenuQueryItemsArgs = {
  execSync?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UbereatsMenusOutput = {
  __typename?: 'UbereatsMenusOutput';
  categories: Array<UbereatsMenuCategoriesOutput>;
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  ubereatsId: Scalars['String']['output'];
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  /** Used as an unique ID of the record.Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export type UbereatsModifierGroupOutput = {
  __typename?: 'UbereatsModifierGroupOutput';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  /** When the row is marked deleted in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  deletedAt?: Maybe<Scalars['DateTime']['output']>;
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled: Scalars['Boolean']['output'];
  externalData: Scalars['String']['output'];
  modifierOptions: Array<UbereatsMenuItemOutput>;
  name: Scalars['String']['output'];
  ubereatsId: Scalars['String']['output'];
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
  /** Used as an unique ID of the record.Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export type UbereatsMutation = {
  __typename?: 'UbereatsMutation';
  applyUbereatsIntegration?: Maybe<ApplyUbereatsIntegrationMutation>;
  terminateUbereatsIntegration?: Maybe<TerminateUbereatsIntegrationMutation>;
  ubereatsOauthCallback?: Maybe<UbereatsOAuthCallbackMutation>;
  ubereatsTerminationFeedback?: Maybe<UbereatsTerminationFeedbackMutation>;
};


export type UbereatsMutationApplyUbereatsIntegrationArgs = {
  payload?: InputMaybe<ApplyUbereatsIntegrationInput>;
};


export type UbereatsMutationUbereatsOauthCallbackArgs = {
  payload?: InputMaybe<UbereatsOAuthCallbackInput>;
};


export type UbereatsMutationUbereatsTerminationFeedbackArgs = {
  payload?: InputMaybe<UbereatsTerminationFeedbackInput>;
};

export type UbereatsOAuthCallbackInput = {
  authorizationCode: Scalars['String']['input'];
  redirectUrl: Scalars['String']['input'];
};

export type UbereatsOAuthCallbackMutation = {
  __typename?: 'UbereatsOAuthCallbackMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export enum UbereatsSetupMenuVersionTypes {
  V1Mapping = 'V1_MAPPING',
  V2Upload = 'V2_UPLOAD'
}

export type UbereatsStoreObjectType = {
  __typename?: 'UbereatsStoreObjectType';
  isOtherIchefRestaurantUsed?: Maybe<Scalars['Boolean']['output']>;
  ubereatsStoreId?: Maybe<Scalars['String']['output']>;
  ubereatsStoreName?: Maybe<Scalars['String']['output']>;
};

export type UbereatsTerminationFeedbackInput = {
  confirmTerminate: Scalars['Boolean']['input'];
  contactName: Scalars['String']['input'];
  contactPhone: Scalars['String']['input'];
  terminateReason: Scalars['String']['input'];
};

export type UbereatsTerminationFeedbackMutation = {
  __typename?: 'UbereatsTerminationFeedbackMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type UbereatsV2CustomizeTagGroupPayload = {
  name?: InputMaybe<Scalars['StripString']['input']>;
};

export type UbereatsV2CustomizeTagPayload = {
  name?: InputMaybe<Scalars['StripString']['input']>;
  price?: InputMaybe<Scalars['String']['input']>;
};

export type UbereatsV2CustomizedTagFieldsOutput = {
  __typename?: 'UbereatsV2CustomizedTagFieldsOutput';
  name?: Maybe<Scalars['String']['output']>;
  price?: Maybe<Scalars['String']['output']>;
};

export type UbereatsV2CustomizedTagGroupFieldsOutput = {
  __typename?: 'UbereatsV2CustomizedTagGroupFieldsOutput';
  name?: Maybe<Scalars['String']['output']>;
};

export type UbereatsV2HiddenTagsAndTagGroupsPayload = {
  hiddenTagGroupUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  hiddenTagUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
};

export type UbereatsV2MenuByWeekdaysOutput = {
  __typename?: 'UbereatsV2MenuByWeekdaysOutput';
  timePeriodsByWeekday?: Maybe<Array<Maybe<UbereatsV2TimePeriodByWeekdayOutput>>>;
  weekday?: Maybe<Weekday>;
};

export type UbereatsV2MenuCategoryOutput = {
  __typename?: 'UbereatsV2MenuCategoryOutput';
  menuItems: Array<UbereatsV2MenuItemOutput>;
  menus: Array<UbereatsV2MenuOutput>;
  /** Name of the record, max_length = 191. */
  name: Scalars['String']['output'];
  /** Used to sort records, starting at 0. */
  sortingIndex: Scalars['Int']['output'];
  uuid: Scalars['UUID']['output'];
};

export type UbereatsV2MenuCategoryPayload = {
  menuUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  name: Scalars['StripString']['input'];
};

export type UbereatsV2MenuItemCustomizedNameOutput = {
  __typename?: 'UbereatsV2MenuItemCustomizedNameOutput';
  customizedName?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export enum UbereatsV2MenuItemMappingType {
  /** COMBO_MENU_ITEM */
  ComboMenuItem = 'COMBO_MENU_ITEM',
  /** MENU_ITEM */
  MenuItem = 'MENU_ITEM',
  /** MENU_ITEM_TAG */
  MenuItemTag = 'MENU_ITEM_TAG',
  /** NOT_MAPPED */
  None = 'NONE'
}

export enum UbereatsV2MenuItemMenuItemType {
  /** COMBO */
  Combo = 'COMBO',
  /** ITEM */
  Item = 'ITEM'
}

export type UbereatsV2MenuItemOutput = {
  __typename?: 'UbereatsV2MenuItemOutput';
  category?: Maybe<UbereatsV2MenuCategoryOutput>;
  customizedName?: Maybe<Scalars['String']['output']>;
  customizedPrice?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  displayPrice?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  ichefUuid: Scalars['UUID']['output'];
  mappingType: UbereatsV2MenuItemMappingType;
  menuItemType?: Maybe<UbereatsV2MenuItemMenuItemType>;
  modifierGroups: Array<UbereatsV2ModifierGroupOutput>;
  originalName?: Maybe<Scalars['String']['output']>;
  originalPrice?: Maybe<Scalars['String']['output']>;
  pictureFilename: Scalars['String']['output'];
  /** Used to sort records, starting at 0. */
  sortingIndex: Scalars['Int']['output'];
  uuid: Scalars['UUID']['output'];
  visible: Scalars['Boolean']['output'];
};

export type UbereatsV2MenuItemPayload = {
  categoryUuid: Scalars['UUID']['input'];
  customizedName?: InputMaybe<Scalars['StripString']['input']>;
  customizedPrice?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  modifierGroups?: InputMaybe<Array<InputMaybe<UbereatsV2ModifierGroupPayload>>>;
  pictureFilename?: InputMaybe<Scalars['String']['input']>;
};

export type UbereatsV2MenuMutation = {
  __typename?: 'UbereatsV2MenuMutation';
  autoSyncMenu?: Maybe<AutoSyncUbereatsV2MenuMutation>;
  batchDelete?: Maybe<BatchDeleteUbereatsV2Mutation>;
  createMenu?: Maybe<UbereatsV2MenuOutput>;
  createMenuCategory?: Maybe<UbereatsV2MenuCategoryOutput>;
  customizeTag?: Maybe<CustomizeUbereatsV2TagMutation>;
  customizeTagGroup?: Maybe<CustomizeUbereatsV2TagGroupMutation>;
  deleteMenu?: Maybe<UbereatsV2MenuOutput>;
  deleteMenuCategory?: Maybe<UbereatsV2MenuCategoryOutput>;
  deleteMenuItem?: Maybe<UbereatsV2MenuItemOutput>;
  importMenuItemToCategory?: Maybe<Array<Maybe<UbereatsV2MenuCategoryOutput>>>;
  oneClickSyncAllMenu?: Maybe<Array<Maybe<UbereatsV2MenuCategoryOutput>>>;
  reorderMenuCategories?: Maybe<Array<Maybe<UbereatsV2MenuCategoryOutput>>>;
  setHiddenTagsAndTagGroups?: Maybe<SetUbereatsV2HiddenTagsAndGroupsMutation>;
  updateMenu?: Maybe<UbereatsV2MenuOutput>;
  updateMenuCategory?: Maybe<UbereatsV2MenuCategoryOutput>;
  updateMenuItem?: Maybe<UbereatsV2MenuItemOutput>;
  validateMenu?: Maybe<ValidateUbereatsV2MenuMutation>;
  validateMenuTimePeriod?: Maybe<ValidateUbereatsV2MenuTimePeriodMutation>;
  validateTagsAndTagGroups?: Maybe<ValidateUbereatsV2TagsAndTagGroupsMutation>;
};


export type UbereatsV2MenuMutationBatchDeleteArgs = {
  categoryUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
};


export type UbereatsV2MenuMutationCreateMenuArgs = {
  payload: UbereatsV2MenuPayload;
};


export type UbereatsV2MenuMutationCreateMenuCategoryArgs = {
  payload: UbereatsV2MenuCategoryPayload;
};


export type UbereatsV2MenuMutationCustomizeTagArgs = {
  payload: UbereatsV2CustomizeTagPayload;
  uuid: Scalars['UUID']['input'];
};


export type UbereatsV2MenuMutationCustomizeTagGroupArgs = {
  payload: UbereatsV2CustomizeTagGroupPayload;
  uuid: Scalars['UUID']['input'];
};


export type UbereatsV2MenuMutationDeleteMenuArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type UbereatsV2MenuMutationDeleteMenuCategoryArgs = {
  uuid: Scalars['UUID']['input'];
};


export type UbereatsV2MenuMutationDeleteMenuItemArgs = {
  uuid: Scalars['UUID']['input'];
};


export type UbereatsV2MenuMutationImportMenuItemToCategoryArgs = {
  ichefMenuItemUuids: Array<InputMaybe<Scalars['UUID']['input']>>;
  uuid: Scalars['UUID']['input'];
};


export type UbereatsV2MenuMutationOneClickSyncAllMenuArgs = {
  platform: Scalars['String']['input'];
};


export type UbereatsV2MenuMutationReorderMenuCategoriesArgs = {
  payload: Array<InputMaybe<UbereatsV2ReorderMenuCategoryPayload>>;
};


export type UbereatsV2MenuMutationSetHiddenTagsAndTagGroupsArgs = {
  payload: UbereatsV2HiddenTagsAndTagGroupsPayload;
};


export type UbereatsV2MenuMutationUpdateMenuArgs = {
  payload: UbereatsV2MenuPayload;
  uuid: Scalars['UUID']['input'];
};


export type UbereatsV2MenuMutationUpdateMenuCategoryArgs = {
  payload: UbereatsV2MenuCategoryPayload;
  uuid: Scalars['UUID']['input'];
};


export type UbereatsV2MenuMutationUpdateMenuItemArgs = {
  payload: UbereatsV2MenuItemPayload;
  uuid: Scalars['UUID']['input'];
};


export type UbereatsV2MenuMutationValidateMenuTimePeriodArgs = {
  payload: UbereatsV2MenuTimePeriodValidationPayload;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type UbereatsV2MenuOutput = {
  __typename?: 'UbereatsV2MenuOutput';
  name: Scalars['String']['output'];
  timePeriods?: Maybe<Array<Maybe<UbereatsV2MenuTimePeriodOutput>>>;
  /** Used as an unique ID of the record. Sample value: `b36233cc-b11b-4403-8587-e6b655838838` */
  uuid: Scalars['UUID']['output'];
};

export type UbereatsV2MenuPayload = {
  name: Scalars['StripString']['input'];
  timePeriods: Array<InputMaybe<UbereatsV2MenuTimePeriodPayload>>;
};

export type UbereatsV2MenuQuery = {
  __typename?: 'UbereatsV2MenuQuery';
  categories?: Maybe<Array<Maybe<UbereatsV2MenuCategoryOutput>>>;
  getUploadMenuStatus?: Maybe<UbereatsV2UploadMenuStatusOutput>;
  hiddenTagGroupUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  hiddenTagUuids?: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  menuByWeekdays?: Maybe<Array<Maybe<UbereatsV2MenuByWeekdaysOutput>>>;
  menuItem?: Maybe<UbereatsV2MenuItemOutput>;
  menuItemCustomizedNameMapping?: Maybe<Array<Maybe<UbereatsV2MenuItemCustomizedNameOutput>>>;
  menuTagGroups?: Maybe<Array<Maybe<UbereatsV2MenuTagGroupOutput>>>;
  menuTags?: Maybe<Array<Maybe<UbereatsV2MenuTagOutput>>>;
  menus?: Maybe<Array<Maybe<UbereatsV2MenuOutput>>>;
};


export type UbereatsV2MenuQueryCategoriesArgs = {
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};


export type UbereatsV2MenuQueryMenuItemArgs = {
  uuid: Scalars['UUID']['input'];
};

export type UbereatsV2MenuTagGroupOutput = {
  __typename?: 'UbereatsV2MenuTagGroupOutput';
  customizedFields?: Maybe<UbereatsV2CustomizedTagGroupFieldsOutput>;
  subTags?: Maybe<Array<Maybe<UbereatsV2MenuTagOutput>>>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type UbereatsV2MenuTagOutput = {
  __typename?: 'UbereatsV2MenuTagOutput';
  customizedFields?: Maybe<UbereatsV2CustomizedTagFieldsOutput>;
  uuid?: Maybe<Scalars['UUID']['output']>;
};

export type UbereatsV2MenuTimePeriodOutput = {
  __typename?: 'UbereatsV2MenuTimePeriodOutput';
  endTime?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['String']['output']>;
  uuid?: Maybe<Scalars['UUID']['output']>;
  weekdays?: Maybe<Array<Maybe<Weekday>>>;
};

export type UbereatsV2MenuTimePeriodPayload = {
  endTime: Scalars['String']['input'];
  startTime: Scalars['String']['input'];
  weekdays: Array<InputMaybe<Weekday>>;
};

export type UbereatsV2MenuTimePeriodValidationPayload = {
  timePeriods: Array<InputMaybe<UbereatsV2MenuTimePeriodPayload>>;
};

export enum UbereatsV2ModifierGroupMappingType {
  /** COMBO_ITEM_CATEGORY */
  ComboItemCategory = 'COMBO_ITEM_CATEGORY',
  /** NONE */
  None = 'NONE',
  /** TAG_GROUP */
  TagGroup = 'TAG_GROUP',
  /** VIRTUAL_TAG_GROUP */
  VirtualTagGroup = 'VIRTUAL_TAG_GROUP'
}

export type UbereatsV2ModifierGroupOutput = {
  __typename?: 'UbereatsV2ModifierGroupOutput';
  allowRepeatableSelection?: Maybe<Scalars['Boolean']['output']>;
  customizedName?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  enabled: Scalars['Boolean']['output'];
  ichefUuid: Scalars['UUID']['output'];
  mappingType: UbereatsV2ModifierGroupMappingType;
  maximumSelection?: Maybe<Scalars['Int']['output']>;
  minimumSelection?: Maybe<Scalars['Int']['output']>;
  modifierOptions: Array<UbereatsV2MenuItemOutput>;
  originalName?: Maybe<Scalars['String']['output']>;
  /** Used to sort records, starting at 0. */
  sortingIndex?: Maybe<Scalars['Int']['output']>;
  uuid: Scalars['UUID']['output'];
};

export type UbereatsV2ModifierGroupPayload = {
  customizedName?: InputMaybe<Scalars['String']['input']>;
  modifierOptions?: InputMaybe<Array<InputMaybe<UbereatsV2ModifierOptionPayload>>>;
  uuid: Scalars['UUID']['input'];
};

export type UbereatsV2ModifierOptionPayload = {
  customizedName?: InputMaybe<Scalars['String']['input']>;
  customizedPrice?: InputMaybe<Scalars['String']['input']>;
  uuid: Scalars['UUID']['input'];
  visible: Scalars['Boolean']['input'];
};

export type UbereatsV2ReorderMenuCategoryPayload = {
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  uuid: Scalars['String']['input'];
};

export type UbereatsV2TimePeriodByWeekdayOutput = {
  __typename?: 'UbereatsV2TimePeriodByWeekdayOutput';
  endTime?: Maybe<Scalars['String']['output']>;
  menuName?: Maybe<Scalars['String']['output']>;
  startTime?: Maybe<Scalars['String']['output']>;
};

export type UbereatsV2UploadMenuStatusOutput = {
  __typename?: 'UbereatsV2UploadMenuStatusOutput';
  latestSuccessTime?: Maybe<Scalars['String']['output']>;
  uploadStatus?: Maybe<UploadMenuStatus>;
};

export enum UncheckedOrderAlertEnum {
  NoAlert = 'NO_ALERT',
  Over_1Minute = 'OVER_1_MINUTE',
  Over_3Minutes = 'OVER_3_MINUTES',
  Over_5Minutes = 'OVER_5_MINUTES'
}

export type UnhandledError = {
  __typename?: 'UnhandledError';
  message?: Maybe<Scalars['String']['output']>;
};

export type UnpaidInvoiceOutput = {
  __typename?: 'UnpaidInvoiceOutput';
  /** When the record is filled into DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  createdAt: Scalars['DateTime']['output'];
  eventDatetime: Scalars['DateTime']['output'];
  eventUuid: Scalars['UUID']['output'];
  id: Scalars['ID']['output'];
  invoiceUuid: Scalars['UUID']['output'];
  /** When the record is updated in DB. Sample output on GraphQL: `2019-01-23T07:06:12.797963` */
  updatedAt: Scalars['DateTime']['output'];
};

export type UnpaidPaymentObject = {
  amount?: InputMaybe<Scalars['String']['input']>;
  barcode?: InputMaybe<Scalars['String']['input']>;
  expectCancel?: InputMaybe<Scalars['Boolean']['input']>;
  paymentType?: InputMaybe<Scalars['String']['input']>;
  paymentUuid?: InputMaybe<Scalars['UUID']['input']>;
  transactionUuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type UnusedInvoiceRow = {
  firstInvoiceNo?: InputMaybe<Scalars['String']['input']>;
  invoiceAlpha?: InputMaybe<Scalars['String']['input']>;
  invoiceType?: InputMaybe<Scalars['String']['input']>;
  lastInvoiceNo?: InputMaybe<Scalars['String']['input']>;
  sellerId?: InputMaybe<Scalars['String']['input']>;
  yearMonth?: InputMaybe<Scalars['String']['input']>;
};

export type UnverifiedRecordsOutput = {
  __typename?: 'UnverifiedRecordsOutput';
  fansPageId: Scalars['String']['output'];
  fbLoyaltyStoreId?: Maybe<Scalars['String']['output']>;
  restaurantUuid?: Maybe<Scalars['UUID']['output']>;
};

export type UpdateAllowReservationIntervalMutation = {
  __typename?: 'UpdateAllowReservationIntervalMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

/**
 * if is_allow_current_day_reservation = True:
 *     min_allow_reservation_minutes: 最快可預約 N 分鐘後
 *     min_allow_reservation_days: null
 *     max_allow_reservation_days: 最遠可預約 N 天內
 * if is_allow_current_day_reservation = False:
 *     min_allow_reservation_minutes: null
 *     min_allow_reservation_days: 最快可預約 N 天後
 *     max_allow_reservation_days: 最遠可預約 N 天內
 */
export type UpdateAllowReservationIntervalPayload = {
  isAllowCurrentDayReservation: Scalars['Boolean']['input'];
  maxAllowReservationDays: Scalars['Int']['input'];
  minAllowReservationDays?: InputMaybe<Scalars['Int']['input']>;
  minAllowReservationMinutes?: InputMaybe<Scalars['Int']['input']>;
};

export type UpdateAudienceSearchSetMutationPayload = {
  description?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
};

export type UpdateAutomationSettingInput = {
  isAutoImportInvoice: Scalars['Boolean']['input'];
  isAutoUploadUnusedInvoice: Scalars['Boolean']['input'];
};

export type UpdateBranch = {
  __typename?: 'UpdateBranch';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateBusinessInformationMutation = {
  __typename?: 'UpdateBusinessInformationMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateBusinessInformationPayload = {
  contactNumber?: InputMaybe<Scalars['String']['input']>;
  coverPictureS3Filenames?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  openingHoursPeriods?: InputMaybe<WeekdayOpeningPeriodInput>;
  reminder?: InputMaybe<Scalars['String']['input']>;
  reminderDefaultExpanded?: InputMaybe<Scalars['Boolean']['input']>;
  resultPageReminder?: InputMaybe<Scalars['String']['input']>;
  resultPageReminderLinkText?: InputMaybe<Scalars['String']['input']>;
  resultPageReminderLinkUrl?: InputMaybe<Scalars['String']['input']>;
  resultPageShowReminderLink?: InputMaybe<Scalars['Boolean']['input']>;
  storeAddress?: InputMaybe<Scalars['String']['input']>;
  storeName?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateCategoryInput = {
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type UpdateCurrentTableUsage = {
  __typename?: 'UpdateCurrentTableUsage';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateCustomerCommentMutation = {
  __typename?: 'UpdateCustomerCommentMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateCustomerCommentPayload = {
  customerCommentHint: Scalars['String']['input'];
  customerCommentSettingMode: CustomerCommentSettingMode;
};

export type UpdateCustomerGroupConfigInput = {
  autoCreateNextCustomerGroupAfterCheckout?: InputMaybe<Scalars['Boolean']['input']>;
  autoExitCustomerGroup?: InputMaybe<Scalars['Boolean']['input']>;
  customizedFields?: InputMaybe<Array<InputMaybe<CustomerGroupConfigCustomizedFieldsInput>>>;
  lineUpTimeAlert?: InputMaybe<Scalars['Int']['input']>;
  mealTimeAlert?: InputMaybe<Scalars['Int']['input']>;
  requiredFieldsCheckPoint?: InputMaybe<RequiredFieldsCheckPoint>;
  shouldManualConfirmServedStatus?: InputMaybe<Scalars['Boolean']['input']>;
  sortingIndex?: InputMaybe<Scalars['Int']['input']>;
  waitForCommitTimeAlert?: InputMaybe<Scalars['Int']['input']>;
  waitForServedTimeAlert?: InputMaybe<Scalars['Int']['input']>;
  waitForTakeoutTimeAlert?: InputMaybe<Scalars['Int']['input']>;
};

export type UpdateDiscountPayload = {
  allowedOnFoodpanda?: InputMaybe<Scalars['Boolean']['input']>;
  allowedOnGrabfood?: InputMaybe<Scalars['Boolean']['input']>;
  allowedOnIpad?: InputMaybe<Scalars['Boolean']['input']>;
  allowedOnOnlineRestaurant?: InputMaybe<Scalars['Boolean']['input']>;
  allowedOnUbereats?: InputMaybe<Scalars['Boolean']['input']>;
  authCategoryUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  cgTypes?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  couponMaxUse?: InputMaybe<Scalars['Int']['input']>;
  customerNumberEnd?: InputMaybe<Scalars['Int']['input']>;
  customerNumberStart?: InputMaybe<Scalars['Int']['input']>;
  defaultOnOnlineRestaurant?: InputMaybe<Scalars['Boolean']['input']>;
  discountType?: InputMaybe<Scalars['String']['input']>;
  discountValue?: InputMaybe<Scalars['Float']['input']>;
  invoiceMinusInterlockServiceCharge?: InputMaybe<Scalars['Boolean']['input']>;
  isAuthenticated?: InputMaybe<Scalars['Boolean']['input']>;
  isOpen?: InputMaybe<Scalars['Boolean']['input']>;
  isPrintingCouponQrcode?: InputMaybe<Scalars['Boolean']['input']>;
  isdeleted?: InputMaybe<Scalars['Boolean']['input']>;
  itemMinusInterlockServiceCharge?: InputMaybe<Scalars['Boolean']['input']>;
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  minimumAmount?: InputMaybe<Scalars['Decimal']['input']>;
  minimumAmountForCouponIssuing?: InputMaybe<Scalars['Decimal']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  onlineDescription?: InputMaybe<Scalars['String']['input']>;
  openAdvanceCondition?: InputMaybe<Scalars['Boolean']['input']>;
  periodEnd?: InputMaybe<Scalars['Date']['input']>;
  periodStart?: InputMaybe<Scalars['Date']['input']>;
  timeLimitEnd?: InputMaybe<Scalars['Int']['input']>;
  timeLimitStart?: InputMaybe<Scalars['Int']['input']>;
  useTimeLimit?: InputMaybe<Scalars['Boolean']['input']>;
  weekdays?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type UpdateGmbBindingSettingUnionType = GmbError | OkOutput | SetGmbUrlLinkWithPublicWebsiteDisableError | UnhandledError;

export type UpdateHqInformation = {
  __typename?: 'UpdateHQInformation';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateInstoreInformationInputObject = {
  address?: InputMaybe<Scalars['String']['input']>;
  checkoutAnnouncement?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  deviceCodeEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  isAutoAcceptOrder?: InputMaybe<Scalars['Boolean']['input']>;
  isAutoPrintSessionQrCode?: InputMaybe<Scalars['Boolean']['input']>;
  isOpening?: InputMaybe<Scalars['Boolean']['input']>;
  /** 餐點備註選項 */
  itemCommentVisibility?: InputMaybe<ItemCommentVisibility>;
  mealTimeLimits?: InputMaybe<Array<InputMaybe<InstoreMealTimeLimitInputObject>>>;
  mealTimeLimitsEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  orderCommentDescription?: InputMaybe<Scalars['String']['input']>;
  /** 訂單備註選項 */
  orderCommentVisibility?: InputMaybe<OrderCommentVisibility>;
  paymentTiming?: InputMaybe<PaymentTimingEnum>;
  phone?: InputMaybe<Scalars['String']['input']>;
  pictureS3Paths?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  restaurantAnnouncement?: InputMaybe<Scalars['String']['input']>;
  restaurantAnnouncementDefaultExpanded?: InputMaybe<Scalars['Boolean']['input']>;
  taiwanCorporateTaxIdEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UpdateInstoreOrderingSessionOutput = {
  __typename?: 'UpdateInstoreOrderingSessionOutput';
  errorCode?: Maybe<Scalars['Int']['output']>;
  errorMsg?: Maybe<Scalars['String']['output']>;
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateInstoreQrCodeMaterialInputObject = {
  color?: InputMaybe<InstoreQrCodeMaterialColorEnum>;
  logoUrl?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateItemInput = {
  category?: InputMaybe<Scalars['UUID']['input']>;
  defaultPrice?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  safetyStock?: InputMaybe<Scalars['String']['input']>;
  unitName?: InputMaybe<Scalars['String']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

/** Modify the shopping cart items including add/update/remove. */
export type UpdateItemOfCart = {
  __typename?: 'UpdateItemOfCart';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateLandingPageSetting = {
  __typename?: 'UpdateLandingPageSetting';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateLineOaSendMessageSettingInputObject = {
  cancelledOrderBy?: InputMaybe<Array<InputMaybe<CancelledBy>>>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  orderStatus?: InputMaybe<Array<InputMaybe<State>>>;
  reservationOrderReminderEnabled?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UpdateLineQrCodeMaterialInputObject = {
  color?: InputMaybe<QrCodeMaterialColorEnum>;
  logoUrl?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<QrCodeMaterialTypeEnum>;
};

export type UpdateLocationAttributes = {
  __typename?: 'UpdateLocationAttributes';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateLocationAttributesInput = {
  menuUrl?: InputMaybe<Scalars['String']['input']>;
  orderUrl?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateLocationInformationInput = {
  categoryId?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  openingHours?: InputMaybe<Array<InputMaybe<OpeningHourInput>>>;
  phone?: InputMaybe<Scalars['String']['input']>;
  websiteUrl?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateLoyaltyProgramDescriptionInput = {
  collectDescription?: InputMaybe<Scalars['String']['input']>;
  isPrintingQrCode?: InputMaybe<Scalars['Boolean']['input']>;
  printingWhileFoodpanda?: InputMaybe<Scalars['Boolean']['input']>;
  printingWhileOnSite?: InputMaybe<Scalars['Boolean']['input']>;
  printingWhileOnlineRestaurant?: InputMaybe<Scalars['Boolean']['input']>;
  printingWhileUbereats?: InputMaybe<Scalars['Boolean']['input']>;
  redeemDescription?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateMacAddressOutput = {
  __typename?: 'UpdateMACAddressOutput';
  macAddress?: Maybe<Scalars['String']['output']>;
};

export type UpdateMenuItemCategoryPayload = {
  externalId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateMenuItemPayload = {
  comboItemCategories?: InputMaybe<Array<InputMaybe<ComboItemCategoryInput>>>;
  croppedInfo?: InputMaybe<Scalars['Dictionary']['input']>;
  /** Used to enable and make effective customized_tax_type and customized_tax_rate; otherwise `restaurant.tax_type` will be used on iPad. */
  customizedTaxEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** Sample value: `TX` */
  customizedTaxType?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of this item in external ERP system. */
  externalId?: InputMaybe<Scalars['String']['input']>;
  inventoryConsumptionList?: InputMaybe<Array<InputMaybe<MenuItemInventoryConsumptionMutation>>>;
  itemTagRelationshipList?: InputMaybe<Array<InputMaybe<ItemTagRelationshipPayload>>>;
  menuItemCategoryUuid?: InputMaybe<Scalars['String']['input']>;
  /** MenuItemTagSortingType Enum:By spec, `DEFAULT` to be 'sorted by tag sort field', `CUSTOM` meant to be 'sorted by relation sort field'. */
  menuItemTagSortingType?: InputMaybe<Scalars['String']['input']>;
  menuItemTagUuids?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  originalPictureUuid?: InputMaybe<Scalars['UUID']['input']>;
  picture?: InputMaybe<Scalars['String']['input']>;
  /**  (Decimal string for API; Float type in DB) */
  price?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateMenuItemTagPayload = {
  /** If implemented, used to indicate the setting is enabled or not. */
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** ID of this item in external ERP system. */
  externalId?: InputMaybe<Scalars['String']['input']>;
  inventoryConsumptionList?: InputMaybe<Array<InputMaybe<MenuItemTagInventoryConsumptionMutation>>>;
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  name?: InputMaybe<Scalars['String']['input']>;
  /**  (Decimal string for API; Float type in DB) */
  price?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateOnlineOrderSettingsOutput = {
  __typename?: 'UpdateOnlineOrderSettingsOutput';
  errorCode?: Maybe<Scalars['Int']['output']>;
  errorMsg?: Maybe<Scalars['String']['output']>;
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
  onlineRestaurantOnlineOrderingSettings?: Maybe<OnlineRestaurantOnlineOrderingSettingsOutputType>;
};

export type UpdateOnlineOrderingMenuCategoryPayload = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateOnlineOrderingMenuItemPayload = {
  categoryUuid?: InputMaybe<Scalars['UUID']['input']>;
  croppedInfo?: InputMaybe<Scalars['Dictionary']['input']>;
  customizedName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  isListedOnInstoreOrdering?: InputMaybe<Scalars['Boolean']['input']>;
  isListedOnPreorder?: InputMaybe<Scalars['Boolean']['input']>;
  modifierGroups?: InputMaybe<Array<InputMaybe<UpdateOnlineOrderingModifierGroupPayload>>>;
  originalPictureUuid?: InputMaybe<Scalars['String']['input']>;
  pictureFilename?: InputMaybe<Scalars['String']['input']>;
  syncToOnlineRestaurant?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UpdateOnlineOrderingMenuPageRecommendationUnionType = OkOutput | UnhandledError;

export type UpdateOnlineOrderingModifierGroupPayload = {
  customizedName?: InputMaybe<Scalars['String']['input']>;
  modifierOptions?: InputMaybe<Array<InputMaybe<UpdateOnlineOrderingModifierOptionPayload>>>;
  uuid: Scalars['UUID']['input'];
};

export type UpdateOnlineOrderingModifierOptionPayload = {
  croppedInfo?: InputMaybe<Scalars['Dictionary']['input']>;
  customizedName?: InputMaybe<Scalars['String']['input']>;
  originalPictureUuid?: InputMaybe<Scalars['UUID']['input']>;
  pictureFilename?: InputMaybe<Scalars['String']['input']>;
  uuid: Scalars['UUID']['input'];
  visible: Scalars['Boolean']['input'];
};

export type UpdateOnlineRestaurantInformationInputObject = {
  address?: InputMaybe<Scalars['String']['input']>;
  availableReservationOrderDays?: InputMaybe<Scalars['Int']['input']>;
  checkoutAnnouncement?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  deviceCodeEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  /** 免洗餐具選項 */
  disposableTablewareVisibility?: InputMaybe<DisposableTablewareVisibility>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  foodieMode?: InputMaybe<FoodieMode>;
  ipadOrderDisplay?: InputMaybe<IpadOrderDisplayEnum>;
  isDeliveryInstantOrderAvailable?: InputMaybe<Scalars['Boolean']['input']>;
  isOpening?: InputMaybe<Scalars['Boolean']['input']>;
  isTakeoutInstantOrderAvailable?: InputMaybe<Scalars['Boolean']['input']>;
  /** 餐點備註 */
  itemCommentVisibility?: InputMaybe<ItemCommentVisibility>;
  lineOaSetting?: InputMaybe<LineOaSettings>;
  mealPreparationTimeAvg?: InputMaybe<MealPreparationTimeAvgEnum>;
  name?: InputMaybe<Scalars['String']['input']>;
  onlinePointDescription?: InputMaybe<Scalars['String']['input']>;
  openingHoursPeriods?: InputMaybe<Array<InputMaybe<OpeningHoursPeriodInputObject>>>;
  operationType?: InputMaybe<OperationTypeEnum>;
  orderCommentDescription?: InputMaybe<Scalars['String']['input']>;
  /** 訂單備註 */
  orderCommentVisibility?: InputMaybe<OrderCommentVisibility>;
  phone?: InputMaybe<Scalars['String']['input']>;
  pictureS3Paths?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  promotionAnnouncement?: InputMaybe<Scalars['String']['input']>;
  reservationOrderHoursPeriods?: InputMaybe<Array<InputMaybe<OpeningHoursPeriodInputObject>>>;
  reservationOrderIntervalMinutes?: InputMaybe<ReservationOrderIntervalMinutesEnum>;
  reservationOrderType?: InputMaybe<ReservationOrderTypeEnum>;
  restaurantAnnouncement?: InputMaybe<Scalars['String']['input']>;
  restaurantAnnouncementDefaultExpanded?: InputMaybe<Scalars['Boolean']['input']>;
  taiwanCorporateTaxIdEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  uncheckedOrderAlert?: InputMaybe<UncheckedOrderAlertEnum>;
};

export type UpdateOnlineRestaurantMenuCategoryPayload = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateOnlineRestaurantMenuItemPayload = {
  categoryUuid?: InputMaybe<Scalars['UUID']['input']>;
  croppedInfo?: InputMaybe<Scalars['Dictionary']['input']>;
  customizedName?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  modifierGroups?: InputMaybe<Array<InputMaybe<UpdateOnlineRestaurantModifierGroupPayload>>>;
  originalPictureUuid?: InputMaybe<Scalars['UUID']['input']>;
  pictureFilename?: InputMaybe<Scalars['String']['input']>;
  syncToInstoreOrdering?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UpdateOnlineRestaurantMenuPageRecommendationUnionType = OkOutput | UnhandledError;

export type UpdateOnlineRestaurantModifierGroupPayload = {
  customizedName?: InputMaybe<Scalars['String']['input']>;
  modifierOptions?: InputMaybe<Array<InputMaybe<UpdateOnlineRestaurantModifierOptionPayload>>>;
  uuid: Scalars['UUID']['input'];
};

export type UpdateOnlineRestaurantModifierOptionPayload = {
  croppedInfo?: InputMaybe<Scalars['Dictionary']['input']>;
  customizedName?: InputMaybe<Scalars['String']['input']>;
  originalPictureUuid?: InputMaybe<Scalars['UUID']['input']>;
  pictureFilename?: InputMaybe<Scalars['String']['input']>;
  uuid: Scalars['UUID']['input'];
  visible: Scalars['Boolean']['input'];
};

export type UpdateOnlineRestaurantOnlineOrderingSettingsInputObject = {
  ipadOrderDisplay?: InputMaybe<IpadOrderDisplayEnum>;
  isAllowReservationOrder?: InputMaybe<Scalars['Boolean']['input']>;
  isDeliveryInstantOrderAvailable?: InputMaybe<Scalars['Boolean']['input']>;
  isOpening?: InputMaybe<Scalars['Boolean']['input']>;
  isTakeoutInstantOrderAvailable?: InputMaybe<Scalars['Boolean']['input']>;
  isTakeoutReservationOrderAvailable?: InputMaybe<Scalars['Boolean']['input']>;
  mealPreparationTimeAvg?: InputMaybe<MealPreparationTimeAvgEnum>;
  reservationOrderType?: InputMaybe<ReservationOrderTypeEnum>;
  uncheckedOrderAlert?: InputMaybe<UncheckedOrderAlertEnum>;
};

export type UpdateOnlineRestaurantPaymentPayload = {
  isDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  isDisabledChannel?: InputMaybe<PaymentChannelGrapheneEnum>;
  name?: InputMaybe<Scalars['String']['input']>;
  onlineStoreLine?: InputMaybe<UpdateOnlineStoreLinePaymentPayload>;
  onlineStorePxPayPlus?: InputMaybe<UpdateOnlineStorePxPayPlusPaymentPayload>;
  onlineStripe?: InputMaybe<UpdateOnlineStripePaymentPayload>;
};

export type UpdateOnlineRestaurantQrCodeMaterialInputObject = {
  color?: InputMaybe<QrCodeMaterialColorEnum>;
  logoUrl?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<QrCodeMaterialTypeEnum>;
};

export type UpdateOnlineStoreLinePaymentPayload = {
  channelId?: InputMaybe<Scalars['String']['input']>;
  channelSecret?: InputMaybe<Scalars['String']['input']>;
  lineStoreId?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateOnlineStorePxPayPlusPaymentPayload = {
  merchantCode?: InputMaybe<Scalars['String']['input']>;
};

/**
 * UpdateOnlineStripePaymentPayload is the schema of online stripe payment output, the
 * followings are the usage of each field:
 *     - connect_account:
 *     the stripe account of the restaurant.
 */
export type UpdateOnlineStripePaymentPayload = {
  connectAccount?: InputMaybe<Scalars['String']['input']>;
};

/** Update order information like note */
export type UpdateOrderInformation = {
  __typename?: 'UpdateOrderInformation';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdatePreorderInformationUnionType = OkOutput | UnhandledError;

export type UpdatePreorderInput = {
  refundEligibleTime: Scalars['DateTime']['input'];
};

export type UpdateProduct = {
  __typename?: 'UpdateProduct';
  productCategoryUuid?: Maybe<Scalars['UUID']['output']>;
};

export type UpdateProductCategory = {
  __typename?: 'UpdateProductCategory';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateProductStatus = {
  __typename?: 'UpdateProductStatus';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateReservation = {
  __typename?: 'UpdateReservation';
  isSuccess?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateReservationRuleMutation = {
  __typename?: 'UpdateReservationRuleMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateReservationRulePayload = {
  mealTimeLimits: Array<InputMaybe<MealTimeLimitsInput>>;
  reservationHoursPeriods: WeekdayReservationPeriodInput;
  seatReservationTime?: InputMaybe<Scalars['Int']['input']>;
};

export type UpdateReservationStatusMutation = {
  __typename?: 'UpdateReservationStatusMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateReservationStatusPayload = {
  isAcceptOnlineReservation: Scalars['Boolean']['input'];
};

export type UpdateReservationTableEntityPayload = {
  isAllowCombination?: InputMaybe<Scalars['Boolean']['input']>;
  isAllowPublicReservation?: InputMaybe<Scalars['Boolean']['input']>;
  maximumReservationSeat: Scalars['Int']['input'];
  minimumReservationSeat: Scalars['Int']['input'];
};

export type UpdateReservationTableGroupPayload = {
  isWithReservationSeatSetting: Scalars['Boolean']['input'];
  maximumReservationSeat: Scalars['Int']['input'];
  minimumReservationSeat: Scalars['Int']['input'];
  name: Scalars['String']['input'];
};

export type UpdateReservationTableGroupUnionType = OkOutput | UnhandledError | UuidNotExistsError;

export type UpdateRestaurantPayload = {
  allowedMixedTaxTypesInMenuItem?: InputMaybe<Scalars['Boolean']['input']>;
  foodpandaInvoiceIssuePolicy?: InputMaybe<FoodpandaInvoiceIssuePolicy>;
  headquarterSellerId?: InputMaybe<Scalars['EmptyAsNoneString']['input']>;
  headquarterSellerName?: InputMaybe<Scalars['EmptyAsNoneString']['input']>;
  isTaiwanInvoice?: InputMaybe<Scalars['DBIntToAPIBoolean']['input']>;
  multiplePlatformDiscountEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  multiplePlatformItemDiscountEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  sellerAddress?: InputMaybe<Scalars['String']['input']>;
  sellerId?: InputMaybe<Scalars['EmptyAsNoneString']['input']>;
  sellerName?: InputMaybe<Scalars['EmptyAsNoneString']['input']>;
  taxType?: InputMaybe<Scalars['String']['input']>;
  twInvoiceContactEmails?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  twInvoiceEnableAdvanced?: InputMaybe<Scalars['Boolean']['input']>;
  twInvoiceIsDefaultOn?: InputMaybe<Scalars['Boolean']['input']>;
  twInvoiceIsOptional?: InputMaybe<Scalars['Boolean']['input']>;
  ubereatsInvoiceIssuePolicy?: InputMaybe<UbereatsInvoiceIssuePolicy>;
};

export type UpdateRestaurantPolicy = {
  __typename?: 'UpdateRestaurantPolicy';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateShop = {
  __typename?: 'UpdateShop';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateSoldOutItemInputObjectType = {
  /** deprecated，非必填，給 app version 2.290.0 之前的版本使用 */
  isSoldOut?: InputMaybe<Scalars['Boolean']['input']>;
  uuid?: InputMaybe<Scalars['UUID']['input']>;
};

export type UpdateSoldOutItemMutation = {
  __typename?: 'UpdateSoldOutItemMutation';
  soldOutPlatforms?: Maybe<SoldOutPlatforms>;
  updatedSoldOutMenuItemTags?: Maybe<Array<Maybe<UpdateSoldOutItemOutputObjectType>>>;
  updatedSoldOutMenuItems?: Maybe<Array<Maybe<UpdateSoldOutItemOutputObjectType>>>;
};

export type UpdateSoldOutItemOutputObjectType = {
  __typename?: 'UpdateSoldOutItemOutputObjectType';
  /** deprecated, app version 2.290.0 開始的版本後不使用。 True 表示 sold_out_platforms=SoldOutPlatforms.ALL */
  isSoldOut?: Maybe<Scalars['Boolean']['output']>;
  uuid?: Maybe<Scalars['String']['output']>;
};

export type UpdateSpecialReservationDayUnionType = OkOutput | SpecialReservationDayCheckFieldsError | UnhandledError | UuidNotExistsError;

export type UpdateSupplier = {
  __typename?: 'UpdateSupplier';
  result?: Maybe<Scalars['Boolean']['output']>;
};

export type UpdateTakeoutSearchMetaInputObject = {
  declareForCov19?: InputMaybe<Scalars['String']['input']>;
  enabled?: InputMaybe<Scalars['Boolean']['input']>;
  noContactPaymentOnSite?: InputMaybe<Scalars['Boolean']['input']>;
  noContactPaymentOnline?: InputMaybe<Scalars['Boolean']['input']>;
  noContactPickUp?: InputMaybe<Scalars['Boolean']['input']>;
  priceRange?: InputMaybe<RestaurantPriceRange>;
  restaurantCategories?: InputMaybe<Array<InputMaybe<RestaurantCategories>>>;
  sanitationInStore?: InputMaybe<Array<InputMaybe<RestaurantSanitation>>>;
  specialTags?: InputMaybe<Array<InputMaybe<SpecialTag>>>;
};

export type UploadImageInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  imageName?: InputMaybe<Scalars['String']['input']>;
};

export enum UploadMenuStatus {
  Failed = 'FAILED',
  NotAvailable = 'NOT_AVAILABLE',
  NoEvent = 'NO_EVENT',
  Pending = 'PENDING',
  Success = 'SUCCESS',
  ValidationError = 'VALIDATION_ERROR'
}

export type UploadMenuStatusOutput = {
  __typename?: 'UploadMenuStatusOutput';
  latestSuccessTime?: Maybe<Scalars['String']['output']>;
  uploadStatus?: Maybe<UploadMenuStatus>;
};

export type UploadUnusedInvoiceInput = {
  unusedInvoiceList?: InputMaybe<Array<InputMaybe<UnusedInvoiceRow>>>;
};

export type UploadUnusedInvoiceMutation = {
  __typename?: 'UploadUnusedInvoiceMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type UserAllowIntegrationQuery = {
  __typename?: 'UserAllowIntegrationQuery';
  allowSurveySparrow?: Maybe<Scalars['Boolean']['output']>;
};

export type UserBasicInfoMutation = {
  __typename?: 'UserBasicInfoMutation';
  branchPurchasing?: Maybe<BranchPurchasingUserMutation>;
  changeEmailForPasswordReset?: Maybe<ChangeEmailForPasswordResetOutput>;
  changePassword?: Maybe<ChangePasswordOutput>;
};


export type UserBasicInfoMutationChangeEmailForPasswordResetArgs = {
  payload: ChangeEmailForPasswordResetPayload;
};


export type UserBasicInfoMutationChangePasswordArgs = {
  payload: ChangePasswordPayload;
};

/** Settings of current user */
export type UserMutation = {
  __typename?: 'UserMutation';
  basicInfo?: Maybe<UserBasicInfoMutation>;
};

export type UserSignStatusOutput = {
  __typename?: 'UserSignStatusOutput';
  authUserAccount?: Maybe<Scalars['String']['output']>;
  authUserUuid?: Maybe<Scalars['UUID']['output']>;
  signStatus?: Maybe<Scalars['Boolean']['output']>;
};

export type UuidNotExistsError = {
  __typename?: 'UuidNotExistsError';
  message?: Maybe<Scalars['String']['output']>;
};

export type ValidateBusinessInformationMutation = {
  __typename?: 'ValidateBusinessInformationMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ValidateBusinessInformationPayload = {
  contactNumber: Scalars['String']['input'];
  openingHoursPeriods: WeekdayOpeningPeriodInput;
  storeAddress: Scalars['String']['input'];
  storeName: Scalars['String']['input'];
};

export type ValidateFoodpandaMenuMutation = {
  __typename?: 'ValidateFoodpandaMenuMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ValidateFoodpandaMenuTimePeriodMutation = {
  __typename?: 'ValidateFoodpandaMenuTimePeriodMutation';
  ok?: Maybe<Scalars['Boolean']['output']>;
};

export type ValidateFoodpandaTagsAndTagGroupsMutation = {
  __typename?: 'ValidateFoodpandaTagsAndTagGroupsMutation';
  ok?: Maybe<Scalars['Boolean']['output']>;
};

/**
 * Validate web user already login the gmb-binding user
 * Ref: https://developers.google.com/identity/sign-in/web/backend-auth#verify-the-integrity-of-the-id-token
 */
export type ValidateGoogleToken = {
  __typename?: 'ValidateGoogleToken';
  valid?: Maybe<Scalars['Boolean']['output']>;
};

export type ValidateGrabfoodMenuMutation = {
  __typename?: 'ValidateGrabfoodMenuMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ValidateGrabfoodMenuTimePeriodMutation = {
  __typename?: 'ValidateGrabfoodMenuTimePeriodMutation';
  ok?: Maybe<Scalars['Boolean']['output']>;
};

export type ValidateGrabfoodTagsAndTagGroupsMutation = {
  __typename?: 'ValidateGrabfoodTagsAndTagGroupsMutation';
  ok?: Maybe<Scalars['Boolean']['output']>;
};

export type ValidateOnlineOrderingHiddenTagsAndGroupsMutation = {
  __typename?: 'ValidateOnlineOrderingHiddenTagsAndGroupsMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ValidateOpeningAndReservationOrderHoursPeriodsInputObject = {
  openingHoursPeriods?: InputMaybe<Array<InputMaybe<OpeningHoursPeriodInputObject>>>;
  reservationOrderHoursPeriods?: InputMaybe<Array<InputMaybe<OpeningHoursPeriodInputObject>>>;
};

export type ValidateOpeningAndReservationOrderHoursPeriodsMutation = {
  __typename?: 'ValidateOpeningAndReservationOrderHoursPeriodsMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ValidateTagGroupInItemPayload = {
  subTagList: Array<InputMaybe<SubTagInItemPayload>>;
  tagGroupUuid: Scalars['UUID']['input'];
};

export type ValidateTagGroupPayload = {
  maximumSelection?: InputMaybe<Scalars['Int']['input']>;
  menuItemUuids?: InputMaybe<Array<InputMaybe<Scalars['UUID']['input']>>>;
  minimumSelection?: InputMaybe<Scalars['Int']['input']>;
  subTags?: InputMaybe<Array<InputMaybe<SubTagPayload>>>;
};

export type ValidateUbereatsV2MenuMutation = {
  __typename?: 'ValidateUbereatsV2MenuMutation';
  success?: Maybe<Scalars['Boolean']['output']>;
};

export type ValidateUbereatsV2MenuTimePeriodMutation = {
  __typename?: 'ValidateUbereatsV2MenuTimePeriodMutation';
  ok?: Maybe<Scalars['Boolean']['output']>;
};

export type ValidateUbereatsV2TagsAndTagGroupsMutation = {
  __typename?: 'ValidateUbereatsV2TagsAndTagGroupsMutation';
  ok?: Maybe<Scalars['Boolean']['output']>;
};

export enum VendorPaymentMethodTypes {
  ApplePay = 'APPLE_PAY',
  Bank = 'BANK',
  CreditCard = 'CREDIT_CARD',
  GooglePay = 'GOOGLE_PAY',
  Others = 'OTHERS',
  Platform = 'PLATFORM'
}

export type WebUserPreferencesInput = {
  crmMembersListSorting?: InputMaybe<CrmMembersListSortingChoice>;
  inventoryItemsListSorting?: InputMaybe<InventoryOrderByEnum>;
};

export type WebUserPreferencesOutput = {
  __typename?: 'WebUserPreferencesOutput';
  crmMembersListSorting?: Maybe<CrmMembersListSortingChoice>;
  inventoryItemsListSorting?: Maybe<InventoryOrderByEnum>;
};

export enum Weekday {
  Friday = 'FRIDAY',
  Monday = 'MONDAY',
  Saturday = 'SATURDAY',
  Sunday = 'SUNDAY',
  Thursday = 'THURSDAY',
  Tuesday = 'TUESDAY',
  Wednesday = 'WEDNESDAY'
}

export type WeekdayOpeningPeriodInput = {
  friday?: InputMaybe<Array<InputMaybe<OpeningPeriodInput>>>;
  monday?: InputMaybe<Array<InputMaybe<OpeningPeriodInput>>>;
  saturday?: InputMaybe<Array<InputMaybe<OpeningPeriodInput>>>;
  sunday?: InputMaybe<Array<InputMaybe<OpeningPeriodInput>>>;
  thursday?: InputMaybe<Array<InputMaybe<OpeningPeriodInput>>>;
  tuesday?: InputMaybe<Array<InputMaybe<OpeningPeriodInput>>>;
  wednesday?: InputMaybe<Array<InputMaybe<OpeningPeriodInput>>>;
};

export type WeekdayReservationPeriodInput = {
  friday?: InputMaybe<Array<InputMaybe<ReservationPeriodInput>>>;
  monday?: InputMaybe<Array<InputMaybe<ReservationPeriodInput>>>;
  saturday?: InputMaybe<Array<InputMaybe<ReservationPeriodInput>>>;
  sunday?: InputMaybe<Array<InputMaybe<ReservationPeriodInput>>>;
  thursday?: InputMaybe<Array<InputMaybe<ReservationPeriodInput>>>;
  tuesday?: InputMaybe<Array<InputMaybe<ReservationPeriodInput>>>;
  wednesday?: InputMaybe<Array<InputMaybe<ReservationPeriodInput>>>;
};

export type WeekdayReservationPeriodObjectType = {
  __typename?: 'WeekdayReservationPeriodObjectType';
  friday?: Maybe<Array<Maybe<ReservationPeriodObjectType>>>;
  monday?: Maybe<Array<Maybe<ReservationPeriodObjectType>>>;
  saturday?: Maybe<Array<Maybe<ReservationPeriodObjectType>>>;
  sunday?: Maybe<Array<Maybe<ReservationPeriodObjectType>>>;
  thursday?: Maybe<Array<Maybe<ReservationPeriodObjectType>>>;
  tuesday?: Maybe<Array<Maybe<ReservationPeriodObjectType>>>;
  wednesday?: Maybe<Array<Maybe<ReservationPeriodObjectType>>>;
};

export type WifiAnalyseReportQuery = {
  __typename?: 'WifiAnalyseReportQuery';
  wifiReturningAnalysis?: Maybe<Scalars['GenericScalar']['output']>;
  wifiSessionAnalysis?: Maybe<Scalars['GenericScalar']['output']>;
};


export type WifiAnalyseReportQueryWifiReturningAnalysisArgs = {
  queryFilter?: InputMaybe<ReportQueryFilters>;
};


export type WifiAnalyseReportQueryWifiSessionAnalysisArgs = {
  queryFilter?: InputMaybe<ReportQueryFilters>;
};

export type WifiConfigMutation = {
  __typename?: 'WifiConfigMutation';
  updateMacAddress?: Maybe<UpdateMacAddressOutput>;
};


export type WifiConfigMutationUpdateMacAddressArgs = {
  macAddress: Scalars['String']['input'];
};

export type WifiConfigQuery = {
  __typename?: 'WifiConfigQuery';
  macAddress?: Maybe<Scalars['String']['output']>;
};

export type WriteOffDeviceOutput = {
  __typename?: 'WriteOffDeviceOutput';
  deviceAppId?: Maybe<Scalars['String']['output']>;
};

export type IPadSyncMemberListOutput = {
  __typename?: 'iPADSyncMemberListOutput';
  lastUpdateTime?: Maybe<Scalars['String']['output']>;
  members?: Maybe<Array<Maybe<CrmMembersOutput>>>;
};

export type IPfAddOnModuleQuery = {
  __typename?: 'iPFAddOnModuleQuery';
  /** Modules in distinct module types and end_dates. Current + ongoing modules if any, otherwise first expired module. Order by module type desc, end date asc. */
  addOnModules?: Maybe<Array<Maybe<AddOnModuleOutput>>>;
  moduleForSellBrowsing?: Maybe<IPfModuleForSellOutput>;
  /** IPF 剪線時間的欄位。(1) 被剪線的店家，返回剪線日(2) 尚未被剪線的舊店家，返回預計剪線日(3) 不會被剪線 (新店家自始適用新規格)，返回 None */
  oldCustomerOnlineStoreOrderingRequireIpfModuleEnforcementDate?: Maybe<Scalars['Date']['output']>;
};


export type IPfAddOnModuleQueryAddOnModulesArgs = {
  moduleTypes?: InputMaybe<Array<InputMaybe<IPfModuleType>>>;
};


export type IPfAddOnModuleQueryModuleForSellBrowsingArgs = {
  moduleType?: InputMaybe<IPfModuleType>;
};

export type IPfModuleForSellOutput = {
  __typename?: 'iPFModuleForSellOutput';
  browsableAddOnModules?: Maybe<Array<Maybe<BrowsableAddOnModuleOutput>>>;
  monthlyAverageBucketUsageCount?: Maybe<Scalars['Int']['output']>;
};

export enum IPfModulePlan {
  HkReservation_300Plan = 'hk_reservation_300_plan',
  HkReservation_600Plan = 'hk_reservation_600_plan',
  HkReservation_1200Plan = 'hk_reservation_1200_plan',
  HkReservationFreePlan = 'hk_reservation_free_plan',
  OnlineStoreOrdering_300DollarPlan = 'online_store_ordering_300_dollar_plan',
  OnlineStoreOrdering_600DollarPlan = 'online_store_ordering_600_dollar_plan',
  OnlineStoreOrdering_900DollarPlan = 'online_store_ordering_900_dollar_plan',
  OnlineStoreOrdering_1200DollarPlan = 'online_store_ordering_1200_dollar_plan',
  OnlineStoreOrdering_1600DollarPlan = 'online_store_ordering_1600_dollar_plan',
  OnlineStoreOrdering_3000DollarPlan = 'online_store_ordering_3000_dollar_plan',
  OnlineStoreOrdering_4000DollarPlan = 'online_store_ordering_4000_dollar_plan',
  OnlineStoreOrdering_5000DollarPlan = 'online_store_ordering_5000_dollar_plan',
  OnlineStoreOrdering_6000DollarPlan = 'online_store_ordering_6000_dollar_plan',
  OnlineStoreOrdering_7000DollarPlan = 'online_store_ordering_7000_dollar_plan',
  OnlineStoreOrdering_14000DollarPlan = 'online_store_ordering_14000_dollar_plan',
  OnlineStoreOrderingFreePlan = 'online_store_ordering_free_plan',
  Reservation_750DollarPlan = 'reservation_750_dollar_plan',
  Reservation_1200DollarPlan = 'reservation_1200_dollar_plan',
  Reservation_2280DollarPlan = 'reservation_2280_dollar_plan',
  Reservation_4200DollarPlan = 'reservation_4200_dollar_plan',
  Reservation_7200DollarPlan = 'reservation_7200_dollar_plan',
  ReservationFreePlan = 'reservation_free_plan',
  SgReservation_100Plan = 'sg_reservation_100_plan',
  SgReservation_300Plan = 'sg_reservation_300_plan',
  SgReservation_600Plan = 'sg_reservation_600_plan',
  SgReservation_1200Plan = 'sg_reservation_1200_plan',
  SgReservationFreePlan = 'sg_reservation_free_plan'
}

export enum IPfModuleStatus {
  Activated = 'activated',
  Disabled = 'disabled',
  Expired = 'expired',
  /** Only for Foodpanda */
  GracePeriod = 'grace_period',
  NearlyDisabled = 'nearly_disabled',
  StartingSoon = 'starting_soon'
}

export enum IPfModuleTag {
  InEffect = 'in_effect',
  Recommended = 'recommended'
}

export enum IPfModuleType {
  Foodpanda = 'foodpanda',
  OnlineStoreOrdering = 'online_store_ordering',
  Reservation = 'reservation'
}

export type MenuItemItemCreateMutationMutationVariables = Exact<{
  payload: CreateMenuItemPayload;
}>;


export type MenuItemItemCreateMutationMutation = { __typename?: 'Mutation', restaurant?: { __typename?: 'MutationRestaurant', settings?: { __typename?: 'SettingsMutation', menu?: { __typename?: 'MenuMutation', createMenuItem?: { __typename?: 'MenuItemType', uuid: string } | null } | null } | null } | null };

export type MenuItemItemDeleteMutationMutationVariables = Exact<{
  uuid: Scalars['UUID']['input'];
}>;


export type MenuItemItemDeleteMutationMutation = { __typename?: 'Mutation', restaurant?: { __typename?: 'MutationRestaurant', settings?: { __typename?: 'SettingsMutation', menu?: { __typename?: 'MenuMutation', deleteMenuItem?: { __typename?: 'MenuItemType', uuid: string } | null } | null } | null } | null };

export type MenuItemListingQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type MenuItemListingQueryQuery = { __typename?: 'Query', restaurant?: { __typename: 'QueryRestaurant', settings?: { __typename: 'SettingsQuery', menu?: { __typename: 'MenuQuery', menuItemCategories?: Array<{ __typename: 'MenuItemCategoryType', uuid: string, name: string, sortingIndex?: number | null, isFromHq?: boolean | null, _id: string, menuItems?: Array<{ __typename: 'MenuItemType', uuid: string, name: string, price?: string | null, type: string, sortingIndex?: number | null, enabled: boolean, isIncomplete?: boolean | null, menuItemCategoryUuid?: string | null, isFromHq?: boolean | null, picture?: string | null, _id: string, comboItemCategoryUuidsMappedWithOnlineOrdering?: { __typename: 'ComboItemCategoryUuidsMappedWithOnlineOrderingObjectType', ubereats?: Array<string | null> | null } | null, onlineRestaurantMenuItem: Array<{ __typename: 'OnlineRestaurantMenuItemOutput', uuid: string }> } | null> | null } | null> | null } | null } | null } | null };

export type MenuItemCategoryBasicFieldsFragment = { __typename: 'MenuItemCategoryType', uuid: string, name: string, sortingIndex?: number | null, isFromHq?: boolean | null, _id: string };

export type MenuItemitemBasicFieldsFragment = { __typename: 'MenuItemType', uuid: string, name: string, price?: string | null, type: string, sortingIndex?: number | null, enabled: boolean, isIncomplete?: boolean | null, menuItemCategoryUuid?: string | null, isFromHq?: boolean | null, picture?: string | null, _id: string, comboItemCategoryUuidsMappedWithOnlineOrdering?: { __typename: 'ComboItemCategoryUuidsMappedWithOnlineOrderingObjectType', ubereats?: Array<string | null> | null } | null, onlineRestaurantMenuItem: Array<{ __typename: 'OnlineRestaurantMenuItemOutput', uuid: string }> };

export type MenuItemItemRecordQueryQueryVariables = Exact<{
  uuid: Scalars['UUID']['input'];
}>;


export type MenuItemItemRecordQueryQuery = { __typename?: 'Query', restaurant?: { __typename?: 'QueryRestaurant', settings?: { __typename?: 'SettingsQuery', menu?: { __typename?: 'MenuQuery', menuItem?: { __typename?: 'MenuItemType', picture?: string | null, croppedInfo?: Record<string, any> | null, sortingIndex?: number | null, externalId?: string | null, customizedTaxEnabled: boolean, customizedTaxType?: string | null, customizedTaxRate?: string | null, menuItemTagSortingType?: MenuItemTagSortingType | null, uuid: string, name: string, price?: string | null, type: string, enabled: boolean, isIncomplete?: boolean | null, menuItemCategoryUuid?: string | null, isFromHq?: boolean | null, _id: string, originalPicture?: { __typename?: 'OriginalItemPictureOutput', uuid: string, pictureFilename?: string | null } | null, comboItemCategories?: Array<{ __typename?: 'ComboItemCategoryType', allowRepeatableSelection: boolean, minimumSelection: number, maximumSelection: number, uuid: string, name: string, comboMenuItemSortingType?: ComboMenuItemSortingType | null, _id: string, comboMenuItems?: Array<{ __typename?: 'ComboMenuItemType', uuid: string, price?: string | null, menuItemUuid?: string | null, onlineRestaurantMenuItem: Array<{ __typename?: 'OnlineRestaurantMenuItemOutput', uuid: string, visible: boolean }>, instoreOrderingMenuItem: Array<{ __typename?: 'OnlineOrderingMenuItemOutput', uuid: string, visible: boolean }>, ubereatsV2MenuItem?: { __typename?: 'UbereatsV2MenuItemOutput', uuid: string, visible: boolean } | null } | null> | null, comboMenuItemUuidsMappedWithOnlineOrdering?: { __typename?: 'ComboMenuItemUuidsMappedWithOnlineOrdering', ubereats?: Array<string | null> | null } | null } | null> | null, onlineRestaurantMenuItem: Array<{ __typename?: 'OnlineRestaurantMenuItemOutput', uuid: string }>, grabfoodMenuItem: Array<{ __typename?: 'GrabfoodMenuItemOutput', uuid: string }>, ubereatsMenuItem: Array<{ __typename?: 'UbereatsMenuItemOutput', uuid: string }>, ubereatsV2MenuItem?: { __typename?: 'UbereatsV2MenuItemOutput', uuid: string } | null, foodpandaMenuItem: Array<{ __typename?: 'FoodpandaMenuItemOutput', uuid: string }>, itemTagRelationshipList?: Array<{ __typename?: 'ItemTagRelationshipType', followingSeparatorCount?: number | null, tagLikeObject?: { __typename: 'MenuItemTagInItemType', menuItemTagUuid?: string | null } | { __typename: 'TagGroupInItemType', tagGroupUuid?: string | null, subTagInItems?: Array<{ __typename?: 'SubTagInItemType', subTagUuid?: string | null, enabledInformation?: { __typename?: 'SubTagInItemEnabledInformationType', subTagInItemEnabled?: boolean | null } | null } | null> | null } | null } | null> | null, comboItemCategoryUuidsMappedWithOnlineOrdering?: { __typename?: 'ComboItemCategoryUuidsMappedWithOnlineOrderingObjectType', ubereats?: Array<string | null> | null } | null } | null } | null } | null } | null };

export type MenuItemDetailBasicFieldsFragment = { __typename?: 'MenuItemType', uuid: string, name: string, price?: string | null, type: string, sortingIndex?: number | null, enabled: boolean, isIncomplete?: boolean | null, menuItemCategoryUuid?: string | null, isFromHq?: boolean | null, picture?: string | null, _id: string, comboItemCategoryUuidsMappedWithOnlineOrdering?: { __typename?: 'ComboItemCategoryUuidsMappedWithOnlineOrderingObjectType', ubereats?: Array<string | null> | null } | null, onlineRestaurantMenuItem: Array<{ __typename?: 'OnlineRestaurantMenuItemOutput', uuid: string }> };

export type ComboItemCategoryFieldsFragment = { __typename?: 'ComboItemCategoryType', uuid: string, name: string, comboMenuItemSortingType?: ComboMenuItemSortingType | null, _id: string, comboMenuItems?: Array<{ __typename?: 'ComboMenuItemType', uuid: string, price?: string | null, menuItemUuid?: string | null, onlineRestaurantMenuItem: Array<{ __typename?: 'OnlineRestaurantMenuItemOutput', uuid: string, visible: boolean }>, instoreOrderingMenuItem: Array<{ __typename?: 'OnlineOrderingMenuItemOutput', uuid: string, visible: boolean }>, ubereatsV2MenuItem?: { __typename?: 'UbereatsV2MenuItemOutput', uuid: string, visible: boolean } | null } | null> | null, comboMenuItemUuidsMappedWithOnlineOrdering?: { __typename?: 'ComboMenuItemUuidsMappedWithOnlineOrdering', ubereats?: Array<string | null> | null } | null };

export type MenuItemItemEditMutationMutationVariables = Exact<{
  uuid: Scalars['UUID']['input'];
  payload: UpdateMenuItemPayload;
}>;


export type MenuItemItemEditMutationMutation = { __typename?: 'Mutation', restaurant?: { __typename?: 'MutationRestaurant', settings?: { __typename?: 'SettingsMutation', menu?: { __typename?: 'MenuMutation', updateMenuItem?: { __typename?: 'MenuItemType', uuid: string } | null } | null } | null } | null };

export const MenuItemCategoryBasicFieldsFragmentDoc = gql`
    fragment menuItemCategoryBasicFields on MenuItemCategoryType {
  _id: uuid
  uuid
  name
  sortingIndex
  isFromHq
  __typename
}
    `;
export const MenuItemitemBasicFieldsFragmentDoc = gql`
    fragment menuItemitemBasicFields on MenuItemType {
  _id: uuid
  uuid
  name
  price
  type
  sortingIndex
  enabled
  isIncomplete
  menuItemCategoryUuid
  isFromHq
  picture
  comboItemCategoryUuidsMappedWithOnlineOrdering {
    ubereats
    __typename
  }
  onlineRestaurantMenuItem {
    uuid
    __typename
  }
  __typename
}
    `;
export const MenuItemDetailBasicFieldsFragmentDoc = gql`
    fragment menuItemDetailBasicFields on MenuItemType {
  _id: uuid
  uuid
  name
  price
  type
  sortingIndex
  enabled
  isIncomplete
  menuItemCategoryUuid
  isFromHq
  picture
  comboItemCategoryUuidsMappedWithOnlineOrdering {
    ubereats
  }
  onlineRestaurantMenuItem {
    uuid
  }
}
    `;
export const ComboItemCategoryFieldsFragmentDoc = gql`
    fragment comboItemCategoryFields on ComboItemCategoryType {
  _id: uuid
  uuid
  name
  comboMenuItems {
    uuid
    price
    menuItemUuid
    onlineRestaurantMenuItem {
      uuid
      visible
    }
    instoreOrderingMenuItem {
      uuid
      visible
    }
    ubereatsV2MenuItem {
      uuid
      visible
    }
  }
  comboMenuItemUuidsMappedWithOnlineOrdering {
    ubereats
  }
  comboMenuItemSortingType
}
    `;
export const MenuItemItemCreateMutationDocument = gql`
    mutation menuItemItemCreateMutation($payload: CreateMenuItemPayload!) {
  restaurant {
    settings {
      menu {
        createMenuItem(payload: $payload) {
          uuid
        }
      }
    }
  }
}
    `;
export const MenuItemItemDeleteMutationDocument = gql`
    mutation menuItemItemDeleteMutation($uuid: UUID!) {
  restaurant {
    settings {
      menu {
        deleteMenuItem(uuid: $uuid) {
          uuid
        }
      }
    }
  }
}
    `;
export const MenuItemListingQueryDocument = gql`
    query menuItemListingQuery {
  restaurant {
    settings {
      menu {
        menuItemCategories {
          ...menuItemCategoryBasicFields
          menuItems {
            ...menuItemitemBasicFields
            __typename
          }
          __typename
        }
        __typename
      }
      __typename
    }
    __typename
  }
}
    ${MenuItemCategoryBasicFieldsFragmentDoc}
${MenuItemitemBasicFieldsFragmentDoc}`;
export const MenuItemItemRecordQueryDocument = gql`
    query menuItemItemRecordQuery($uuid: UUID!) {
  restaurant {
    settings {
      menu {
        menuItem(uuid: $uuid) {
          ...menuItemDetailBasicFields
          picture
          croppedInfo
          originalPicture {
            uuid
            pictureFilename
          }
          sortingIndex
          externalId
          comboItemCategories {
            ...comboItemCategoryFields
            allowRepeatableSelection
            minimumSelection
            maximumSelection
          }
          customizedTaxEnabled
          customizedTaxType
          customizedTaxRate
          menuItemTagSortingType
          onlineRestaurantMenuItem {
            uuid
          }
          grabfoodMenuItem {
            uuid
          }
          ubereatsMenuItem {
            uuid
          }
          ubereatsV2MenuItem {
            uuid
          }
          foodpandaMenuItem {
            uuid
          }
          itemTagRelationshipList {
            followingSeparatorCount
            tagLikeObject {
              ... on MenuItemTagInItemType {
                __typename
                menuItemTagUuid
              }
              ... on TagGroupInItemType {
                __typename
                tagGroupUuid
                subTagInItems {
                  subTagUuid
                  enabledInformation {
                    subTagInItemEnabled
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
    ${MenuItemDetailBasicFieldsFragmentDoc}
${ComboItemCategoryFieldsFragmentDoc}`;
export const MenuItemItemEditMutationDocument = gql`
    mutation menuItemItemEditMutation($uuid: UUID!, $payload: UpdateMenuItemPayload!) {
  restaurant {
    settings {
      menu {
        updateMenuItem(uuid: $uuid, payload: $payload) {
          uuid
        }
      }
    }
  }
}
    `;

export type SdkFunctionWrapper = <T>(action: (requestHeaders?:Record<string, string>) => Promise<T>, operationName: string, operationType?: string, variables?: any) => Promise<T>;


const defaultWrapper: SdkFunctionWrapper = (action, _operationName, _operationType, _variables) => action();

export function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {
  return {
    menuItemItemCreateMutation(variables: MenuItemItemCreateMutationMutationVariables, requestHeaders?: GraphQLClientRequestHeaders, signal?: RequestInit['signal']): Promise<MenuItemItemCreateMutationMutation> {
      return withWrapper((wrappedRequestHeaders) => client.request<MenuItemItemCreateMutationMutation>({ document: MenuItemItemCreateMutationDocument, variables, requestHeaders: { ...requestHeaders, ...wrappedRequestHeaders }, signal }), 'menuItemItemCreateMutation', 'mutation', variables);
    },
    menuItemItemDeleteMutation(variables: MenuItemItemDeleteMutationMutationVariables, requestHeaders?: GraphQLClientRequestHeaders, signal?: RequestInit['signal']): Promise<MenuItemItemDeleteMutationMutation> {
      return withWrapper((wrappedRequestHeaders) => client.request<MenuItemItemDeleteMutationMutation>({ document: MenuItemItemDeleteMutationDocument, variables, requestHeaders: { ...requestHeaders, ...wrappedRequestHeaders }, signal }), 'menuItemItemDeleteMutation', 'mutation', variables);
    },
    menuItemListingQuery(variables?: MenuItemListingQueryQueryVariables, requestHeaders?: GraphQLClientRequestHeaders, signal?: RequestInit['signal']): Promise<MenuItemListingQueryQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<MenuItemListingQueryQuery>({ document: MenuItemListingQueryDocument, variables, requestHeaders: { ...requestHeaders, ...wrappedRequestHeaders }, signal }), 'menuItemListingQuery', 'query', variables);
    },
    menuItemItemRecordQuery(variables: MenuItemItemRecordQueryQueryVariables, requestHeaders?: GraphQLClientRequestHeaders, signal?: RequestInit['signal']): Promise<MenuItemItemRecordQueryQuery> {
      return withWrapper((wrappedRequestHeaders) => client.request<MenuItemItemRecordQueryQuery>({ document: MenuItemItemRecordQueryDocument, variables, requestHeaders: { ...requestHeaders, ...wrappedRequestHeaders }, signal }), 'menuItemItemRecordQuery', 'query', variables);
    },
    menuItemItemEditMutation(variables: MenuItemItemEditMutationMutationVariables, requestHeaders?: GraphQLClientRequestHeaders, signal?: RequestInit['signal']): Promise<MenuItemItemEditMutationMutation> {
      return withWrapper((wrappedRequestHeaders) => client.request<MenuItemItemEditMutationMutation>({ document: MenuItemItemEditMutationDocument, variables, requestHeaders: { ...requestHeaders, ...wrappedRequestHeaders }, signal }), 'menuItemItemEditMutation', 'mutation', variables);
    }
  };
}
export type Sdk = ReturnType<typeof getSdk>;